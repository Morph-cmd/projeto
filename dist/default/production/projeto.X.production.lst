

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 02 17:09:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 17/10/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataCOMRAM
    94   0019FC                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for kpDebounce@F15
    98   0019FC  02                 	db	2
    99   0019FD  03                 	db	3
   100   0019FE  05                 	db	5
   101   0019FF  04                 	db	4
   102   001A00  01                 	db	1
   103                           
   104                           ;initializer for _ev
   105   001A01  0062               	dw	98
   106                           
   107                           	psect	idataBANK0
   108   0019F0                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _msgs
   112   0019F0  73                 	db	low STR_1
   113   0019F1  43                 	db	low STR_2
   114   0019F2  73                 	db	low STR_1
   115   0019F3  43                 	db	low STR_2
   116   0019F4  53                 	db	low STR_5
   117   0019F5  33                 	db	low STR_6
   118   0019F6  53                 	db	low STR_5
   119   0019F7  33                 	db	low STR_6
   120   0019F8  63                 	db	low STR_9
   121   0019F9  83                 	db	low STR_10
   122   0019FA  00                 	db	0
   123   0019FB  00                 	db	0
   124                           
   125                           	psect	smallconst
   126   000800                     __psmallconst:
   127                           	callstack 0
   128   000800  00                 	db	0
   129   000801                     _valor@ssd$F319:
   130                           	callstack 0
   131   000801  3F                 	db	63
   132   000802  06                 	db	6
   133   000803  5B                 	db	91
   134   000804  4F                 	db	79
   135   000805  66                 	db	102
   136   000806  6D                 	db	109
   137   000807  7D                 	db	125
   138   000808  07                 	db	7
   139   000809  7F                 	db	127
   140   00080A  6F                 	db	111
   141   00080B  77                 	db	119
   142   00080C  7C                 	db	124
   143   00080D  39                 	db	57
   144   00080E  5E                 	db	94
   145   00080F  79                 	db	121
   146   000810  71                 	db	113
   147   000811                     __end_of_valor@ssd$F319:
   148                           	callstack 0
   149   000000                     _PORTA	set	3968
   150   000000                     _LATA	set	3977
   151   000000                     _TRISA	set	3986
   152   000000                     _PORTE	set	3972
   153   000000                     _PORTD	set	3971
   154   000000                     _PORTC	set	3970
   155   000000                     _PORTB	set	3969
   156   000000                     _TRISE	set	3990
   157   000000                     _TRISD	set	3989
   158   000000                     _TRISC	set	3988
   159   000000                     _TRISB	set	3987
   160   000811  45                 	db	69	;'E'
   161   000812  6E                 	db	110	;'n'
   162   000813  67                 	db	103	;'g'
   163   000814  6C                 	db	108	;'l'
   164   000815  69                 	db	105	;'i'
   165   000816  73                 	db	115	;'s'
   166   000817  68                 	db	104	;'h'
   167   000818  20                 	db	32
   168   000819  20                 	db	32
   169   00081A  20                 	db	32
   170   00081B  20                 	db	32
   171   00081C  20                 	db	32
   172   00081D  20                 	db	32
   173   00081E  20                 	db	32
   174   00081F  20                 	db	32
   175   000820  20                 	db	32
   176   000821  00                 	db	0
   177   000822  50                 	db	80	;'P'
   178   000823  6F                 	db	111	;'o'
   179   000824  72                 	db	114	;'r'
   180   000825  74                 	db	116	;'t'
   181   000826  75                 	db	117	;'u'
   182   000827  67                 	db	103	;'g'
   183   000828  75                 	db	117	;'u'
   184   000829  65                 	db	101	;'e'
   185   00082A  73                 	db	115	;'s'
   186   00082B  20                 	db	32
   187   00082C  20                 	db	32
   188   00082D  20                 	db	32
   189   00082E  20                 	db	32
   190   00082F  20                 	db	32
   191   000830  20                 	db	32
   192   000831  20                 	db	32
   193   000832  00                 	db	0
   194   000833                     STR_6:
   195   000833  43                 	db	67	;'C'
   196   000834  68                 	db	104	;'h'
   197   000835  61                 	db	97	;'a'
   198   000836  6E                 	db	110	;'n'
   199   000837  67                 	db	103	;'g'
   200   000838  65                 	db	101	;'e'
   201   000839  20                 	db	32
   202   00083A  74                 	db	116	;'t'
   203   00083B  69                 	db	105	;'i'
   204   00083C  6D                 	db	109	;'m'
   205   00083D  65                 	db	101	;'e'
   206   00083E  20                 	db	32
   207   00083F  20                 	db	32
   208   000840  20                 	db	32
   209   000841  20                 	db	32
   210   000842  00                 	db	0
   211   000843                     STR_2:
   212   000843  43                 	db	67	;'C'
   213   000844  68                 	db	104	;'h'
   214   000845  61                 	db	97	;'a'
   215   000846  6E                 	db	110	;'n'
   216   000847  67                 	db	103	;'g'
   217   000848  65                 	db	101	;'e'
   218   000849  20                 	db	32
   219   00084A  61                 	db	97	;'a'
   220   00084B  6C                 	db	108	;'l'
   221   00084C  61                 	db	97	;'a'
   222   00084D  72                 	db	114	;'r'
   223   00084E  6D                 	db	109	;'m'
   224   00084F  20                 	db	32
   225   000850  20                 	db	32
   226   000851  20                 	db	32
   227   000852  00                 	db	0
   228   000853                     STR_5:
   229   000853  41                 	db	65	;'A'
   230   000854  6C                 	db	108	;'l'
   231   000855  74                 	db	116	;'t'
   232   000856  65                 	db	101	;'e'
   233   000857  72                 	db	114	;'r'
   234   000858  61                 	db	97	;'a'
   235   000859  72                 	db	114	;'r'
   236   00085A  20                 	db	32
   237   00085B  74                 	db	116	;'t'
   238   00085C  65                 	db	101	;'e'
   239   00085D  6D                 	db	109	;'m'
   240   00085E  70                 	db	112	;'p'
   241   00085F  6F                 	db	111	;'o'
   242   000860  20                 	db	32
   243   000861  20                 	db	32
   244   000862  00                 	db	0
   245   000863                     STR_9:
   246   000863  41                 	db	65	;'A'
   247   000864  6C                 	db	108	;'l'
   248   000865  74                 	db	116	;'t'
   249   000866  65                 	db	101	;'e'
   250   000867  72                 	db	114	;'r'
   251   000868  61                 	db	97	;'a'
   252   000869  72                 	db	114	;'r'
   253   00086A  20                 	db	32
   254   00086B  69                 	db	105	;'i'
   255   00086C  64                 	db	100	;'d'
   256   00086D  69                 	db	105	;'i'
   257   00086E  6F                 	db	111	;'o'
   258   00086F  6D                 	db	109	;'m'
   259   000870  61                 	db	97	;'a'
   260   000871  20                 	db	32
   261   000872  00                 	db	0
   262   000873                     STR_1:
   263   000873  41                 	db	65	;'A'
   264   000874  6C                 	db	108	;'l'
   265   000875  74                 	db	116	;'t'
   266   000876  65                 	db	101	;'e'
   267   000877  72                 	db	114	;'r'
   268   000878  61                 	db	97	;'a'
   269   000879  72                 	db	114	;'r'
   270   00087A  20                 	db	32
   271   00087B  61                 	db	97	;'a'
   272   00087C  6C                 	db	108	;'l'
   273   00087D  61                 	db	97	;'a'
   274   00087E  72                 	db	114	;'r'
   275   00087F  6D                 	db	109	;'m'
   276   000880  65                 	db	101	;'e'
   277   000881  20                 	db	32
   278   000882  00                 	db	0
   279   000883                     STR_10:
   280   000883  43                 	db	67	;'C'
   281   000884  68                 	db	104	;'h'
   282   000885  61                 	db	97	;'a'
   283   000886  6E                 	db	110	;'n'
   284   000887  67                 	db	103	;'g'
   285   000888  65                 	db	101	;'e'
   286   000889  20                 	db	32
   287   00088A  6C                 	db	108	;'l'
   288   00088B  61                 	db	97	;'a'
   289   00088C  6E                 	db	110	;'n'
   290   00088D  67                 	db	103	;'g'
   291   00088E  75                 	db	117	;'u'
   292   00088F  61                 	db	97	;'a'
   293   000890  67                 	db	103	;'g'
   294   000891  65                 	db	101	;'e'
   295   000892  00                 	db	0
   296   000893                     STR_11:
   297   000893  20                 	db	32
   298   000894  20                 	db	32
   299   000895  20                 	db	32
   300   000896  20                 	db	32
   301   000897  20                 	db	32
   302   000898  20                 	db	32
   303   000899  20                 	db	32
   304   00089A  20                 	db	32
   305   00089B  20                 	db	32
   306   00089C  20                 	db	32
   307   00089D  20                 	db	32
   308   00089E  00                 	db	0
   309   00089F  00                 	db	0	; dummy byte at the end
   310   000000                     
   311                           ; #config settings
   312                           
   313                           	psect	cinit
   314   0014E0                     __pcinit:
   315                           	callstack 0
   316   0014E0                     start_initialization:
   317                           	callstack 0
   318   0014E0                     __initialization:
   319                           	callstack 0
   320                           
   321                           ; Initialize objects allocated to BANK0 (12 bytes)
   322                           ; load TBLPTR registers with __pidataBANK0
   323   0014E0  0EF0               	movlw	low __pidataBANK0
   324   0014E2  6EF6               	movwf	tblptrl,c
   325   0014E4  0E19               	movlw	high __pidataBANK0
   326   0014E6  6EF7               	movwf	tblptrh,c
   327   0014E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   328   0014EA  6EF8               	movwf	tblptru,c
   329   0014EC  EE00  F060         	lfsr	0,__pdataBANK0
   330   0014F0  EE10 F00C          	lfsr	1,12
   331   0014F4                     copy_data0:
   332   0014F4  0009               	tblrd		*+
   333   0014F6  CFF5 FFEE          	movff	tablat,postinc0
   334   0014FA  50E5               	movf	postdec1,w,c
   335   0014FC  50E1               	movf	fsr1l,w,c
   336   0014FE  E1FA               	bnz	copy_data0
   337                           
   338                           ; Initialize objects allocated to COMRAM (7 bytes)
   339                           ; load TBLPTR registers with __pidataCOMRAM
   340   001500  0EFC               	movlw	low __pidataCOMRAM
   341   001502  6EF6               	movwf	tblptrl,c
   342   001504  0E19               	movlw	high __pidataCOMRAM
   343   001506  6EF7               	movwf	tblptrh,c
   344   001508  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   345   00150A  6EF8               	movwf	tblptru,c
   346   00150C  EE00  F052         	lfsr	0,__pdataCOMRAM
   347   001510  EE10 F007          	lfsr	1,7
   348   001514                     copy_data1:
   349   001514  0009               	tblrd		*+
   350   001516  CFF5 FFEE          	movff	tablat,postinc0
   351   00151A  50E5               	movf	postdec1,w,c
   352   00151C  50E1               	movf	fsr1l,w,c
   353   00151E  E1FA               	bnz	copy_data1
   354                           
   355                           ; Clear objects allocated to COMRAM (45 bytes)
   356   001520  EE00  F001         	lfsr	0,__pbssCOMRAM
   357   001524  0E2D               	movlw	45
   358   001526                     clear_0:
   359   001526  6AEE               	clrf	postinc0,c
   360   001528  06E8               	decf	wreg,f,c
   361   00152A  E1FD               	bnz	clear_0
   362   00152C                     end_of_initialization:
   363                           	callstack 0
   364   00152C                     __end_of__initialization:
   365                           	callstack 0
   366   00152C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   367   00152E  6EF8               	movwf	tblptru,c
   368   001530  0100               	movlb	0
   369   001532  EFC5  F00A         	goto	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMRAM
   372   000001                     __pbssCOMRAM:
   373                           	callstack 0
   374   000001                     	ds	5
   375   000006                     _t:
   376                           	callstack 0
   377   000006                     	ds	4
   378   00000A                     _time:
   379                           	callstack 0
   380   00000A                     	ds	2
   381   00000C                     	ds	2
   382   00000E                     	ds	2
   383   000010                     _key:
   384                           	callstack 0
   385   000010                     	ds	2
   386   000012                     _key_ant:
   387                           	callstack 0
   388   000012                     	ds	2
   389   000014                     _ev_ant:
   390                           	callstack 0
   391   000014                     	ds	2
   392   000016                     _index:
   393                           	callstack 0
   394   000016                     	ds	1
   395   000017                     _alarmLevelLow:
   396                           	callstack 0
   397   000017                     	ds	1
   398   000018                     _alarmLevelHigh:
   399                           	callstack 0
   400   000018                     	ds	1
   401   000019                     _language:
   402                           	callstack 0
   403   000019                     	ds	1
   404   00001A                     _state:
   405                           	callstack 0
   406   00001A                     	ds	1
   407   00001B                     _estado_ant:
   408                           	callstack 0
   409   00001B                     	ds	1
   410   00001C                     _prot_ready:
   411                           	callstack 0
   412   00001C                     	ds	1
   413   00001D                     _v3:
   414                           	callstack 0
   415   00001D                     	ds	1
   416   00001E                     _v2:
   417                           	callstack 0
   418   00001E                     	ds	1
   419   00001F                     _v1:
   420                           	callstack 0
   421   00001F                     	ds	1
   422   000020                     _v0:
   423                           	callstack 0
   424   000020                     	ds	1
   425   000021                     _display:
   426                           	callstack 0
   427   000021                     	ds	1
   428   000022                     _started:
   429                           	callstack 0
   430   000022                     	ds	1
   431   000023                     _de:
   432                           	callstack 0
   433   000023                     	ds	1
   434   000024                     kpDebounce@valorAntigo:
   435                           	callstack 0
   436   000024                     	ds	1
   437   000025                     kpDebounce@valorNovo:
   438                           	callstack 0
   439   000025                     	ds	1
   440   000026                     kpDebounce@tempo:
   441                           	callstack 0
   442   000026                     	ds	1
   443   000027                     _valor:
   444                           	callstack 0
   445   000027                     	ds	1
   446   000028                     _prot:
   447                           	callstack 0
   448   000028                     	ds	6
   449                           
   450                           	psect	dataCOMRAM
   451   000052                     __pdataCOMRAM:
   452                           	callstack 0
   453   000052                     kpDebounce@F15:
   454                           	callstack 0
   455   000052                     	ds	5
   456   000057                     	ds	2
   457                           
   458                           	psect	dataBANK0
   459   000060                     __pdataBANK0:
   460                           	callstack 0
   461   000060                     _msgs:
   462                           	callstack 0
   463   000060                     	ds	12
   464                           
   465                           	psect	cstackCOMRAM
   466   00002E                     __pcstackCOMRAM:
   467                           	callstack 0
   468   00002E                     ?_adcRead:
   469                           	callstack 0
   470   00002E                     ?_digitalRead:
   471                           	callstack 0
   472   00002E                     ?___awdiv:
   473                           	callstack 0
   474   00002E                     Delay40us@j:
   475                           	callstack 0
   476   00002E                     Delay2ms@j:
   477                           	callstack 0
   478   00002E                     lcdCommand4bits@data:
   479                           	callstack 0
   480   00002E                     digitalWrite@pin:
   481                           	callstack 0
   482   00002E                     digitalRead@pin:
   483                           	callstack 0
   484   00002E                     pinMode@pin:
   485                           	callstack 0
   486   00002E                     ___awdiv@dividend:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x0
   490   00002E                     	ds	1
   491   00002F                     Delay2ms@k:
   492                           	callstack 0
   493   00002F                     lcdCommand4bits@cmd:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x1
   497   00002F                     	ds	1
   498   000030                     ??_digitalRead:
   499   000030                     lcdCommand@cmd:
   500                           	callstack 0
   501   000030                     lcdData@valor:
   502                           	callstack 0
   503   000030                     adcRead@ADvalor:
   504                           	callstack 0
   505   000030                     digitalWrite@value:
   506                           	callstack 0
   507   000030                     pinMode@type:
   508                           	callstack 0
   509   000030                     ___awdiv@divisor:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x2
   513   000030                     	ds	1
   514   000031                     lcdInit@i:
   515                           	callstack 0
   516   000031                     setState@newState:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x3
   520   000031                     	ds	1
   521   000032                     ??_digitalWrite:
   522   000032                     ??_pinMode:
   523   000032                     ___awdiv@counter:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x4
   527   000032                     	ds	1
   528   000033                     ___awdiv@sign:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x5
   532   000033                     	ds	1
   533   000034                     i2c_write_bit@bit:
   534                           	callstack 0
   535   000034                     i2c_read_bit@bit:
   536                           	callstack 0
   537   000034                     ___awdiv@quotient:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x6
   541   000034                     	ds	1
   542   000035                     i2cWriteByte@send_stop:
   543                           	callstack 0
   544   000035                     i2cReadByte@send_stop:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x7
   548   000035                     	ds	1
   549   000036                     ??_i2cReadByte:
   550   000036                     ?___wmul:
   551                           	callstack 0
   552   000036                     ?___awmod:
   553                           	callstack 0
   554   000036                     i2cWriteByte@byte:
   555                           	callstack 0
   556   000036                     ___wmul@multiplier:
   557                           	callstack 0
   558   000036                     ___awmod@dividend:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x8
   562   000036                     	ds	1
   563   000037                     i2cWriteByte@send_start:
   564                           	callstack 0
   565   000037                     i2cReadByte@nack:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x9
   569   000037                     	ds	1
   570   000038                     i2cWriteByte@bit:
   571                           	callstack 0
   572   000038                     i2cReadByte@bit:
   573                           	callstack 0
   574   000038                     ___wmul@multiplicand:
   575                           	callstack 0
   576   000038                     ___awmod@divisor:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0xA
   580   000038                     	ds	2
   581   00003A                     i2cReadByte@byte:
   582                           	callstack 0
   583   00003A                     ___awmod@counter:
   584                           	callstack 0
   585   00003A                     ___wmul@product:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0xC
   589   00003A                     	ds	1
   590   00003B                     ?_dsReadData:
   591                           	callstack 0
   592   00003B                     ___awmod@sign:
   593                           	callstack 0
   594   00003B                     dsReadData@address:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xD
   598   00003B                     	ds	1
   599   00003C                     ?_dec2bcd:
   600                           	callstack 0
   601   00003C                     dec2bcd@value:
   602                           	callstack 0
   603   00003C                     lcdInt@val:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0xE
   607   00003C                     	ds	1
   608   00003D                     ??_dsReadData:
   609                           
   610                           ; 1 bytes @ 0xF
   611   00003D                     	ds	1
   612   00003E                     ??_dec2bcd:
   613   00003E                     lcdInt@digNum:
   614                           	callstack 0
   615   00003E                     dsReadData@result:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x10
   619   00003E                     	ds	1
   620   00003F                     ??_lcdInt:
   621                           
   622                           ; 1 bytes @ 0x11
   623   00003F                     	ds	1
   624   000040                     ?_bcd2dec:
   625                           	callstack 0
   626   000040                     bcd2dec@value:
   627                           	callstack 0
   628   000040                     lcdInt@j:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x12
   632   000040                     	ds	2
   633   000042                     ??_bcd2dec:
   634   000042                     dsWriteData@address:
   635                           	callstack 0
   636   000042                     lcdInt@divisor:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x14
   640   000042                     	ds	2
   641   000044                     dsWriteData@value:
   642                           	callstack 0
   643   000044                     lcdInt@i:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x16
   647   000044                     	ds	1
   648   000045                     setAlarmLevel@newAlarmLevel:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x17
   652   000045                     	ds	2
   653   000047                     setAlarmLevel@lh:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x19
   657   000047                     	ds	1
   658   000048                     ??_varInit:
   659   000048                     
   660                           ; 1 bytes @ 0x1A
   661   000048                     	ds	2
   662   00004A                     _varInit$520:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x1C
   666   00004A                     	ds	2
   667   00004C                     _varInit$521:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x1E
   671   00004C                     	ds	2
   672   00004E                     _varInit$522:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x20
   676   00004E                     	ds	2
   677   000050                     main@v:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x22
   681   000050                     	ds	2
   682                           
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 24 in file "main.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  v               2   34[COMRAM] unsigned int 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   702 ;;      Params:         0       0       0       0       0       0       0       0       0
   703 ;;      Locals:         2       0       0       0       0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0
   705 ;;      Totals:         2       0       0       0       0       0       0       0       0
   706 ;;Total ram usage:        2 bytes
   707 ;; Hardware stack levels required when called: 8
   708 ;; This function calls:
   709 ;;		_adcInit
   710 ;;		_adcRead
   711 ;;		_dsInit
   712 ;;		_kpInit
   713 ;;		_lcdCommand
   714 ;;		_lcdInit
   715 ;;		_lcdInt
   716 ;;		_serialInit
   717 ;;		_smInit
   718 ;; This function is called by:
   719 ;;		Startup code after reset
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text0
   724   00158A                     __ptext0:
   725                           	callstack 0
   726   00158A                     _main:
   727                           	callstack 23
   728   00158A                     
   729                           ;main.c: 28:     kpInit();
   730   00158A  ECF1  F00C         	call	_kpInit	;wreg free
   731                           
   732                           ;main.c: 30:     dsInit();
   733   00158E  EC05  F00D         	call	_dsInit	;wreg free
   734   001592                     
   735                           ;main.c: 31:     smInit();
   736   001592  EC9F  F00C         	call	_smInit	;wreg free
   737   001596                     
   738                           ;main.c: 32:     serialInit();
   739   001596  ECBE  F00C         	call	_serialInit	;wreg free
   740   00159A                     
   741                           ;main.c: 33:     TRISA = 0x00;
   742   00159A  0E00               	movlw	0
   743   00159C  6E92               	movwf	146,c	;volatile
   744   00159E                     
   745                           ;main.c: 34:     PORTA = 0x00;
   746   00159E  0E00               	movlw	0
   747   0015A0  6E80               	movwf	128,c	;volatile
   748   0015A2                     
   749                           ;main.c: 35:     LATA = 0x00;
   750   0015A2  0E00               	movlw	0
   751   0015A4  6E89               	movwf	137,c	;volatile
   752   0015A6                     
   753                           ;main.c: 36:     adcInit();
   754   0015A6  ECE2  F00C         	call	_adcInit	;wreg free
   755   0015AA                     
   756                           ;main.c: 37:     lcdInit();
   757   0015AA  EC6B  F009         	call	_lcdInit	;wreg free
   758   0015AE                     l3636:
   759                           
   760                           ;main.c: 43:         unsigned int v = adcRead();
   761   0015AE  ECD4  F00B         	call	_adcRead	;wreg free
   762   0015B2  C02E  F050         	movff	?_adcRead,main@v
   763   0015B6  C02F  F051         	movff	?_adcRead+1,main@v+1
   764   0015BA                     
   765                           ;main.c: 45:         lcdCommand(0x80);
   766   0015BA  0E80               	movlw	128
   767   0015BC  EC11  F00B         	call	_lcdCommand
   768   0015C0                     
   769                           ;main.c: 46:         lcdInt(v, 5);
   770   0015C0  C050  F03C         	movff	main@v,lcdInt@val
   771   0015C4  C051  F03D         	movff	main@v+1,lcdInt@val+1
   772   0015C8  0E05               	movlw	5
   773   0015CA  6E3E               	movwf	lcdInt@digNum^0,c
   774   0015CC  EC4D  F008         	call	_lcdInt	;wreg free
   775   0015D0  EFD7  F00A         	goto	l3636
   776   0015D4  EF00  F000         	goto	start
   777   0015D8                     __end_of_main:
   778                           	callstack 0
   779                           
   780 ;; *************** function _smInit *****************
   781 ;; Defined at:
   782 ;;		line 12 in file "stateMachine.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         0       0       0       0       0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 7
   803 ;; This function calls:
   804 ;;		_eventInit
   805 ;;		_setState
   806 ;;		_varInit
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text1
   813   00193E                     __ptext1:
   814                           	callstack 0
   815   00193E                     _smInit:
   816                           	callstack 23
   817   00193E                     
   818                           ;stateMachine.c: 13:     varInit();
   819   00193E  EC9E  F006         	call	_varInit	;wreg free
   820   001942                     
   821                           ;stateMachine.c: 14:     setState(STATE_MAIN);
   822   001942  0E05               	movlw	5
   823   001944  ECEA  F00C         	call	_setState
   824   001948                     
   825                           ;stateMachine.c: 15:     eventInit();
   826   001948  ECD7  F00C         	call	_eventInit	;wreg free
   827   00194C                     
   828                           ;stateMachine.c: 16:     t = 0;
   829   00194C  0E00               	movlw	0
   830   00194E  6E06               	movwf	_t^0,c
   831   001950  0E00               	movlw	0
   832   001952  6E07               	movwf	(_t+1)^0,c
   833   001954  0E00               	movlw	0
   834   001956  6E08               	movwf	(_t+2)^0,c
   835   001958  0E00               	movlw	0
   836   00195A  6E09               	movwf	(_t+3)^0,c
   837   00195C  0012               	return		;funcret
   838   00195E                     __end_of_smInit:
   839                           	callstack 0
   840                           
   841 ;; *************** function _varInit *****************
   842 ;; Defined at:
   843 ;;		line 16 in file "var.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:         0       0       0       0       0       0       0       0       0
   858 ;;      Locals:         6       0       0       0       0       0       0       0       0
   859 ;;      Temps:          2       0       0       0       0       0       0       0       0
   860 ;;      Totals:         8       0       0       0       0       0       0       0       0
   861 ;;Total ram usage:        8 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 6
   864 ;; This function calls:
   865 ;;		_bcd2dec
   866 ;;		_dec2bcd
   867 ;;		_dsReadData
   868 ;;		_dsWriteData
   869 ;;		_setAlarmLevel
   870 ;; This function is called by:
   871 ;;		_smInit
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text2
   876   000D3C                     __ptext2:
   877                           	callstack 0
   878   000D3C                     _varInit:
   879                           	callstack 23
   880   000D3C                     
   881                           ;var.c: 17:     state = 0;
   882   000D3C  0E00               	movlw	0
   883   000D3E  6E1A               	movwf	_state^0,c
   884                           
   885                           ;var.c: 18:     time = 1000;
   886   000D40  0E03               	movlw	3
   887   000D42  6E0B               	movwf	(_time+1)^0,c
   888   000D44  0EE8               	movlw	232
   889   000D46  6E0A               	movwf	_time^0,c
   890   000D48                     
   891                           ;var.c: 20:     alarmLevelHigh = dsReadData(0x20);
   892   000D48  0E00               	movlw	0
   893   000D4A  6E3C               	movwf	(dsReadData@address+1)^0,c
   894   000D4C  0E20               	movlw	32
   895   000D4E  6E3B               	movwf	dsReadData@address^0,c
   896   000D50  EC35  F00B         	call	_dsReadData	;wreg free
   897   000D54  503B               	movf	?_dsReadData^0,w,c
   898   000D56  6E18               	movwf	_alarmLevelHigh^0,c
   899   000D58                     
   900                           ;var.c: 21:     alarmLevelLow = dsReadData(0x21);
   901   000D58  0E00               	movlw	0
   902   000D5A  6E3C               	movwf	(dsReadData@address+1)^0,c
   903   000D5C  0E21               	movlw	33
   904   000D5E  6E3B               	movwf	dsReadData@address^0,c
   905   000D60  EC35  F00B         	call	_dsReadData	;wreg free
   906   000D64  503B               	movf	?_dsReadData^0,w,c
   907   000D66  6E17               	movwf	_alarmLevelLow^0,c
   908   000D68                     
   909                           ;var.c: 22:     language = dsReadData(0x23) != 1 ? 0 : 1;
   910   000D68  0E00               	movlw	0
   911   000D6A  6E3C               	movwf	(dsReadData@address+1)^0,c
   912   000D6C  0E23               	movlw	35
   913   000D6E  6E3B               	movwf	dsReadData@address^0,c
   914   000D70  EC35  F00B         	call	_dsReadData	;wreg free
   915   000D74  043B               	decf	?_dsReadData^0,w,c
   916   000D76  103C               	iorwf	(?_dsReadData+1)^0,w,c
   917   000D78  B4D8               	btfsc	status,2,c
   918   000D7A  EFC1  F006         	goto	u2801
   919   000D7E  EFC4  F006         	goto	u2800
   920   000D82                     u2801:
   921   000D82  0E01               	movlw	1
   922   000D84  EFC5  F006         	goto	u2810
   923   000D88                     u2800:
   924   000D88  0E00               	movlw	0
   925   000D8A                     u2810:
   926   000D8A  6E19               	movwf	_language^0,c
   927   000D8C                     
   928                           ;var.c: 23:     if(alarmLevelHigh + alarmLevelLow != dsReadData(0x22)){
   929   000D8C  0E00               	movlw	0
   930   000D8E  6E3C               	movwf	(dsReadData@address+1)^0,c
   931   000D90  0E22               	movlw	34
   932   000D92  6E3B               	movwf	dsReadData@address^0,c
   933   000D94  EC35  F00B         	call	_dsReadData	;wreg free
   934   000D98  5017               	movf	_alarmLevelLow^0,w,c
   935   000D9A  C018  F048         	movff	_alarmLevelHigh,??_varInit
   936   000D9E  6A49               	clrf	(??_varInit+1)^0,c
   937   000DA0  2648               	addwf	??_varInit^0,f,c
   938   000DA2  0E00               	movlw	0
   939   000DA4  2249               	addwfc	(??_varInit+1)^0,f,c
   940   000DA6  503B               	movf	?_dsReadData^0,w,c
   941   000DA8  1848               	xorwf	??_varInit^0,w,c
   942   000DAA  E109               	bnz	u2820
   943   000DAC  503C               	movf	(?_dsReadData+1)^0,w,c
   944   000DAE  1849               	xorwf	(??_varInit+1)^0,w,c
   945   000DB0  B4D8               	btfsc	status,2,c
   946   000DB2  EFDD  F006         	goto	u2821
   947   000DB6  EFDF  F006         	goto	u2820
   948   000DBA                     u2821:
   949   000DBA  EFEF  F006         	goto	l3330
   950   000DBE                     u2820:
   951   000DBE                     
   952                           ;var.c: 24:         setAlarmLevel(50, 0);
   953   000DBE  0E00               	movlw	0
   954   000DC0  6E46               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
   955   000DC2  0E32               	movlw	50
   956   000DC4  6E45               	movwf	setAlarmLevel@newAlarmLevel^0,c
   957   000DC6  0E00               	movlw	0
   958   000DC8  6E47               	movwf	setAlarmLevel@lh^0,c
   959   000DCA  ECEC  F00A         	call	_setAlarmLevel	;wreg free
   960                           
   961                           ;var.c: 25:         setAlarmLevel(100, 1);
   962   000DCE  0E00               	movlw	0
   963   000DD0  6E46               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
   964   000DD2  0E64               	movlw	100
   965   000DD4  6E45               	movwf	setAlarmLevel@newAlarmLevel^0,c
   966   000DD6  0E01               	movlw	1
   967   000DD8  6E47               	movwf	setAlarmLevel@lh^0,c
   968   000DDA  ECEC  F00A         	call	_setAlarmLevel	;wreg free
   969   000DDE                     l3330:
   970                           
   971                           ;var.c: 28:     (dsWriteData(dec2bcd((bcd2dec(dsReadData(0x00)& 0x7f)) == 0 ? 0 : (bcd2d
      +                          ec(dsReadData(0x00)& 0x7f))),0x00));
   972   000DDE  0E00               	movlw	0
   973   000DE0  6E3C               	movwf	(dsReadData@address+1)^0,c
   974   000DE2  0E00               	movlw	0
   975   000DE4  6E3B               	movwf	dsReadData@address^0,c
   976   000DE6  EC35  F00B         	call	_dsReadData	;wreg free
   977   000DEA  0E7F               	movlw	127
   978   000DEC  143B               	andwf	?_dsReadData^0,w,c
   979   000DEE  6E40               	movwf	bcd2dec@value^0,c
   980   000DF0  6A41               	clrf	(bcd2dec@value+1)^0,c
   981   000DF2  EC7B  F00B         	call	_bcd2dec	;wreg free
   982   000DF6  5040               	movf	?_bcd2dec^0,w,c
   983   000DF8  1041               	iorwf	(?_bcd2dec+1)^0,w,c
   984   000DFA  B4D8               	btfsc	status,2,c
   985   000DFC  EF02  F007         	goto	u2831
   986   000E00  EF04  F007         	goto	u2830
   987   000E04                     u2831:
   988   000E04  EF16  F007         	goto	l3334
   989   000E08                     u2830:
   990   000E08  0E00               	movlw	0
   991   000E0A  6E3C               	movwf	(dsReadData@address+1)^0,c
   992   000E0C  0E00               	movlw	0
   993   000E0E  6E3B               	movwf	dsReadData@address^0,c
   994   000E10  EC35  F00B         	call	_dsReadData	;wreg free
   995   000E14  0E7F               	movlw	127
   996   000E16  143B               	andwf	?_dsReadData^0,w,c
   997   000E18  6E40               	movwf	bcd2dec@value^0,c
   998   000E1A  6A41               	clrf	(bcd2dec@value+1)^0,c
   999   000E1C  EC7B  F00B         	call	_bcd2dec	;wreg free
  1000   000E20  C040  F04A         	movff	?_bcd2dec,_varInit$520
  1001   000E24  C041  F04B         	movff	?_bcd2dec+1,_varInit$520+1
  1002   000E28  EF1A  F007         	goto	l3336
  1003   000E2C                     l3334:
  1004   000E2C  0E00               	movlw	0
  1005   000E2E  6E4B               	movwf	(_varInit$520+1)^0,c
  1006   000E30  0E00               	movlw	0
  1007   000E32  6E4A               	movwf	_varInit$520^0,c
  1008   000E34                     l3336:
  1009   000E34  0E00               	movlw	0
  1010   000E36  6E43               	movwf	(dsWriteData@address+1)^0,c
  1011   000E38  0E00               	movlw	0
  1012   000E3A  6E42               	movwf	dsWriteData@address^0,c
  1013   000E3C  C04A  F03C         	movff	_varInit$520,dec2bcd@value
  1014   000E40  C04B  F03D         	movff	_varInit$520+1,dec2bcd@value+1
  1015   000E44  ECE3  F009         	call	_dec2bcd	;wreg free
  1016   000E48  503C               	movf	?_dec2bcd^0,w,c
  1017   000E4A  EC08  F00C         	call	_dsWriteData
  1018   000E4E                     
  1019                           ;var.c: 29:     (dsWriteData(dec2bcd((bcd2dec(dsReadData(0x01)& 0x7f)) == 0 ? 45 : (bcd2
      +                          dec(dsReadData(0x01)& 0x7f))),0x01));
  1020   000E4E  0E00               	movlw	0
  1021   000E50  6E3C               	movwf	(dsReadData@address+1)^0,c
  1022   000E52  0E01               	movlw	1
  1023   000E54  6E3B               	movwf	dsReadData@address^0,c
  1024   000E56  EC35  F00B         	call	_dsReadData	;wreg free
  1025   000E5A  0E7F               	movlw	127
  1026   000E5C  143B               	andwf	?_dsReadData^0,w,c
  1027   000E5E  6E40               	movwf	bcd2dec@value^0,c
  1028   000E60  6A41               	clrf	(bcd2dec@value+1)^0,c
  1029   000E62  EC7B  F00B         	call	_bcd2dec	;wreg free
  1030   000E66  5040               	movf	?_bcd2dec^0,w,c
  1031   000E68  1041               	iorwf	(?_bcd2dec+1)^0,w,c
  1032   000E6A  B4D8               	btfsc	status,2,c
  1033   000E6C  EF3A  F007         	goto	u2841
  1034   000E70  EF3C  F007         	goto	u2840
  1035   000E74                     u2841:
  1036   000E74  EF4E  F007         	goto	l3342
  1037   000E78                     u2840:
  1038   000E78  0E00               	movlw	0
  1039   000E7A  6E3C               	movwf	(dsReadData@address+1)^0,c
  1040   000E7C  0E01               	movlw	1
  1041   000E7E  6E3B               	movwf	dsReadData@address^0,c
  1042   000E80  EC35  F00B         	call	_dsReadData	;wreg free
  1043   000E84  0E7F               	movlw	127
  1044   000E86  143B               	andwf	?_dsReadData^0,w,c
  1045   000E88  6E40               	movwf	bcd2dec@value^0,c
  1046   000E8A  6A41               	clrf	(bcd2dec@value+1)^0,c
  1047   000E8C  EC7B  F00B         	call	_bcd2dec	;wreg free
  1048   000E90  C040  F04C         	movff	?_bcd2dec,_varInit$521
  1049   000E94  C041  F04D         	movff	?_bcd2dec+1,_varInit$521+1
  1050   000E98  EF52  F007         	goto	l3344
  1051   000E9C                     l3342:
  1052   000E9C  0E00               	movlw	0
  1053   000E9E  6E4D               	movwf	(_varInit$521+1)^0,c
  1054   000EA0  0E2D               	movlw	45
  1055   000EA2  6E4C               	movwf	_varInit$521^0,c
  1056   000EA4                     l3344:
  1057   000EA4  0E00               	movlw	0
  1058   000EA6  6E43               	movwf	(dsWriteData@address+1)^0,c
  1059   000EA8  0E01               	movlw	1
  1060   000EAA  6E42               	movwf	dsWriteData@address^0,c
  1061   000EAC  C04C  F03C         	movff	_varInit$521,dec2bcd@value
  1062   000EB0  C04D  F03D         	movff	_varInit$521+1,dec2bcd@value+1
  1063   000EB4  ECE3  F009         	call	_dec2bcd	;wreg free
  1064   000EB8  503C               	movf	?_dec2bcd^0,w,c
  1065   000EBA  EC08  F00C         	call	_dsWriteData
  1066   000EBE                     
  1067                           ;var.c: 30:     (dsWriteData(dec2bcd((bcd2dec(dsReadData(0x02)& 0x7f)) == 0 ? 15 : (bcd2
      +                          dec(dsReadData(0x02)& 0x7f))),0x02));
  1068   000EBE  0E00               	movlw	0
  1069   000EC0  6E3C               	movwf	(dsReadData@address+1)^0,c
  1070   000EC2  0E02               	movlw	2
  1071   000EC4  6E3B               	movwf	dsReadData@address^0,c
  1072   000EC6  EC35  F00B         	call	_dsReadData	;wreg free
  1073   000ECA  0E7F               	movlw	127
  1074   000ECC  143B               	andwf	?_dsReadData^0,w,c
  1075   000ECE  6E40               	movwf	bcd2dec@value^0,c
  1076   000ED0  6A41               	clrf	(bcd2dec@value+1)^0,c
  1077   000ED2  EC7B  F00B         	call	_bcd2dec	;wreg free
  1078   000ED6  5040               	movf	?_bcd2dec^0,w,c
  1079   000ED8  1041               	iorwf	(?_bcd2dec+1)^0,w,c
  1080   000EDA  B4D8               	btfsc	status,2,c
  1081   000EDC  EF72  F007         	goto	u2851
  1082   000EE0  EF74  F007         	goto	u2850
  1083   000EE4                     u2851:
  1084   000EE4  EF86  F007         	goto	l3350
  1085   000EE8                     u2850:
  1086   000EE8  0E00               	movlw	0
  1087   000EEA  6E3C               	movwf	(dsReadData@address+1)^0,c
  1088   000EEC  0E02               	movlw	2
  1089   000EEE  6E3B               	movwf	dsReadData@address^0,c
  1090   000EF0  EC35  F00B         	call	_dsReadData	;wreg free
  1091   000EF4  0E7F               	movlw	127
  1092   000EF6  143B               	andwf	?_dsReadData^0,w,c
  1093   000EF8  6E40               	movwf	bcd2dec@value^0,c
  1094   000EFA  6A41               	clrf	(bcd2dec@value+1)^0,c
  1095   000EFC  EC7B  F00B         	call	_bcd2dec	;wreg free
  1096   000F00  C040  F04E         	movff	?_bcd2dec,_varInit$522
  1097   000F04  C041  F04F         	movff	?_bcd2dec+1,_varInit$522+1
  1098   000F08  EF8A  F007         	goto	l3352
  1099   000F0C                     l3350:
  1100   000F0C  0E00               	movlw	0
  1101   000F0E  6E4F               	movwf	(_varInit$522+1)^0,c
  1102   000F10  0E0F               	movlw	15
  1103   000F12  6E4E               	movwf	_varInit$522^0,c
  1104   000F14                     l3352:
  1105   000F14  0E00               	movlw	0
  1106   000F16  6E43               	movwf	(dsWriteData@address+1)^0,c
  1107   000F18  0E02               	movlw	2
  1108   000F1A  6E42               	movwf	dsWriteData@address^0,c
  1109   000F1C  C04E  F03C         	movff	_varInit$522,dec2bcd@value
  1110   000F20  C04F  F03D         	movff	_varInit$522+1,dec2bcd@value+1
  1111   000F24  ECE3  F009         	call	_dec2bcd	;wreg free
  1112   000F28  503C               	movf	?_dec2bcd^0,w,c
  1113   000F2A  EC08  F00C         	call	_dsWriteData
  1114   000F2E  0012               	return		;funcret
  1115   000F30                     __end_of_varInit:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _setAlarmLevel *****************
  1119 ;; Defined at:
  1120 ;;		line 63 in file "var.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  newAlarmLeve    2   23[COMRAM] int 
  1123 ;;  lh              1   25[COMRAM] unsigned char 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         3       0       0       0       0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1138 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        3 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 5
  1142 ;; This function calls:
  1143 ;;		_dsWriteData
  1144 ;; This function is called by:
  1145 ;;		_varInit
  1146 ;;		_smLoop
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text3
  1151   0015D8                     __ptext3:
  1152                           	callstack 0
  1153   0015D8                     _setAlarmLevel:
  1154                           	callstack 23
  1155   0015D8                     
  1156                           ;var.c: 64:     if(lh == 1){
  1157   0015D8  0447               	decf	setAlarmLevel@lh^0,w,c
  1158   0015DA  A4D8               	btfss	status,2,c
  1159   0015DC  EFF2  F00A         	goto	u2781
  1160   0015E0  EFF4  F00A         	goto	u2780
  1161   0015E4                     u2781:
  1162   0015E4  EFFF  F00A         	goto	l743
  1163   0015E8                     u2780:
  1164   0015E8                     
  1165                           ;var.c: 65:         alarmLevelHigh = newAlarmLevel;
  1166   0015E8  C045  F018         	movff	setAlarmLevel@newAlarmLevel,_alarmLevelHigh
  1167   0015EC                     
  1168                           ;var.c: 67:         dsWriteData(alarmLevelHigh, 0x20);
  1169   0015EC  0E00               	movlw	0
  1170   0015EE  6E43               	movwf	(dsWriteData@address+1)^0,c
  1171   0015F0  0E20               	movlw	32
  1172   0015F2  6E42               	movwf	dsWriteData@address^0,c
  1173   0015F4  5018               	movf	_alarmLevelHigh^0,w,c
  1174   0015F6  EC08  F00C         	call	_dsWriteData
  1175                           
  1176                           ;var.c: 68:     }
  1177   0015FA  EF08  F00B         	goto	l744
  1178   0015FE                     l743:
  1179                           
  1180                           ;var.c: 70:     {;var.c: 71:         alarmLevelLow = newAlarmLevel;
  1181   0015FE  C045  F017         	movff	setAlarmLevel@newAlarmLevel,_alarmLevelLow
  1182   001602                     
  1183                           ;var.c: 73:         dsWriteData(alarmLevelLow, 0x21);
  1184   001602  0E00               	movlw	0
  1185   001604  6E43               	movwf	(dsWriteData@address+1)^0,c
  1186   001606  0E21               	movlw	33
  1187   001608  6E42               	movwf	dsWriteData@address^0,c
  1188   00160A  5017               	movf	_alarmLevelLow^0,w,c
  1189   00160C  EC08  F00C         	call	_dsWriteData
  1190   001610                     l744:
  1191                           
  1192                           ;var.c: 75:     dsWriteData(alarmLevelHigh + alarmLevelLow, 0x22);
  1193   001610  0E00               	movlw	0
  1194   001612  6E43               	movwf	(dsWriteData@address+1)^0,c
  1195   001614  0E22               	movlw	34
  1196   001616  6E42               	movwf	dsWriteData@address^0,c
  1197   001618  5018               	movf	_alarmLevelHigh^0,w,c
  1198   00161A  2417               	addwf	_alarmLevelLow^0,w,c
  1199   00161C  EC08  F00C         	call	_dsWriteData
  1200   001620  0012               	return		;funcret
  1201   001622                     __end_of_setAlarmLevel:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _dsWriteData *****************
  1205 ;; Defined at:
  1206 ;;		line 26 in file "ds1307.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  value           1    wreg     unsigned char 
  1209 ;;  address         2   20[COMRAM] int 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  value           1   22[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1221 ;;      Params:         2       0       0       0       0       0       0       0       0
  1222 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1224 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1225 ;;Total ram usage:        3 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 4
  1228 ;; This function calls:
  1229 ;;		_i2cWriteByte
  1230 ;; This function is called by:
  1231 ;;		_varInit
  1232 ;;		_setAlarmLevel
  1233 ;;		_dsStartClock
  1234 ;;		_smLoop
  1235 ;;		_setLanguage
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text4
  1240   001810                     __ptext4:
  1241                           	callstack 0
  1242   001810                     _dsWriteData:
  1243                           	callstack 23
  1244                           
  1245                           ;incstack = 0
  1246                           ;dsWriteData@value stored from wreg
  1247   001810  6E44               	movwf	dsWriteData@value^0,c
  1248   001812                     
  1249                           ;ds1307.c: 27:  i2cWriteByte(1,0, (0x6f<<1)|0);
  1250   001812  0E00               	movlw	0
  1251   001814  6E35               	movwf	i2cWriteByte@send_stop^0,c
  1252   001816  0EDE               	movlw	222
  1253   001818  6E36               	movwf	i2cWriteByte@byte^0,c
  1254   00181A  0E01               	movlw	1
  1255   00181C  EC14  F00A         	call	_i2cWriteByte
  1256                           
  1257                           ;ds1307.c: 28:  i2cWriteByte(0,0,address);
  1258   001820  0E00               	movlw	0
  1259   001822  6E35               	movwf	i2cWriteByte@send_stop^0,c
  1260   001824  C042  F036         	movff	dsWriteData@address,i2cWriteByte@byte
  1261   001828  0E00               	movlw	0
  1262   00182A  EC14  F00A         	call	_i2cWriteByte
  1263                           
  1264                           ;ds1307.c: 29:  i2cWriteByte(0,1,value);
  1265   00182E  0E01               	movlw	1
  1266   001830  6E35               	movwf	i2cWriteByte@send_stop^0,c
  1267   001832  C044  F036         	movff	dsWriteData@value,i2cWriteByte@byte
  1268   001836  0E00               	movlw	0
  1269   001838  EC14  F00A         	call	_i2cWriteByte
  1270   00183C  0012               	return		;funcret
  1271   00183E                     __end_of_dsWriteData:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _dsReadData *****************
  1275 ;; Defined at:
  1276 ;;		line 31 in file "ds1307.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  address         2   13[COMRAM] int 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  result          2   16[COMRAM] int 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  2   13[COMRAM] int 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1290 ;;      Params:         2       0       0       0       0       0       0       0       0
  1291 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1292 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1293 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1294 ;;Total ram usage:        5 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 4
  1297 ;; This function calls:
  1298 ;;		_i2cReadByte
  1299 ;;		_i2cWriteByte
  1300 ;; This function is called by:
  1301 ;;		_varInit
  1302 ;;		_dsStartClock
  1303 ;;		_outputPrint
  1304 ;;		_smLoop
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text5
  1309   00166A                     __ptext5:
  1310                           	callstack 0
  1311   00166A                     _dsReadData:
  1312                           	callstack 24
  1313   00166A                     
  1314                           ;ds1307.c: 32:  int result;;ds1307.c: 33:  i2cWriteByte(1,0,(0x6f<<1) | 0);
  1315   00166A  0E00               	movlw	0
  1316   00166C  6E35               	movwf	i2cWriteByte@send_stop^0,c
  1317   00166E  0EDE               	movlw	222
  1318   001670  6E36               	movwf	i2cWriteByte@byte^0,c
  1319   001672  0E01               	movlw	1
  1320   001674  EC14  F00A         	call	_i2cWriteByte
  1321                           
  1322                           ;ds1307.c: 34:  i2cWriteByte(0,0,address);
  1323   001678  0E00               	movlw	0
  1324   00167A  6E35               	movwf	i2cWriteByte@send_stop^0,c
  1325   00167C  C03B  F036         	movff	dsReadData@address,i2cWriteByte@byte
  1326   001680  0E00               	movlw	0
  1327   001682  EC14  F00A         	call	_i2cWriteByte
  1328                           
  1329                           ;ds1307.c: 35:  i2cWriteByte(1,0, (0x6f<<1) | 1);
  1330   001686  0E00               	movlw	0
  1331   001688  6E35               	movwf	i2cWriteByte@send_stop^0,c
  1332   00168A  0EDF               	movlw	223
  1333   00168C  6E36               	movwf	i2cWriteByte@byte^0,c
  1334   00168E  0E01               	movlw	1
  1335   001690  EC14  F00A         	call	_i2cWriteByte
  1336                           
  1337                           ;ds1307.c: 36:  result = i2cReadByte(1,1 );
  1338   001694  0E01               	movlw	1
  1339   001696  6E35               	movwf	i2cReadByte@send_stop^0,c
  1340   001698  0E01               	movlw	1
  1341   00169A  EC9B  F00A         	call	_i2cReadByte
  1342   00169E  6E3D               	movwf	??_dsReadData^0,c
  1343   0016A0  503D               	movf	??_dsReadData^0,w,c
  1344   0016A2  6E3E               	movwf	dsReadData@result^0,c
  1345   0016A4  6A3F               	clrf	(dsReadData@result+1)^0,c
  1346   0016A6                     
  1347                           ;ds1307.c: 37:  return result;
  1348   0016A6  C03E  F03B         	movff	dsReadData@result,?_dsReadData
  1349   0016AA  C03F  F03C         	movff	dsReadData@result+1,?_dsReadData+1
  1350   0016AE  0012               	return		;funcret
  1351   0016B0                     __end_of_dsReadData:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function _i2cWriteByte *****************
  1355 ;; Defined at:
  1356 ;;		line 113 in file "soft_i2c.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  send_start      1    wreg     unsigned char 
  1359 ;;  send_stop       1    7[COMRAM] unsigned char 
  1360 ;;  byte            1    8[COMRAM] unsigned char 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  send_start      1    9[COMRAM] unsigned char 
  1363 ;;  bit             1   10[COMRAM] unsigned char 
  1364 ;;  nack            1    0        unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      unsigned char 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1374 ;;      Params:         2       0       0       0       0       0       0       0       0
  1375 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1377 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1378 ;;Total ram usage:        4 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 3
  1381 ;; This function calls:
  1382 ;;		_i2c_read_bit
  1383 ;;		_i2c_start
  1384 ;;		_i2c_stop
  1385 ;;		_i2c_write_bit
  1386 ;; This function is called by:
  1387 ;;		_dsWriteData
  1388 ;;		_dsReadData
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text6
  1393   001428                     __ptext6:
  1394                           	callstack 0
  1395   001428                     _i2cWriteByte:
  1396                           	callstack 23
  1397                           
  1398                           ;incstack = 0
  1399                           ;i2cWriteByte@send_start stored from wreg
  1400   001428  6E37               	movwf	i2cWriteByte@send_start^0,c
  1401   00142A                     
  1402                           ;soft_i2c.c: 114:  unsigned char bit;;soft_i2c.c: 115:  unsigned char nack;;soft_i2c.c: 
      +                          116:  if (send_start) {
  1403   00142A  5037               	movf	i2cWriteByte@send_start^0,w,c
  1404   00142C  B4D8               	btfsc	status,2,c
  1405   00142E  EF1B  F00A         	goto	u2491
  1406   001432  EF1D  F00A         	goto	u2490
  1407   001436                     u2491:
  1408   001436  EF1F  F00A         	goto	l3076
  1409   00143A                     u2490:
  1410   00143A                     
  1411                           ;soft_i2c.c: 117:   i2c_start();
  1412   00143A  EC58  F00B         	call	_i2c_start	;wreg free
  1413   00143E                     l3076:
  1414                           
  1415                           ;soft_i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
  1416   00143E  0E00               	movlw	0
  1417   001440  6E38               	movwf	i2cWriteByte@bit^0,c
  1418   001442                     l3082:
  1419                           
  1420                           ;soft_i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
  1421   001442  BE36               	btfsc	i2cWriteByte@byte^0,7,c
  1422   001444  EF26  F00A         	goto	u2501
  1423   001448  EF29  F00A         	goto	u2500
  1424   00144C                     u2501:
  1425   00144C  0E01               	movlw	1
  1426   00144E  EF2A  F00A         	goto	u2510
  1427   001452                     u2500:
  1428   001452  0E00               	movlw	0
  1429   001454                     u2510:
  1430   001454  EC44  F00A         	call	_i2c_write_bit
  1431   001458                     
  1432                           ;soft_i2c.c: 121:   byte <<= 1;
  1433   001458  90D8               	bcf	status,0,c
  1434   00145A  3636               	rlcf	i2cWriteByte@byte^0,f,c
  1435   00145C                     
  1436                           ;soft_i2c.c: 122:  }
  1437   00145C  2A38               	incf	i2cWriteByte@bit^0,f,c
  1438   00145E  0E07               	movlw	7
  1439   001460  6438               	cpfsgt	i2cWriteByte@bit^0,c
  1440   001462  EF35  F00A         	goto	u2521
  1441   001466  EF37  F00A         	goto	u2520
  1442   00146A                     u2521:
  1443   00146A  EF21  F00A         	goto	l3082
  1444   00146E                     u2520:
  1445   00146E  ECEF  F00B         	call	_i2c_read_bit	;wreg free
  1446   001472                     
  1447                           ;soft_i2c.c: 124:  if (send_stop) {
  1448   001472  5035               	movf	i2cWriteByte@send_stop^0,w,c
  1449   001474  B4D8               	btfsc	status,2,c
  1450   001476  EF3F  F00A         	goto	u2531
  1451   00147A  EF41  F00A         	goto	u2530
  1452   00147E                     u2531:
  1453   00147E  EF43  F00A         	goto	l418
  1454   001482                     u2530:
  1455   001482                     
  1456                           ;soft_i2c.c: 125:   i2c_stop();
  1457   001482  EC1F  F00C         	call	_i2c_stop	;wreg free
  1458   001486                     l418:
  1459   001486  0012               	return		;funcret
  1460   001488                     __end_of_i2cWriteByte:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function _i2c_start *****************
  1464 ;; Defined at:
  1465 ;;		line 52 in file "soft_i2c.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1479 ;;      Params:         0       0       0       0       0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1482 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1483 ;;Total ram usage:        0 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 2
  1486 ;; This function calls:
  1487 ;;		_I2C_delay
  1488 ;;		_clear_SCL
  1489 ;;		_clear_SDA
  1490 ;;		_read_SCL
  1491 ;;		_read_SDA
  1492 ;; This function is called by:
  1493 ;;		_i2cWriteByte
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text7
  1498   0016B0                     __ptext7:
  1499                           	callstack 0
  1500   0016B0                     _i2c_start:
  1501                           	callstack 23
  1502   0016B0                     
  1503                           ;soft_i2c.c: 54:  if (started) {
  1504   0016B0  5022               	movf	_started^0,w,c
  1505   0016B2  B4D8               	btfsc	status,2,c
  1506   0016B4  EF5E  F00B         	goto	u2421
  1507   0016B8  EF60  F00B         	goto	u2420
  1508   0016BC                     u2421:
  1509   0016BC  EF70  F00B         	goto	l3012
  1510   0016C0                     u2420:
  1511   0016C0                     
  1512                           ;soft_i2c.c: 55:   read_SDA();
  1513   0016C0  EC9C  F00B         	call	_read_SDA	;wreg free
  1514   0016C4                     
  1515                           ;soft_i2c.c: 56:   I2C_delay();
  1516   0016C4  EC08  F00D         	call	_I2C_delay	;wreg free
  1517   0016C8                     l3008:
  1518   0016C8  ECB8  F00B         	call	_read_SCL	;wreg free
  1519   0016CC  0900               	iorlw	0
  1520   0016CE  B4D8               	btfsc	status,2,c
  1521   0016D0  EF6C  F00B         	goto	u2431
  1522   0016D4  EF6E  F00B         	goto	u2430
  1523   0016D8                     u2431:
  1524   0016D8  EF64  F00B         	goto	l3008
  1525   0016DC                     u2430:
  1526   0016DC                     
  1527                           ;soft_i2c.c: 59:   I2C_delay();
  1528   0016DC  EC08  F00D         	call	_I2C_delay	;wreg free
  1529   0016E0                     l3012:
  1530                           
  1531                           ;soft_i2c.c: 61:  if (read_SDA() == 0) {
  1532   0016E0  EC9C  F00B         	call	_read_SDA	;wreg free
  1533   0016E4                     
  1534                           ;soft_i2c.c: 65:  clear_SDA();
  1535   0016E4  EC4D  F00C         	call	_clear_SDA	;wreg free
  1536   0016E8                     
  1537                           ;soft_i2c.c: 66:  I2C_delay();
  1538   0016E8  EC08  F00D         	call	_I2C_delay	;wreg free
  1539   0016EC                     
  1540                           ;soft_i2c.c: 67:  clear_SCL();
  1541   0016EC  EC62  F00C         	call	_clear_SCL	;wreg free
  1542   0016F0                     
  1543                           ;soft_i2c.c: 68:  started = 1;
  1544   0016F0  0E01               	movlw	1
  1545   0016F2  6E22               	movwf	_started^0,c
  1546   0016F4  0012               	return		;funcret
  1547   0016F6                     __end_of_i2c_start:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function _i2cReadByte *****************
  1551 ;; Defined at:
  1552 ;;		line 131 in file "soft_i2c.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  nack            1    wreg     unsigned char 
  1555 ;;  send_stop       1    7[COMRAM] unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  nack            1    9[COMRAM] unsigned char 
  1558 ;;  bit             2   10[COMRAM] unsigned int 
  1559 ;;  byte            1   12[COMRAM] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      unsigned char 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1569 ;;      Params:         1       0       0       0       0       0       0       0       0
  1570 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1571 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1572 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1573 ;;Total ram usage:        6 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; Hardware stack levels required when called: 3
  1576 ;; This function calls:
  1577 ;;		_i2c_read_bit
  1578 ;;		_i2c_stop
  1579 ;;		_i2c_write_bit
  1580 ;; This function is called by:
  1581 ;;		_dsReadData
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text8
  1586   001536                     __ptext8:
  1587                           	callstack 0
  1588   001536                     _i2cReadByte:
  1589                           	callstack 24
  1590                           
  1591                           ;incstack = 0
  1592                           ;i2cReadByte@nack stored from wreg
  1593   001536  6E37               	movwf	i2cReadByte@nack^0,c
  1594   001538                     
  1595                           ;soft_i2c.c: 132:  unsigned char byte = 0;
  1596   001538  0E00               	movlw	0
  1597   00153A  6E3A               	movwf	i2cReadByte@byte^0,c
  1598                           
  1599                           ;soft_i2c.c: 133:  unsigned bit;;soft_i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
  1600   00153C  0E00               	movlw	0
  1601   00153E  6E39               	movwf	(i2cReadByte@bit+1)^0,c
  1602   001540  0E00               	movlw	0
  1603   001542  6E38               	movwf	i2cReadByte@bit^0,c
  1604   001544                     l3108:
  1605                           
  1606                           ;soft_i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
  1607   001544  ECEF  F00B         	call	_i2c_read_bit	;wreg free
  1608   001548  6E36               	movwf	??_i2cReadByte^0,c
  1609   00154A  503A               	movf	i2cReadByte@byte^0,w,c
  1610   00154C  243A               	addwf	i2cReadByte@byte^0,w,c
  1611   00154E  1036               	iorwf	??_i2cReadByte^0,w,c
  1612   001550  6E3A               	movwf	i2cReadByte@byte^0,c
  1613   001552                     
  1614                           ;soft_i2c.c: 136:  }
  1615   001552  4A38               	infsnz	i2cReadByte@bit^0,f,c
  1616   001554  2A39               	incf	(i2cReadByte@bit+1)^0,f,c
  1617   001556  5039               	movf	(i2cReadByte@bit+1)^0,w,c
  1618   001558  E109               	bnz	u2540
  1619   00155A  0E08               	movlw	8
  1620   00155C  5C38               	subwf	i2cReadByte@bit^0,w,c
  1621   00155E  A0D8               	btfss	status,0,c
  1622   001560  EFB4  F00A         	goto	u2541
  1623   001564  EFB6  F00A         	goto	u2540
  1624   001568                     u2541:
  1625   001568  EFA2  F00A         	goto	l3108
  1626   00156C                     u2540:
  1627   00156C                     
  1628                           ;soft_i2c.c: 137:  i2c_write_bit(nack);
  1629   00156C  5037               	movf	i2cReadByte@nack^0,w,c
  1630   00156E  EC44  F00A         	call	_i2c_write_bit
  1631   001572                     
  1632                           ;soft_i2c.c: 138:  if (send_stop) {
  1633   001572  5035               	movf	i2cReadByte@send_stop^0,w,c
  1634   001574  B4D8               	btfsc	status,2,c
  1635   001576  EFBF  F00A         	goto	u2551
  1636   00157A  EFC1  F00A         	goto	u2550
  1637   00157E                     u2551:
  1638   00157E  EFC3  F00A         	goto	l3120
  1639   001582                     u2550:
  1640   001582                     
  1641                           ;soft_i2c.c: 139:   i2c_stop();
  1642   001582  EC1F  F00C         	call	_i2c_stop	;wreg free
  1643   001586                     l3120:
  1644                           
  1645                           ;soft_i2c.c: 141:  return byte;
  1646   001586  503A               	movf	i2cReadByte@byte^0,w,c
  1647   001588  0012               	return		;funcret
  1648   00158A                     __end_of_i2cReadByte:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _i2c_write_bit *****************
  1652 ;; Defined at:
  1653 ;;		line 84 in file "soft_i2c.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  bit             1    wreg     unsigned char 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  bit             1    6[COMRAM] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1667 ;;      Params:         0       0       0       0       0       0       0       0       0
  1668 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1670 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1671 ;;Total ram usage:        1 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 2
  1674 ;; This function calls:
  1675 ;;		_I2C_delay
  1676 ;;		_clear_SCL
  1677 ;;		_clear_SDA
  1678 ;;		_read_SCL
  1679 ;;		_read_SDA
  1680 ;; This function is called by:
  1681 ;;		_i2cWriteByte
  1682 ;;		_i2cReadByte
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text9
  1687   001488                     __ptext9:
  1688                           	callstack 0
  1689   001488                     _i2c_write_bit:
  1690                           	callstack 23
  1691                           
  1692                           ;incstack = 0
  1693                           ;i2c_write_bit@bit stored from wreg
  1694   001488  6E34               	movwf	i2c_write_bit@bit^0,c
  1695   00148A                     
  1696                           ;soft_i2c.c: 85:  if (bit) {
  1697   00148A  5034               	movf	i2c_write_bit@bit^0,w,c
  1698   00148C  B4D8               	btfsc	status,2,c
  1699   00148E  EF4B  F00A         	goto	u2451
  1700   001492  EF4D  F00A         	goto	u2450
  1701   001496                     u2451:
  1702   001496  EF51  F00A         	goto	l3040
  1703   00149A                     u2450:
  1704   00149A                     
  1705                           ;soft_i2c.c: 86:   read_SDA();
  1706   00149A  EC9C  F00B         	call	_read_SDA	;wreg free
  1707                           
  1708                           ;soft_i2c.c: 87:  } else {
  1709   00149E  EF53  F00A         	goto	l3042
  1710   0014A2                     l3040:
  1711                           
  1712                           ;soft_i2c.c: 88:   clear_SDA();
  1713   0014A2  EC4D  F00C         	call	_clear_SDA	;wreg free
  1714   0014A6                     l3042:
  1715                           
  1716                           ;soft_i2c.c: 90:  I2C_delay();
  1717   0014A6  EC08  F00D         	call	_I2C_delay	;wreg free
  1718   0014AA                     l3044:
  1719   0014AA  ECB8  F00B         	call	_read_SCL	;wreg free
  1720   0014AE  0900               	iorlw	0
  1721   0014B0  B4D8               	btfsc	status,2,c
  1722   0014B2  EF5D  F00A         	goto	u2461
  1723   0014B6  EF5F  F00A         	goto	u2460
  1724   0014BA                     u2461:
  1725   0014BA  EF55  F00A         	goto	l3044
  1726   0014BE                     u2460:
  1727   0014BE                     
  1728                           ;soft_i2c.c: 92:  if (bit && read_SDA() == 0) {
  1729   0014BE  5034               	movf	i2c_write_bit@bit^0,w,c
  1730   0014C0  B4D8               	btfsc	status,2,c
  1731   0014C2  EF65  F00A         	goto	u2471
  1732   0014C6  EF67  F00A         	goto	u2470
  1733   0014CA                     u2471:
  1734   0014CA  EF69  F00A         	goto	l3050
  1735   0014CE                     u2470:
  1736   0014CE  EC9C  F00B         	call	_read_SDA	;wreg free
  1737   0014D2                     l3050:
  1738                           
  1739                           ;soft_i2c.c: 95:  I2C_delay();
  1740   0014D2  EC08  F00D         	call	_I2C_delay	;wreg free
  1741   0014D6                     
  1742                           ;soft_i2c.c: 96:  clear_SCL();
  1743   0014D6  EC62  F00C         	call	_clear_SCL	;wreg free
  1744   0014DA                     
  1745                           ;soft_i2c.c: 97:  I2C_delay();
  1746   0014DA  EC08  F00D         	call	_I2C_delay	;wreg free
  1747   0014DE  0012               	return		;funcret
  1748   0014E0                     __end_of_i2c_write_bit:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _i2c_stop *****************
  1752 ;; Defined at:
  1753 ;;		line 71 in file "soft_i2c.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 2
  1774 ;; This function calls:
  1775 ;;		_I2C_delay
  1776 ;;		_clear_SDA
  1777 ;;		_read_SCL
  1778 ;;		_read_SDA
  1779 ;; This function is called by:
  1780 ;;		_i2cWriteByte
  1781 ;;		_i2cReadByte
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text10
  1786   00183E                     __ptext10:
  1787                           	callstack 0
  1788   00183E                     _i2c_stop:
  1789                           	callstack 23
  1790   00183E                     
  1791                           ;soft_i2c.c: 73:  clear_SDA();
  1792   00183E  EC4D  F00C         	call	_clear_SDA	;wreg free
  1793   001842                     
  1794                           ;soft_i2c.c: 74:  I2C_delay();
  1795   001842  EC08  F00D         	call	_I2C_delay	;wreg free
  1796   001846                     l3026:
  1797   001846  ECB8  F00B         	call	_read_SCL	;wreg free
  1798   00184A  0900               	iorlw	0
  1799   00184C  B4D8               	btfsc	status,2,c
  1800   00184E  EF2B  F00C         	goto	u2441
  1801   001852  EF2D  F00C         	goto	u2440
  1802   001856                     u2441:
  1803   001856  EF23  F00C         	goto	l3026
  1804   00185A                     u2440:
  1805   00185A                     
  1806                           ;soft_i2c.c: 76:  I2C_delay();
  1807   00185A  EC08  F00D         	call	_I2C_delay	;wreg free
  1808   00185E                     
  1809                           ;soft_i2c.c: 77:  if (read_SDA() == 0) {
  1810   00185E  EC9C  F00B         	call	_read_SDA	;wreg free
  1811   001862                     
  1812                           ;soft_i2c.c: 80:  I2C_delay();
  1813   001862  EC08  F00D         	call	_I2C_delay	;wreg free
  1814   001866                     
  1815                           ;soft_i2c.c: 81:  started = 0;
  1816   001866  0E00               	movlw	0
  1817   001868  6E22               	movwf	_started^0,c
  1818   00186A  0012               	return		;funcret
  1819   00186C                     __end_of_i2c_stop:
  1820                           	callstack 0
  1821                           
  1822 ;; *************** function _clear_SDA *****************
  1823 ;; Defined at:
  1824 ;;		line 45 in file "soft_i2c.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0
  1839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1841 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; Hardware stack levels required when called: 1
  1845 ;; This function calls:
  1846 ;;		_digitalWrite
  1847 ;;		_pinMode
  1848 ;; This function is called by:
  1849 ;;		_i2c_start
  1850 ;;		_i2c_stop
  1851 ;;		_i2c_write_bit
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text11
  1856   00189A                     __ptext11:
  1857                           	callstack 0
  1858   00189A                     _clear_SDA:
  1859                           	callstack 23
  1860   00189A                     
  1861                           ;soft_i2c.c: 47:  pinMode(PIN_B0,0);
  1862   00189A  0E00               	movlw	0
  1863   00189C  6E2F               	movwf	(pinMode@pin+1)^0,c
  1864   00189E  0E08               	movlw	8
  1865   0018A0  6E2E               	movwf	pinMode@pin^0,c
  1866   0018A2  0E00               	movlw	0
  1867   0018A4  6E31               	movwf	(pinMode@type+1)^0,c
  1868   0018A6  0E00               	movlw	0
  1869   0018A8  6E30               	movwf	pinMode@type^0,c
  1870   0018AA  EC77  F005         	call	_pinMode	;wreg free
  1871                           
  1872                           ;soft_i2c.c: 48:  digitalWrite(PIN_B0,0);
  1873   0018AE  0E00               	movlw	0
  1874   0018B0  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1875   0018B2  0E08               	movlw	8
  1876   0018B4  6E2E               	movwf	digitalWrite@pin^0,c
  1877   0018B6  0E00               	movlw	0
  1878   0018B8  6E31               	movwf	(digitalWrite@value+1)^0,c
  1879   0018BA  0E00               	movlw	0
  1880   0018BC  6E30               	movwf	digitalWrite@value^0,c
  1881   0018BE  EC50  F004         	call	_digitalWrite	;wreg free
  1882   0018C2  0012               	return		;funcret
  1883   0018C4                     __end_of_clear_SDA:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function _i2c_read_bit *****************
  1887 ;; Defined at:
  1888 ;;		line 100 in file "soft_i2c.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  bit             1    6[COMRAM] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      unsigned char 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1902 ;;      Params:         0       0       0       0       0       0       0       0       0
  1903 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1905 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1906 ;;Total ram usage:        1 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 2
  1909 ;; This function calls:
  1910 ;;		_I2C_delay
  1911 ;;		_clear_SCL
  1912 ;;		_read_SCL
  1913 ;;		_read_SDA
  1914 ;; This function is called by:
  1915 ;;		_i2cWriteByte
  1916 ;;		_i2cReadByte
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text12
  1921   0017DE                     __ptext12:
  1922                           	callstack 0
  1923   0017DE                     _i2c_read_bit:
  1924                           	callstack 23
  1925   0017DE                     
  1926                           ;soft_i2c.c: 101:  unsigned char bit;;soft_i2c.c: 102:  read_SDA();
  1927   0017DE  EC9C  F00B         	call	_read_SDA	;wreg free
  1928   0017E2                     
  1929                           ;soft_i2c.c: 103:  I2C_delay();
  1930   0017E2  EC08  F00D         	call	_I2C_delay	;wreg free
  1931   0017E6                     l3060:
  1932   0017E6  ECB8  F00B         	call	_read_SCL	;wreg free
  1933   0017EA  0900               	iorlw	0
  1934   0017EC  B4D8               	btfsc	status,2,c
  1935   0017EE  EFFB  F00B         	goto	u2481
  1936   0017F2  EFFD  F00B         	goto	u2480
  1937   0017F6                     u2481:
  1938   0017F6  EFF3  F00B         	goto	l3060
  1939   0017FA                     u2480:
  1940   0017FA                     
  1941                           ;soft_i2c.c: 105:  bit = read_SDA();
  1942   0017FA  EC9C  F00B         	call	_read_SDA	;wreg free
  1943   0017FE  6E34               	movwf	i2c_read_bit@bit^0,c
  1944   001800                     
  1945                           ;soft_i2c.c: 106:  I2C_delay();
  1946   001800  EC08  F00D         	call	_I2C_delay	;wreg free
  1947   001804                     
  1948                           ;soft_i2c.c: 107:  clear_SCL();
  1949   001804  EC62  F00C         	call	_clear_SCL	;wreg free
  1950                           
  1951                           ;soft_i2c.c: 108:  I2C_delay();
  1952   001808  EC08  F00D         	call	_I2C_delay	;wreg free
  1953   00180C                     
  1954                           ;soft_i2c.c: 109:  return bit;
  1955   00180C  5034               	movf	i2c_read_bit@bit^0,w,c
  1956   00180E  0012               	return		;funcret
  1957   001810                     __end_of_i2c_read_bit:
  1958                           	callstack 0
  1959                           
  1960 ;; *************** function _read_SDA *****************
  1961 ;; Defined at:
  1962 ;;		line 34 in file "soft_i2c.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      unsigned char 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1976 ;;      Params:         0       0       0       0       0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1979 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1980 ;;Total ram usage:        0 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 1
  1983 ;; This function calls:
  1984 ;;		_digitalRead
  1985 ;;		_pinMode
  1986 ;; This function is called by:
  1987 ;;		_i2c_start
  1988 ;;		_i2c_stop
  1989 ;;		_i2c_write_bit
  1990 ;;		_i2c_read_bit
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text13
  1995   001738                     __ptext13:
  1996                           	callstack 0
  1997   001738                     _read_SDA:
  1998                           	callstack 23
  1999   001738                     
  2000                           ;soft_i2c.c: 36:  pinMode(PIN_B0,1);
  2001   001738  0E00               	movlw	0
  2002   00173A  6E2F               	movwf	(pinMode@pin+1)^0,c
  2003   00173C  0E08               	movlw	8
  2004   00173E  6E2E               	movwf	pinMode@pin^0,c
  2005   001740  0E00               	movlw	0
  2006   001742  6E31               	movwf	(pinMode@type+1)^0,c
  2007   001744  0E01               	movlw	1
  2008   001746  6E30               	movwf	pinMode@type^0,c
  2009   001748  EC77  F005         	call	_pinMode	;wreg free
  2010                           
  2011                           ;soft_i2c.c: 37:  return !!digitalRead(PIN_B0);
  2012   00174C  0E00               	movlw	0
  2013   00174E  6E2F               	movwf	(digitalRead@pin+1)^0,c
  2014   001750  0E08               	movlw	8
  2015   001752  6E2E               	movwf	digitalRead@pin^0,c
  2016   001754  EC98  F007         	call	_digitalRead	;wreg free
  2017   001758  502E               	movf	?_digitalRead^0,w,c
  2018   00175A  102F               	iorwf	(?_digitalRead+1)^0,w,c
  2019   00175C  A4D8               	btfss	status,2,c
  2020   00175E  EFB3  F00B         	goto	u2401
  2021   001762  EFB6  F00B         	goto	u2400
  2022   001766                     u2401:
  2023   001766  0E01               	movlw	1
  2024   001768  EFB7  F00B         	goto	u2410
  2025   00176C                     u2400:
  2026   00176C  0E00               	movlw	0
  2027   00176E                     u2410:
  2028   00176E  0012               	return		;funcret
  2029   001770                     __end_of_read_SDA:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _read_SCL *****************
  2033 ;; Defined at:
  2034 ;;		line 29 in file "soft_i2c.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      unsigned char 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 1
  2055 ;; This function calls:
  2056 ;;		_digitalRead
  2057 ;;		_pinMode
  2058 ;; This function is called by:
  2059 ;;		_i2c_start
  2060 ;;		_i2c_stop
  2061 ;;		_i2c_write_bit
  2062 ;;		_i2c_read_bit
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text14
  2067   001770                     __ptext14:
  2068                           	callstack 0
  2069   001770                     _read_SCL:
  2070                           	callstack 23
  2071   001770                     
  2072                           ;soft_i2c.c: 31:  pinMode(PIN_B1,1);
  2073   001770  0E00               	movlw	0
  2074   001772  6E2F               	movwf	(pinMode@pin+1)^0,c
  2075   001774  0E09               	movlw	9
  2076   001776  6E2E               	movwf	pinMode@pin^0,c
  2077   001778  0E00               	movlw	0
  2078   00177A  6E31               	movwf	(pinMode@type+1)^0,c
  2079   00177C  0E01               	movlw	1
  2080   00177E  6E30               	movwf	pinMode@type^0,c
  2081   001780  EC77  F005         	call	_pinMode	;wreg free
  2082                           
  2083                           ;soft_i2c.c: 32:  return !!digitalRead(PIN_B1);
  2084   001784  0E00               	movlw	0
  2085   001786  6E2F               	movwf	(digitalRead@pin+1)^0,c
  2086   001788  0E09               	movlw	9
  2087   00178A  6E2E               	movwf	digitalRead@pin^0,c
  2088   00178C  EC98  F007         	call	_digitalRead	;wreg free
  2089   001790  502E               	movf	?_digitalRead^0,w,c
  2090   001792  102F               	iorwf	(?_digitalRead+1)^0,w,c
  2091   001794  A4D8               	btfss	status,2,c
  2092   001796  EFCF  F00B         	goto	u2381
  2093   00179A  EFD2  F00B         	goto	u2380
  2094   00179E                     u2381:
  2095   00179E  0E01               	movlw	1
  2096   0017A0  EFD3  F00B         	goto	u2390
  2097   0017A4                     u2380:
  2098   0017A4  0E00               	movlw	0
  2099   0017A6                     u2390:
  2100   0017A6  0012               	return		;funcret
  2101   0017A8                     __end_of_read_SCL:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _digitalRead *****************
  2105 ;; Defined at:
  2106 ;;		line 39 in file "io.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  pin             2    0[COMRAM] int 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  2    0[COMRAM] int 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2120 ;;      Params:         2       0       0       0       0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2122 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2123 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2124 ;;Total ram usage:        5 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_read_SCL
  2130 ;;		_read_SDA
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text15
  2135   000F30                     __ptext15:
  2136                           	callstack 0
  2137   000F30                     _digitalRead:
  2138                           	callstack 23
  2139   000F30                     
  2140                           ;io.c: 40:     if(pin <8){
  2141   000F30  BE2F               	btfsc	(digitalRead@pin+1)^0,7,c
  2142   000F32  EFA6  F007         	goto	u2080
  2143   000F36  502F               	movf	(digitalRead@pin+1)^0,w,c
  2144   000F38  E107               	bnz	u2081
  2145   000F3A  0E08               	movlw	8
  2146   000F3C  5C2E               	subwf	digitalRead@pin^0,w,c
  2147   000F3E  B0D8               	btfsc	status,0,c
  2148   000F40  EFA4  F007         	goto	u2081
  2149   000F44  EFA6  F007         	goto	u2080
  2150   000F48                     u2081:
  2151   000F48  EFBA  F007         	goto	l2920
  2152   000F4C                     u2080:
  2153   000F4C                     
  2154                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  2155   000F4C  C02E  F030         	movff	digitalRead@pin,??_digitalRead
  2156   000F50  0E01               	movlw	1
  2157   000F52  6E31               	movwf	(??_digitalRead+1)^0,c
  2158   000F54  2A30               	incf	??_digitalRead^0,f,c
  2159   000F56  EFAF  F007         	goto	u2094
  2160   000F5A                     u2095:
  2161   000F5A  90D8               	bcf	status,0,c
  2162   000F5C  3631               	rlcf	(??_digitalRead+1)^0,f,c
  2163   000F5E                     u2094:
  2164   000F5E  2E30               	decfsz	??_digitalRead^0,f,c
  2165   000F60  EFAD  F007         	goto	u2095
  2166   000F64  5031               	movf	(??_digitalRead+1)^0,w,c
  2167   000F66  1480               	andwf	128,w,c	;volatile
  2168   000F68  6E32               	movwf	(??_digitalRead+2)^0,c
  2169   000F6A  5032               	movf	(??_digitalRead+2)^0,w,c
  2170   000F6C  6E2E               	movwf	?_digitalRead^0,c
  2171   000F6E  6A2F               	clrf	(?_digitalRead+1)^0,c
  2172   000F70  EF4C  F008         	goto	l83
  2173   000F74                     l2920:
  2174   000F74  BE2F               	btfsc	(digitalRead@pin+1)^0,7,c
  2175   000F76  EFC8  F007         	goto	u2100
  2176   000F7A  502F               	movf	(digitalRead@pin+1)^0,w,c
  2177   000F7C  E107               	bnz	u2101
  2178   000F7E  0E10               	movlw	16
  2179   000F80  5C2E               	subwf	digitalRead@pin^0,w,c
  2180   000F82  B0D8               	btfsc	status,0,c
  2181   000F84  EFC6  F007         	goto	u2101
  2182   000F88  EFC8  F007         	goto	u2100
  2183   000F8C                     u2101:
  2184   000F8C  EFDE  F007         	goto	l2928
  2185   000F90                     u2100:
  2186   000F90                     
  2187                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  2188   000F90  C02E  F030         	movff	digitalRead@pin,??_digitalRead
  2189   000F94  0EF8               	movlw	-8
  2190   000F96  2630               	addwf	??_digitalRead^0,f,c
  2191   000F98  0E01               	movlw	1
  2192   000F9A  6E31               	movwf	(??_digitalRead+1)^0,c
  2193   000F9C  2A30               	incf	??_digitalRead^0,f,c
  2194   000F9E  EFD3  F007         	goto	u2114
  2195   000FA2                     u2115:
  2196   000FA2  90D8               	bcf	status,0,c
  2197   000FA4  3631               	rlcf	(??_digitalRead+1)^0,f,c
  2198   000FA6                     u2114:
  2199   000FA6  2E30               	decfsz	??_digitalRead^0,f,c
  2200   000FA8  EFD1  F007         	goto	u2115
  2201   000FAC  5031               	movf	(??_digitalRead+1)^0,w,c
  2202   000FAE  1481               	andwf	129,w,c	;volatile
  2203   000FB0  6E32               	movwf	(??_digitalRead+2)^0,c
  2204   000FB2  5032               	movf	(??_digitalRead+2)^0,w,c
  2205   000FB4  6E2E               	movwf	?_digitalRead^0,c
  2206   000FB6  6A2F               	clrf	(?_digitalRead+1)^0,c
  2207   000FB8  EF4C  F008         	goto	l83
  2208   000FBC                     l2928:
  2209   000FBC  BE2F               	btfsc	(digitalRead@pin+1)^0,7,c
  2210   000FBE  EFEC  F007         	goto	u2120
  2211   000FC2  502F               	movf	(digitalRead@pin+1)^0,w,c
  2212   000FC4  E107               	bnz	u2121
  2213   000FC6  0E18               	movlw	24
  2214   000FC8  5C2E               	subwf	digitalRead@pin^0,w,c
  2215   000FCA  B0D8               	btfsc	status,0,c
  2216   000FCC  EFEA  F007         	goto	u2121
  2217   000FD0  EFEC  F007         	goto	u2120
  2218   000FD4                     u2121:
  2219   000FD4  EF02  F008         	goto	l2936
  2220   000FD8                     u2120:
  2221   000FD8                     
  2222                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  2223   000FD8  C02E  F030         	movff	digitalRead@pin,??_digitalRead
  2224   000FDC  0EF0               	movlw	-16
  2225   000FDE  2630               	addwf	??_digitalRead^0,f,c
  2226   000FE0  0E01               	movlw	1
  2227   000FE2  6E31               	movwf	(??_digitalRead+1)^0,c
  2228   000FE4  2A30               	incf	??_digitalRead^0,f,c
  2229   000FE6  EFF7  F007         	goto	u2134
  2230   000FEA                     u2135:
  2231   000FEA  90D8               	bcf	status,0,c
  2232   000FEC  3631               	rlcf	(??_digitalRead+1)^0,f,c
  2233   000FEE                     u2134:
  2234   000FEE  2E30               	decfsz	??_digitalRead^0,f,c
  2235   000FF0  EFF5  F007         	goto	u2135
  2236   000FF4  5031               	movf	(??_digitalRead+1)^0,w,c
  2237   000FF6  1482               	andwf	130,w,c	;volatile
  2238   000FF8  6E32               	movwf	(??_digitalRead+2)^0,c
  2239   000FFA  5032               	movf	(??_digitalRead+2)^0,w,c
  2240   000FFC  6E2E               	movwf	?_digitalRead^0,c
  2241   000FFE  6A2F               	clrf	(?_digitalRead+1)^0,c
  2242   001000  EF4C  F008         	goto	l83
  2243   001004                     l2936:
  2244   001004  BE2F               	btfsc	(digitalRead@pin+1)^0,7,c
  2245   001006  EF10  F008         	goto	u2140
  2246   00100A  502F               	movf	(digitalRead@pin+1)^0,w,c
  2247   00100C  E107               	bnz	u2141
  2248   00100E  0E20               	movlw	32
  2249   001010  5C2E               	subwf	digitalRead@pin^0,w,c
  2250   001012  B0D8               	btfsc	status,0,c
  2251   001014  EF0E  F008         	goto	u2141
  2252   001018  EF10  F008         	goto	u2140
  2253   00101C                     u2141:
  2254   00101C  EF26  F008         	goto	l2944
  2255   001020                     u2140:
  2256   001020                     
  2257                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  2258   001020  C02E  F030         	movff	digitalRead@pin,??_digitalRead
  2259   001024  0EE8               	movlw	-24
  2260   001026  2630               	addwf	??_digitalRead^0,f,c
  2261   001028  0E01               	movlw	1
  2262   00102A  6E31               	movwf	(??_digitalRead+1)^0,c
  2263   00102C  2A30               	incf	??_digitalRead^0,f,c
  2264   00102E  EF1B  F008         	goto	u2154
  2265   001032                     u2155:
  2266   001032  90D8               	bcf	status,0,c
  2267   001034  3631               	rlcf	(??_digitalRead+1)^0,f,c
  2268   001036                     u2154:
  2269   001036  2E30               	decfsz	??_digitalRead^0,f,c
  2270   001038  EF19  F008         	goto	u2155
  2271   00103C  5031               	movf	(??_digitalRead+1)^0,w,c
  2272   00103E  1483               	andwf	131,w,c	;volatile
  2273   001040  6E32               	movwf	(??_digitalRead+2)^0,c
  2274   001042  5032               	movf	(??_digitalRead+2)^0,w,c
  2275   001044  6E2E               	movwf	?_digitalRead^0,c
  2276   001046  6A2F               	clrf	(?_digitalRead+1)^0,c
  2277   001048  EF4C  F008         	goto	l83
  2278   00104C                     l2944:
  2279   00104C  BE2F               	btfsc	(digitalRead@pin+1)^0,7,c
  2280   00104E  EF34  F008         	goto	u2160
  2281   001052  502F               	movf	(digitalRead@pin+1)^0,w,c
  2282   001054  E107               	bnz	u2161
  2283   001056  0E28               	movlw	40
  2284   001058  5C2E               	subwf	digitalRead@pin^0,w,c
  2285   00105A  B0D8               	btfsc	status,0,c
  2286   00105C  EF32  F008         	goto	u2161
  2287   001060  EF34  F008         	goto	u2160
  2288   001064                     u2161:
  2289   001064  EF4A  F008         	goto	l88
  2290   001068                     u2160:
  2291   001068                     
  2292                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  2293   001068  C02E  F030         	movff	digitalRead@pin,??_digitalRead
  2294   00106C  0EE0               	movlw	-32
  2295   00106E  2630               	addwf	??_digitalRead^0,f,c
  2296   001070  0E01               	movlw	1
  2297   001072  6E31               	movwf	(??_digitalRead+1)^0,c
  2298   001074  2A30               	incf	??_digitalRead^0,f,c
  2299   001076  EF3F  F008         	goto	u2174
  2300   00107A                     u2175:
  2301   00107A  90D8               	bcf	status,0,c
  2302   00107C  3631               	rlcf	(??_digitalRead+1)^0,f,c
  2303   00107E                     u2174:
  2304   00107E  2E30               	decfsz	??_digitalRead^0,f,c
  2305   001080  EF3D  F008         	goto	u2175
  2306   001084  5031               	movf	(??_digitalRead+1)^0,w,c
  2307   001086  1484               	andwf	132,w,c	;volatile
  2308   001088  6E32               	movwf	(??_digitalRead+2)^0,c
  2309   00108A  5032               	movf	(??_digitalRead+2)^0,w,c
  2310   00108C  6E2E               	movwf	?_digitalRead^0,c
  2311   00108E  6A2F               	clrf	(?_digitalRead+1)^0,c
  2312   001090  EF4C  F008         	goto	l83
  2313   001094                     l88:
  2314   001094                     
  2315                           ;io.c: 51:     return -1;
  2316   001094  682E               	setf	?_digitalRead^0,c
  2317   001096  682F               	setf	(?_digitalRead+1)^0,c
  2318   001098                     l83:
  2319   001098  0012               	return		;funcret
  2320   00109A                     __end_of_digitalRead:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _clear_SCL *****************
  2324 ;; Defined at:
  2325 ;;		line 39 in file "soft_i2c.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 1
  2346 ;; This function calls:
  2347 ;;		_digitalWrite
  2348 ;;		_pinMode
  2349 ;; This function is called by:
  2350 ;;		_i2c_start
  2351 ;;		_i2c_write_bit
  2352 ;;		_i2c_read_bit
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text16
  2357   0018C4                     __ptext16:
  2358                           	callstack 0
  2359   0018C4                     _clear_SCL:
  2360                           	callstack 23
  2361   0018C4                     
  2362                           ;soft_i2c.c: 41:  pinMode(PIN_B1,0);
  2363   0018C4  0E00               	movlw	0
  2364   0018C6  6E2F               	movwf	(pinMode@pin+1)^0,c
  2365   0018C8  0E09               	movlw	9
  2366   0018CA  6E2E               	movwf	pinMode@pin^0,c
  2367   0018CC  0E00               	movlw	0
  2368   0018CE  6E31               	movwf	(pinMode@type+1)^0,c
  2369   0018D0  0E00               	movlw	0
  2370   0018D2  6E30               	movwf	pinMode@type^0,c
  2371   0018D4  EC77  F005         	call	_pinMode	;wreg free
  2372                           
  2373                           ;soft_i2c.c: 42:  digitalWrite(PIN_B1,0);
  2374   0018D8  0E00               	movlw	0
  2375   0018DA  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  2376   0018DC  0E09               	movlw	9
  2377   0018DE  6E2E               	movwf	digitalWrite@pin^0,c
  2378   0018E0  0E00               	movlw	0
  2379   0018E2  6E31               	movwf	(digitalWrite@value+1)^0,c
  2380   0018E4  0E00               	movlw	0
  2381   0018E6  6E30               	movwf	digitalWrite@value^0,c
  2382   0018E8  EC50  F004         	call	_digitalWrite	;wreg free
  2383   0018EC  0012               	return		;funcret
  2384   0018EE                     __end_of_clear_SCL:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _digitalWrite *****************
  2388 ;; Defined at:
  2389 ;;		line 14 in file "io.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  pin             2    0[COMRAM] int 
  2392 ;;  value           2    2[COMRAM] int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2404 ;;      Params:         4       0       0       0       0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2406 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2407 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2408 ;;Total ram usage:        6 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_clear_SCL
  2414 ;;		_clear_SDA
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text17
  2419   0008A0                     __ptext17:
  2420                           	callstack 0
  2421   0008A0                     _digitalWrite:
  2422                           	callstack 23
  2423   0008A0                     
  2424                           ;io.c: 16:     if(pin <8){
  2425   0008A0  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2426   0008A2  EF5E  F004         	goto	u1880
  2427   0008A6  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2428   0008A8  E107               	bnz	u1881
  2429   0008AA  0E08               	movlw	8
  2430   0008AC  5C2E               	subwf	digitalWrite@pin^0,w,c
  2431   0008AE  B0D8               	btfsc	status,0,c
  2432   0008B0  EF5C  F004         	goto	u1881
  2433   0008B4  EF5E  F004         	goto	u1880
  2434   0008B8                     u1881:
  2435   0008B8  EF88  F004         	goto	l2880
  2436   0008BC                     u1880:
  2437   0008BC                     
  2438                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2439   0008BC  5030               	movf	digitalWrite@value^0,w,c
  2440   0008BE  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2441   0008C0  B4D8               	btfsc	status,2,c
  2442   0008C2  EF65  F004         	goto	u1891
  2443   0008C6  EF67  F004         	goto	u1890
  2444   0008CA                     u1891:
  2445   0008CA  EF77  F004         	goto	l2878
  2446   0008CE                     u1890:
  2447   0008CE  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2448   0008D2  0E01               	movlw	1
  2449   0008D4  6E33               	movwf	(??_digitalWrite+1)^0,c
  2450   0008D6  2A32               	incf	??_digitalWrite^0,f,c
  2451   0008D8  EF70  F004         	goto	u1904
  2452   0008DC                     u1905:
  2453   0008DC  90D8               	bcf	status,0,c
  2454   0008DE  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2455   0008E0                     u1904:
  2456   0008E0  2E32               	decfsz	??_digitalWrite^0,f,c
  2457   0008E2  EF6E  F004         	goto	u1905
  2458   0008E6  5033               	movf	(??_digitalWrite+1)^0,w,c
  2459   0008E8  1280               	iorwf	128,f,c	;volatile
  2460   0008EA  EF76  F005         	goto	l79
  2461   0008EE                     l2878:
  2462   0008EE  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2463   0008F2  0E01               	movlw	1
  2464   0008F4  6E33               	movwf	(??_digitalWrite+1)^0,c
  2465   0008F6  2A32               	incf	??_digitalWrite^0,f,c
  2466   0008F8  EF80  F004         	goto	u1914
  2467   0008FC                     u1915:
  2468   0008FC  90D8               	bcf	status,0,c
  2469   0008FE  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2470   000900                     u1914:
  2471   000900  2E32               	decfsz	??_digitalWrite^0,f,c
  2472   000902  EF7E  F004         	goto	u1915
  2473   000906  5033               	movf	(??_digitalWrite+1)^0,w,c
  2474   000908  0AFF               	xorlw	255
  2475   00090A  1680               	andwf	128,f,c	;volatile
  2476   00090C  EF76  F005         	goto	l79
  2477   000910                     l2880:
  2478   000910  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2479   000912  EF96  F004         	goto	u1920
  2480   000916  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2481   000918  E107               	bnz	u1921
  2482   00091A  0E10               	movlw	16
  2483   00091C  5C2E               	subwf	digitalWrite@pin^0,w,c
  2484   00091E  B0D8               	btfsc	status,0,c
  2485   000920  EF94  F004         	goto	u1921
  2486   000924  EF96  F004         	goto	u1920
  2487   000928                     u1921:
  2488   000928  EFC4  F004         	goto	l2888
  2489   00092C                     u1920:
  2490   00092C                     
  2491                           ;io.c: 20:         pin -=8;
  2492   00092C  0EF8               	movlw	248
  2493   00092E  262E               	addwf	digitalWrite@pin^0,f,c
  2494   000930  0EFF               	movlw	255
  2495   000932  222F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2496                           
  2497                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2498   000934  5030               	movf	digitalWrite@value^0,w,c
  2499   000936  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2500   000938  B4D8               	btfsc	status,2,c
  2501   00093A  EFA1  F004         	goto	u1931
  2502   00093E  EFA3  F004         	goto	u1930
  2503   000942                     u1931:
  2504   000942  EFB3  F004         	goto	l2886
  2505   000946                     u1930:
  2506   000946  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2507   00094A  0E01               	movlw	1
  2508   00094C  6E33               	movwf	(??_digitalWrite+1)^0,c
  2509   00094E  2A32               	incf	??_digitalWrite^0,f,c
  2510   000950  EFAC  F004         	goto	u1944
  2511   000954                     u1945:
  2512   000954  90D8               	bcf	status,0,c
  2513   000956  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2514   000958                     u1944:
  2515   000958  2E32               	decfsz	??_digitalWrite^0,f,c
  2516   00095A  EFAA  F004         	goto	u1945
  2517   00095E  5033               	movf	(??_digitalWrite+1)^0,w,c
  2518   000960  1281               	iorwf	129,f,c	;volatile
  2519   000962  EF76  F005         	goto	l79
  2520   000966                     l2886:
  2521   000966  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2522   00096A  0E01               	movlw	1
  2523   00096C  6E33               	movwf	(??_digitalWrite+1)^0,c
  2524   00096E  2A32               	incf	??_digitalWrite^0,f,c
  2525   000970  EFBC  F004         	goto	u1954
  2526   000974                     u1955:
  2527   000974  90D8               	bcf	status,0,c
  2528   000976  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2529   000978                     u1954:
  2530   000978  2E32               	decfsz	??_digitalWrite^0,f,c
  2531   00097A  EFBA  F004         	goto	u1955
  2532   00097E  5033               	movf	(??_digitalWrite+1)^0,w,c
  2533   000980  0AFF               	xorlw	255
  2534   000982  1681               	andwf	129,f,c	;volatile
  2535   000984  EF76  F005         	goto	l79
  2536   000988                     l2888:
  2537   000988  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2538   00098A  EFD2  F004         	goto	u1960
  2539   00098E  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2540   000990  E107               	bnz	u1961
  2541   000992  0E18               	movlw	24
  2542   000994  5C2E               	subwf	digitalWrite@pin^0,w,c
  2543   000996  B0D8               	btfsc	status,0,c
  2544   000998  EFD0  F004         	goto	u1961
  2545   00099C  EFD2  F004         	goto	u1960
  2546   0009A0                     u1961:
  2547   0009A0  EF00  F005         	goto	l2896
  2548   0009A4                     u1960:
  2549   0009A4                     
  2550                           ;io.c: 24:         pin -=16;
  2551   0009A4  0EF0               	movlw	240
  2552   0009A6  262E               	addwf	digitalWrite@pin^0,f,c
  2553   0009A8  0EFF               	movlw	255
  2554   0009AA  222F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2555                           
  2556                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2557   0009AC  5030               	movf	digitalWrite@value^0,w,c
  2558   0009AE  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2559   0009B0  B4D8               	btfsc	status,2,c
  2560   0009B2  EFDD  F004         	goto	u1971
  2561   0009B6  EFDF  F004         	goto	u1970
  2562   0009BA                     u1971:
  2563   0009BA  EFEF  F004         	goto	l2894
  2564   0009BE                     u1970:
  2565   0009BE  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2566   0009C2  0E01               	movlw	1
  2567   0009C4  6E33               	movwf	(??_digitalWrite+1)^0,c
  2568   0009C6  2A32               	incf	??_digitalWrite^0,f,c
  2569   0009C8  EFE8  F004         	goto	u1984
  2570   0009CC                     u1985:
  2571   0009CC  90D8               	bcf	status,0,c
  2572   0009CE  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2573   0009D0                     u1984:
  2574   0009D0  2E32               	decfsz	??_digitalWrite^0,f,c
  2575   0009D2  EFE6  F004         	goto	u1985
  2576   0009D6  5033               	movf	(??_digitalWrite+1)^0,w,c
  2577   0009D8  1282               	iorwf	130,f,c	;volatile
  2578   0009DA  EF76  F005         	goto	l79
  2579   0009DE                     l2894:
  2580   0009DE  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2581   0009E2  0E01               	movlw	1
  2582   0009E4  6E33               	movwf	(??_digitalWrite+1)^0,c
  2583   0009E6  2A32               	incf	??_digitalWrite^0,f,c
  2584   0009E8  EFF8  F004         	goto	u1994
  2585   0009EC                     u1995:
  2586   0009EC  90D8               	bcf	status,0,c
  2587   0009EE  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2588   0009F0                     u1994:
  2589   0009F0  2E32               	decfsz	??_digitalWrite^0,f,c
  2590   0009F2  EFF6  F004         	goto	u1995
  2591   0009F6  5033               	movf	(??_digitalWrite+1)^0,w,c
  2592   0009F8  0AFF               	xorlw	255
  2593   0009FA  1682               	andwf	130,f,c	;volatile
  2594   0009FC  EF76  F005         	goto	l79
  2595   000A00                     l2896:
  2596   000A00  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2597   000A02  EF0E  F005         	goto	u2000
  2598   000A06  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2599   000A08  E107               	bnz	u2001
  2600   000A0A  0E20               	movlw	32
  2601   000A0C  5C2E               	subwf	digitalWrite@pin^0,w,c
  2602   000A0E  B0D8               	btfsc	status,0,c
  2603   000A10  EF0C  F005         	goto	u2001
  2604   000A14  EF0E  F005         	goto	u2000
  2605   000A18                     u2001:
  2606   000A18  EF3C  F005         	goto	l2904
  2607   000A1C                     u2000:
  2608   000A1C                     
  2609                           ;io.c: 28:         pin -=24;
  2610   000A1C  0EE8               	movlw	232
  2611   000A1E  262E               	addwf	digitalWrite@pin^0,f,c
  2612   000A20  0EFF               	movlw	255
  2613   000A22  222F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2614                           
  2615                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  2616   000A24  5030               	movf	digitalWrite@value^0,w,c
  2617   000A26  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2618   000A28  B4D8               	btfsc	status,2,c
  2619   000A2A  EF19  F005         	goto	u2011
  2620   000A2E  EF1B  F005         	goto	u2010
  2621   000A32                     u2011:
  2622   000A32  EF2B  F005         	goto	l2902
  2623   000A36                     u2010:
  2624   000A36  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2625   000A3A  0E01               	movlw	1
  2626   000A3C  6E33               	movwf	(??_digitalWrite+1)^0,c
  2627   000A3E  2A32               	incf	??_digitalWrite^0,f,c
  2628   000A40  EF24  F005         	goto	u2024
  2629   000A44                     u2025:
  2630   000A44  90D8               	bcf	status,0,c
  2631   000A46  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2632   000A48                     u2024:
  2633   000A48  2E32               	decfsz	??_digitalWrite^0,f,c
  2634   000A4A  EF22  F005         	goto	u2025
  2635   000A4E  5033               	movf	(??_digitalWrite+1)^0,w,c
  2636   000A50  1283               	iorwf	131,f,c	;volatile
  2637   000A52  EF76  F005         	goto	l79
  2638   000A56                     l2902:
  2639   000A56  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2640   000A5A  0E01               	movlw	1
  2641   000A5C  6E33               	movwf	(??_digitalWrite+1)^0,c
  2642   000A5E  2A32               	incf	??_digitalWrite^0,f,c
  2643   000A60  EF34  F005         	goto	u2034
  2644   000A64                     u2035:
  2645   000A64  90D8               	bcf	status,0,c
  2646   000A66  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2647   000A68                     u2034:
  2648   000A68  2E32               	decfsz	??_digitalWrite^0,f,c
  2649   000A6A  EF32  F005         	goto	u2035
  2650   000A6E  5033               	movf	(??_digitalWrite+1)^0,w,c
  2651   000A70  0AFF               	xorlw	255
  2652   000A72  1683               	andwf	131,f,c	;volatile
  2653   000A74  EF76  F005         	goto	l79
  2654   000A78                     l2904:
  2655   000A78  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2656   000A7A  EF4A  F005         	goto	u2040
  2657   000A7E  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2658   000A80  E107               	bnz	u2041
  2659   000A82  0E28               	movlw	40
  2660   000A84  5C2E               	subwf	digitalWrite@pin^0,w,c
  2661   000A86  B0D8               	btfsc	status,0,c
  2662   000A88  EF48  F005         	goto	u2041
  2663   000A8C  EF4A  F005         	goto	u2040
  2664   000A90                     u2041:
  2665   000A90  EF76  F005         	goto	l79
  2666   000A94                     u2040:
  2667   000A94                     
  2668                           ;io.c: 32:         pin -=32;
  2669   000A94  0EE0               	movlw	224
  2670   000A96  262E               	addwf	digitalWrite@pin^0,f,c
  2671   000A98  0EFF               	movlw	255
  2672   000A9A  222F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2673                           
  2674                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  2675   000A9C  5030               	movf	digitalWrite@value^0,w,c
  2676   000A9E  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2677   000AA0  B4D8               	btfsc	status,2,c
  2678   000AA2  EF55  F005         	goto	u2051
  2679   000AA6  EF57  F005         	goto	u2050
  2680   000AAA                     u2051:
  2681   000AAA  EF67  F005         	goto	l2910
  2682   000AAE                     u2050:
  2683   000AAE  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2684   000AB2  0E01               	movlw	1
  2685   000AB4  6E33               	movwf	(??_digitalWrite+1)^0,c
  2686   000AB6  2A32               	incf	??_digitalWrite^0,f,c
  2687   000AB8  EF60  F005         	goto	u2064
  2688   000ABC                     u2065:
  2689   000ABC  90D8               	bcf	status,0,c
  2690   000ABE  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2691   000AC0                     u2064:
  2692   000AC0  2E32               	decfsz	??_digitalWrite^0,f,c
  2693   000AC2  EF5E  F005         	goto	u2065
  2694   000AC6  5033               	movf	(??_digitalWrite+1)^0,w,c
  2695   000AC8  1284               	iorwf	132,f,c	;volatile
  2696   000ACA  EF76  F005         	goto	l79
  2697   000ACE                     l2910:
  2698   000ACE  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2699   000AD2  0E01               	movlw	1
  2700   000AD4  6E33               	movwf	(??_digitalWrite+1)^0,c
  2701   000AD6  2A32               	incf	??_digitalWrite^0,f,c
  2702   000AD8  EF70  F005         	goto	u2074
  2703   000ADC                     u2075:
  2704   000ADC  90D8               	bcf	status,0,c
  2705   000ADE  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2706   000AE0                     u2074:
  2707   000AE0  2E32               	decfsz	??_digitalWrite^0,f,c
  2708   000AE2  EF6E  F005         	goto	u2075
  2709   000AE6  5033               	movf	(??_digitalWrite+1)^0,w,c
  2710   000AE8  0AFF               	xorlw	255
  2711   000AEA  1684               	andwf	132,f,c	;volatile
  2712   000AEC                     l79:
  2713   000AEC  0012               	return		;funcret
  2714   000AEE                     __end_of_digitalWrite:
  2715                           	callstack 0
  2716                           
  2717 ;; *************** function _I2C_delay *****************
  2718 ;; Defined at:
  2719 ;;		line 22 in file "soft_i2c.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  i               2    0        int 
  2724 ;;  v               2    0        volatile int 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		None
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2737 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_i2c_start
  2744 ;;		_i2c_stop
  2745 ;;		_i2c_write_bit
  2746 ;;		_i2c_read_bit
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text18
  2751   001A10                     __ptext18:
  2752                           	callstack 0
  2753   001A10                     _I2C_delay:
  2754                           	callstack 24
  2755   001A10  0012               	return		;funcret
  2756   001A12                     __end_of_I2C_delay:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _dec2bcd *****************
  2760 ;; Defined at:
  2761 ;;		line 9 in file "ds1307.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  value           2   14[COMRAM] int 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  2   14[COMRAM] int 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2775 ;;      Params:         2       0       0       0       0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2777 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2778 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2779 ;;Total ram usage:        6 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 1
  2782 ;; This function calls:
  2783 ;;		___awdiv
  2784 ;;		___awmod
  2785 ;; This function is called by:
  2786 ;;		_varInit
  2787 ;;		_smLoop
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text19
  2792   0013C6                     __ptext19:
  2793                           	callstack 0
  2794   0013C6                     _dec2bcd:
  2795                           	callstack 27
  2796   0013C6                     
  2797                           ;ds1307.c: 10:     value = (((value / 10 * 16) + (value % 10))) | 1 << 7;
  2798   0013C6  C03C  F02E         	movff	dec2bcd@value,___awdiv@dividend
  2799   0013CA  C03D  F02F         	movff	dec2bcd@value+1,___awdiv@dividend+1
  2800   0013CE  0E00               	movlw	0
  2801   0013D0  6E31               	movwf	(___awdiv@divisor+1)^0,c
  2802   0013D2  0E0A               	movlw	10
  2803   0013D4  6E30               	movwf	___awdiv@divisor^0,c
  2804   0013D6  ECB1  F008         	call	___awdiv	;wreg free
  2805   0013DA  C02E  F03E         	movff	?___awdiv,??_dec2bcd
  2806   0013DE  C02F  F03F         	movff	?___awdiv+1,??_dec2bcd+1
  2807   0013E2  3A3E               	swapf	??_dec2bcd^0,f,c
  2808   0013E4  3A3F               	swapf	(??_dec2bcd+1)^0,f,c
  2809   0013E6  0EF0               	movlw	240
  2810   0013E8  163F               	andwf	(??_dec2bcd+1)^0,f,c
  2811   0013EA  503E               	movf	??_dec2bcd^0,w,c
  2812   0013EC  0B0F               	andlw	15
  2813   0013EE  123F               	iorwf	(??_dec2bcd+1)^0,f,c
  2814   0013F0  0EF0               	movlw	240
  2815   0013F2  163E               	andwf	??_dec2bcd^0,f,c
  2816   0013F4  C03C  F036         	movff	dec2bcd@value,___awmod@dividend
  2817   0013F8  C03D  F037         	movff	dec2bcd@value+1,___awmod@dividend+1
  2818   0013FC  0E00               	movlw	0
  2819   0013FE  6E39               	movwf	(___awmod@divisor+1)^0,c
  2820   001400  0E0A               	movlw	10
  2821   001402  6E38               	movwf	___awmod@divisor^0,c
  2822   001404  EC13  F009         	call	___awmod	;wreg free
  2823   001408  5036               	movf	?___awmod^0,w,c
  2824   00140A  243E               	addwf	??_dec2bcd^0,w,c
  2825   00140C  6E40               	movwf	(??_dec2bcd+2)^0,c
  2826   00140E  5037               	movf	(?___awmod+1)^0,w,c
  2827   001410  203F               	addwfc	(??_dec2bcd+1)^0,w,c
  2828   001412  6E41               	movwf	(??_dec2bcd+3)^0,c
  2829   001414  0E80               	movlw	128
  2830   001416  1040               	iorwf	(??_dec2bcd+2)^0,w,c
  2831   001418  6E3C               	movwf	dec2bcd@value^0,c
  2832   00141A  5041               	movf	(??_dec2bcd+3)^0,w,c
  2833   00141C  6E3D               	movwf	(dec2bcd@value+1)^0,c
  2834   00141E                     
  2835                           ;ds1307.c: 11:     return value;
  2836   00141E  C03C  F03C         	movff	dec2bcd@value,?_dec2bcd
  2837   001422  C03D  F03D         	movff	dec2bcd@value+1,?_dec2bcd+1
  2838   001426  0012               	return		;funcret
  2839   001428                     __end_of_dec2bcd:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function _bcd2dec *****************
  2843 ;; Defined at:
  2844 ;;		line 14 in file "ds1307.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  value           2   18[COMRAM] int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  2   18[COMRAM] int 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2858 ;;      Params:         2       0       0       0       0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2860 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2861 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2862 ;;Total ram usage:        4 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 1
  2865 ;; This function calls:
  2866 ;;		___awdiv
  2867 ;;		___wmul
  2868 ;; This function is called by:
  2869 ;;		_varInit
  2870 ;;		_outputPrint
  2871 ;;		_smLoop
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text20
  2876   0016F6                     __ptext20:
  2877                           	callstack 0
  2878   0016F6                     _bcd2dec:
  2879                           	callstack 27
  2880   0016F6                     
  2881                           ;ds1307.c: 15:  return ((value / 16 * 10) + (value % 16));
  2882   0016F6  0E0F               	movlw	15
  2883   0016F8  1440               	andwf	bcd2dec@value^0,w,c
  2884   0016FA  6E42               	movwf	??_bcd2dec^0,c
  2885   0016FC  0E00               	movlw	0
  2886   0016FE  1441               	andwf	(bcd2dec@value+1)^0,w,c
  2887   001700  6E43               	movwf	(??_bcd2dec+1)^0,c
  2888   001702  0E00               	movlw	0
  2889   001704  6E31               	movwf	(___awdiv@divisor+1)^0,c
  2890   001706  0E10               	movlw	16
  2891   001708  6E30               	movwf	___awdiv@divisor^0,c
  2892   00170A  C040  F02E         	movff	bcd2dec@value,___awdiv@dividend
  2893   00170E  C041  F02F         	movff	bcd2dec@value+1,___awdiv@dividend+1
  2894   001712  ECB1  F008         	call	___awdiv	;wreg free
  2895   001716  C02E  F036         	movff	?___awdiv,___wmul@multiplier
  2896   00171A  C02F  F037         	movff	?___awdiv+1,___wmul@multiplier+1
  2897   00171E  0E00               	movlw	0
  2898   001720  6E39               	movwf	(___wmul@multiplicand+1)^0,c
  2899   001722  0E0A               	movlw	10
  2900   001724  6E38               	movwf	___wmul@multiplicand^0,c
  2901   001726  EC8C  F00C         	call	___wmul	;wreg free
  2902   00172A  5042               	movf	??_bcd2dec^0,w,c
  2903   00172C  2436               	addwf	?___wmul^0,w,c
  2904   00172E  6E40               	movwf	?_bcd2dec^0,c
  2905   001730  5043               	movf	(??_bcd2dec+1)^0,w,c
  2906   001732  2037               	addwfc	(?___wmul+1)^0,w,c
  2907   001734  6E41               	movwf	(?_bcd2dec+1)^0,c
  2908   001736  0012               	return		;funcret
  2909   001738                     __end_of_bcd2dec:
  2910                           	callstack 0
  2911                           
  2912 ;; *************** function _setState *****************
  2913 ;; Defined at:
  2914 ;;		line 38 in file "var.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  newState        1    wreg     unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  newState        1    3[COMRAM] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0
  2929 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2931 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2932 ;;Total ram usage:        1 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 3
  2935 ;; This function calls:
  2936 ;;		_lcdCommand
  2937 ;; This function is called by:
  2938 ;;		_smInit
  2939 ;;		_smLoop
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text21
  2944   0019D4                     __ptext21:
  2945                           	callstack 0
  2946   0019D4                     _setState:
  2947                           	callstack 26
  2948                           
  2949                           ;incstack = 0
  2950                           ;setState@newState stored from wreg
  2951   0019D4  6E31               	movwf	setState@newState^0,c
  2952   0019D6                     
  2953                           ;var.c: 39:     state = newState;
  2954   0019D6  C031  F01A         	movff	setState@newState,_state
  2955   0019DA                     
  2956                           ;var.c: 40:     lcdCommand(0x01);
  2957   0019DA  0E01               	movlw	1
  2958   0019DC  EC11  F00B         	call	_lcdCommand
  2959   0019E0  0012               	return		;funcret
  2960   0019E2                     __end_of_setState:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _eventInit *****************
  2964 ;; Defined at:
  2965 ;;		line 18 in file "event.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 1
  2986 ;; This function calls:
  2987 ;;		_kpInit
  2988 ;; This function is called by:
  2989 ;;		_smInit
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text22
  2994   0019AE                     __ptext22:
  2995                           	callstack 0
  2996   0019AE                     _eventInit:
  2997                           	callstack 28
  2998   0019AE                     
  2999                           ;event.c: 19:     kpInit();
  3000   0019AE  ECF1  F00C         	call	_kpInit	;wreg free
  3001   0019B2                     
  3002                           ;event.c: 21:     ev_ant = 0;
  3003   0019B2  0E00               	movlw	0
  3004   0019B4  6E15               	movwf	(_ev_ant+1)^0,c
  3005   0019B6  0E00               	movlw	0
  3006   0019B8  6E14               	movwf	_ev_ant^0,c
  3007   0019BA                     
  3008                           ;event.c: 22:     key = 1;
  3009   0019BA  0E00               	movlw	0
  3010   0019BC  6E11               	movwf	(_key+1)^0,c
  3011   0019BE  0E01               	movlw	1
  3012   0019C0  6E10               	movwf	_key^0,c
  3013   0019C2  0012               	return		;funcret
  3014   0019C4                     __end_of_eventInit:
  3015                           	callstack 0
  3016                           
  3017 ;; *************** function _kpInit *****************
  3018 ;; Defined at:
  3019 ;;		line 81 in file "keypad.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3033 ;;      Params:         0       0       0       0       0       0       0       0       0
  3034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3036 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3037 ;;Total ram usage:        0 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;;		_eventInit
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text23
  3048   0019E2                     __ptext23:
  3049                           	callstack 0
  3050   0019E2                     _kpInit:
  3051                           	callstack 28
  3052   0019E2                     
  3053                           ;keypad.c: 82:     (*(volatile __near unsigned char*)0xF93) = 0xFF;
  3054   0019E2  6893               	setf	147,c	;volatile
  3055   0019E4                     
  3056                           ;keypad.c: 83:     (((*(volatile __near unsigned char*)0xFF1)) &= ~(1<<7));
  3057   0019E4  9EF1               	bcf	241,7,c	;volatile
  3058   0019E6                     
  3059                           ;keypad.c: 84:     (*(volatile __near unsigned char*)0xFC1) = 0b00001110;
  3060   0019E6  0E0E               	movlw	14
  3061   0019E8  6EC1               	movwf	193,c	;volatile
  3062   0019EA                     
  3063                           ;keypad.c: 87:     (*(volatile __near unsigned char*)0xF63) = 0x00;
  3064   0019EA  0E00               	movlw	0
  3065   0019EC  6E63               	movwf	99,c	;volatile
  3066   0019EE  0012               	return		;funcret
  3067   0019F0                     __end_of_kpInit:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _serialInit *****************
  3071 ;; Defined at:
  3072 ;;		line 48 in file "serial.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text24
  3100   00197C                     __ptext24:
  3101                           	callstack 0
  3102   00197C                     _serialInit:
  3103                           	callstack 30
  3104   00197C                     
  3105                           ;serial.c: 49:     (*(volatile __near unsigned char*)0xFAC) = 0b00101100;
  3106   00197C  0E2C               	movlw	44
  3107   00197E  6EAC               	movwf	172,c	;volatile
  3108                           
  3109                           ;serial.c: 50:     (*(volatile __near unsigned char*)0xFAB) = 0b10010000;
  3110   001980  0E90               	movlw	144
  3111   001982  6EAB               	movwf	171,c	;volatile
  3112                           
  3113                           ;serial.c: 51:     (*(volatile __near unsigned char*)0xFB8) = 0b00001000;
  3114   001984  0E08               	movlw	8
  3115   001986  6EB8               	movwf	184,c	;volatile
  3116                           
  3117                           ;serial.c: 52:     (*(volatile __near unsigned char*)0xFB0) = 0b00000000;
  3118   001988  0E00               	movlw	0
  3119   00198A  6EB0               	movwf	176,c	;volatile
  3120                           
  3121                           ;serial.c: 53:     (*(volatile __near unsigned char*)0xFAF) = 0b00100010;
  3122   00198C  0E22               	movlw	34
  3123   00198E  6EAF               	movwf	175,c	;volatile
  3124   001990                     
  3125                           ;serial.c: 54:     (((*(volatile __near unsigned char*)0xF94)) |= (1<<6));
  3126   001990  8C94               	bsf	148,6,c	;volatile
  3127   001992                     
  3128                           ;serial.c: 55:     (((*(volatile __near unsigned char*)0xF94)) |= (1<<7));
  3129   001992  8E94               	bsf	148,7,c	;volatile
  3130   001994  0012               	return		;funcret
  3131   001996                     __end_of_serialInit:
  3132                           	callstack 0
  3133                           
  3134 ;; *************** function _lcdInt *****************
  3135 ;; Defined at:
  3136 ;;		line 174 in file "lcd.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  val             2   14[COMRAM] int 
  3139 ;;  digNum          1   16[COMRAM] unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  j               2   18[COMRAM] int 
  3142 ;;  divisor         2   20[COMRAM] int 
  3143 ;;  i               2   22[COMRAM] int 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3153 ;;      Params:         3       0       0       0       0       0       0       0       0
  3154 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3155 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3156 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3157 ;;Total ram usage:       10 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 3
  3160 ;; This function calls:
  3161 ;;		___awdiv
  3162 ;;		___awmod
  3163 ;;		___wmul
  3164 ;;		_lcdData
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;;		_outputPrint
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text25
  3172   00109A                     __ptext25:
  3173                           	callstack 0
  3174   00109A                     _lcdInt:
  3175                           	callstack 27
  3176   00109A                     
  3177                           ;lcd.c: 175:     if (val < 0) {
  3178   00109A  BE3D               	btfsc	(lcdInt@val+1)^0,7,c
  3179   00109C  EF54  F008         	goto	u2880
  3180   0010A0  EF52  F008         	goto	u2881
  3181   0010A4                     u2881:
  3182   0010A4  EF5B  F008         	goto	l3396
  3183   0010A8                     u2880:
  3184   0010A8                     
  3185                           ;lcd.c: 176:         val = val * (-1);
  3186   0010A8  6C3C               	negf	lcdInt@val^0,c
  3187   0010AA  1E3D               	comf	(lcdInt@val+1)^0,f,c
  3188   0010AC  B0D8               	btfsc	status,0,c
  3189   0010AE  2A3D               	incf	(lcdInt@val+1)^0,f,c
  3190   0010B0                     
  3191                           ;lcd.c: 177:         lcdData('-');
  3192   0010B0  0E2D               	movlw	45
  3193   0010B2  ECAF  F00C         	call	_lcdData
  3194   0010B6                     l3396:
  3195                           
  3196                           ;lcd.c: 188:     for (int i = digNum - 1; i >= 0; i--) {
  3197   0010B6  0EFF               	movlw	255
  3198   0010B8  243E               	addwf	lcdInt@digNum^0,w,c
  3199   0010BA  6E44               	movwf	lcdInt@i^0,c
  3200   0010BC  6A45               	clrf	(lcdInt@i+1)^0,c
  3201   0010BE  0EFF               	movlw	255
  3202   0010C0  2245               	addwfc	(lcdInt@i+1)^0,f,c
  3203   0010C2                     l3398:
  3204   0010C2  BE45               	btfsc	(lcdInt@i+1)^0,7,c
  3205   0010C4  EF68  F008         	goto	u2890
  3206   0010C8  EF66  F008         	goto	u2891
  3207   0010CC                     u2891:
  3208   0010CC  EF6A  F008         	goto	l3402
  3209   0010D0                     u2890:
  3210   0010D0  EFB0  F008         	goto	l203
  3211   0010D4                     l3402:
  3212                           
  3213                           ;lcd.c: 189:         int divisor = 1;
  3214   0010D4  0E00               	movlw	0
  3215   0010D6  6E43               	movwf	(lcdInt@divisor+1)^0,c
  3216   0010D8  0E01               	movlw	1
  3217   0010DA  6E42               	movwf	lcdInt@divisor^0,c
  3218                           
  3219                           ;lcd.c: 190:         for (int j = 0; j < i; j++) {
  3220   0010DC  0E00               	movlw	0
  3221   0010DE  6E41               	movwf	(lcdInt@j+1)^0,c
  3222   0010E0  0E00               	movlw	0
  3223   0010E2  6E40               	movwf	lcdInt@j^0,c
  3224   0010E4  EF84  F008         	goto	l3408
  3225   0010E8                     l3404:
  3226                           
  3227                           ;lcd.c: 191:             divisor *= 10;
  3228   0010E8  C042  F036         	movff	lcdInt@divisor,___wmul@multiplier
  3229   0010EC  C043  F037         	movff	lcdInt@divisor+1,___wmul@multiplier+1
  3230   0010F0  0E00               	movlw	0
  3231   0010F2  6E39               	movwf	(___wmul@multiplicand+1)^0,c
  3232   0010F4  0E0A               	movlw	10
  3233   0010F6  6E38               	movwf	___wmul@multiplicand^0,c
  3234   0010F8  EC8C  F00C         	call	___wmul	;wreg free
  3235   0010FC  C036  F042         	movff	?___wmul,lcdInt@divisor
  3236   001100  C037  F043         	movff	?___wmul+1,lcdInt@divisor+1
  3237   001104                     
  3238                           ;lcd.c: 192:         }
  3239   001104  4A40               	infsnz	lcdInt@j^0,f,c
  3240   001106  2A41               	incf	(lcdInt@j+1)^0,f,c
  3241   001108                     l3408:
  3242   001108  5044               	movf	lcdInt@i^0,w,c
  3243   00110A  5C40               	subwf	lcdInt@j^0,w,c
  3244   00110C  5041               	movf	(lcdInt@j+1)^0,w,c
  3245   00110E  0A80               	xorlw	128
  3246   001110  6E3F               	movwf	??_lcdInt^0,c
  3247   001112  5045               	movf	(lcdInt@i+1)^0,w,c
  3248   001114  0A80               	xorlw	128
  3249   001116  583F               	subwfb	??_lcdInt^0,w,c
  3250   001118  A0D8               	btfss	status,0,c
  3251   00111A  EF91  F008         	goto	u2901
  3252   00111E  EF93  F008         	goto	u2900
  3253   001122                     u2901:
  3254   001122  EF74  F008         	goto	l3404
  3255   001126                     u2900:
  3256   001126                     
  3257                           ;lcd.c: 193:         lcdData((val / divisor) % 10 + 48);
  3258   001126  C042  F030         	movff	lcdInt@divisor,___awdiv@divisor
  3259   00112A  C043  F031         	movff	lcdInt@divisor+1,___awdiv@divisor+1
  3260   00112E  C03C  F02E         	movff	lcdInt@val,___awdiv@dividend
  3261   001132  C03D  F02F         	movff	lcdInt@val+1,___awdiv@dividend+1
  3262   001136  ECB1  F008         	call	___awdiv	;wreg free
  3263   00113A  C02E  F036         	movff	?___awdiv,___awmod@dividend
  3264   00113E  C02F  F037         	movff	?___awdiv+1,___awmod@dividend+1
  3265   001142  0E00               	movlw	0
  3266   001144  6E39               	movwf	(___awmod@divisor+1)^0,c
  3267   001146  0E0A               	movlw	10
  3268   001148  6E38               	movwf	___awmod@divisor^0,c
  3269   00114A  EC13  F009         	call	___awmod	;wreg free
  3270   00114E  5036               	movf	?___awmod^0,w,c
  3271   001150  0F30               	addlw	48
  3272   001152  ECAF  F00C         	call	_lcdData
  3273   001156                     
  3274                           ;lcd.c: 194:     }
  3275   001156  0644               	decf	lcdInt@i^0,f,c
  3276   001158  A0D8               	btfss	status,0,c
  3277   00115A  0645               	decf	(lcdInt@i+1)^0,f,c
  3278   00115C  EF61  F008         	goto	l3398
  3279   001160                     l203:
  3280   001160  0012               	return		;funcret
  3281   001162                     __end_of_lcdInt:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _lcdData *****************
  3285 ;; Defined at:
  3286 ;;		line 108 in file "lcd.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  valor           1    wreg     unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  valor           1    2[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0
  3301 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3303 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3304 ;;Total ram usage:        1 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 2
  3307 ;; This function calls:
  3308 ;;		_Delay40us
  3309 ;;		_lcdCommand4bits
  3310 ;; This function is called by:
  3311 ;;		_lcdInt
  3312 ;;		_lcdString
  3313 ;;		_outputPrint
  3314 ;;		_printf
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text26
  3319   00195E                     __ptext26:
  3320                           	callstack 0
  3321   00195E                     _lcdData:
  3322                           	callstack 27
  3323                           
  3324                           ;incstack = 0
  3325                           ;lcdData@valor stored from wreg
  3326   00195E  6E30               	movwf	lcdData@valor^0,c
  3327   001960                     
  3328                           ;lcd.c: 109:     lcdCommand4bits(valor, 1);
  3329   001960  0E01               	movlw	1
  3330   001962  6E2E               	movwf	lcdCommand4bits@data^0,c
  3331   001964  5030               	movf	lcdData@valor^0,w,c
  3332   001966  ECA7  F009         	call	_lcdCommand4bits
  3333                           
  3334                           ;lcd.c: 110:     lcdCommand4bits(valor << 4, 1);
  3335   00196A  0E01               	movlw	1
  3336   00196C  6E2E               	movwf	lcdCommand4bits@data^0,c
  3337   00196E  3830               	swapf	lcdData@valor^0,w,c
  3338   001970  0BF0               	andlw	240
  3339   001972  ECA7  F009         	call	_lcdCommand4bits
  3340                           
  3341                           ;lcd.c: 113:     Delay40us();
  3342   001976  ECCB  F00C         	call	_Delay40us	;wreg free
  3343   00197A  0012               	return		;funcret
  3344   00197C                     __end_of_lcdData:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function ___wmul *****************
  3348 ;; Defined at:
  3349 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  multiplier      2    8[COMRAM] unsigned int 
  3352 ;;  multiplicand    2   10[COMRAM] unsigned int 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  product         2   12[COMRAM] unsigned int 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  2    8[COMRAM] unsigned int 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, prodl, prodh
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3364 ;;      Params:         4       0       0       0       0       0       0       0       0
  3365 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3367 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3368 ;;Total ram usage:        6 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_bcd2dec
  3374 ;;		_lcdInt
  3375 ;;		_pwmSet1
  3376 ;;		_pwmSet2
  3377 ;;		_smLoop
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text27
  3382   001918                     __ptext27:
  3383                           	callstack 0
  3384   001918                     ___wmul:
  3385                           	callstack 27
  3386   001918  5036               	movf	___wmul@multiplier^0,w,c
  3387   00191A  0238               	mulwf	___wmul@multiplicand^0,c
  3388   00191C  CFF3 F03A          	movff	prodl,___wmul@product
  3389   001920  CFF4 F03B          	movff	prodh,___wmul@product+1
  3390   001924  5036               	movf	___wmul@multiplier^0,w,c
  3391   001926  0239               	mulwf	(___wmul@multiplicand+1)^0,c
  3392   001928  50F3               	movf	243,w,c
  3393   00192A  263B               	addwf	(___wmul@product+1)^0,f,c
  3394   00192C  5037               	movf	(___wmul@multiplier+1)^0,w,c
  3395   00192E  0238               	mulwf	___wmul@multiplicand^0,c
  3396   001930  50F3               	movf	243,w,c
  3397   001932  263B               	addwf	(___wmul@product+1)^0,f,c
  3398   001934  C03A  F036         	movff	___wmul@product,?___wmul
  3399   001938  C03B  F037         	movff	___wmul@product+1,?___wmul+1
  3400   00193C  0012               	return		;funcret
  3401   00193E                     __end_of___wmul:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function ___awmod *****************
  3405 ;; Defined at:
  3406 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  dividend        2    8[COMRAM] int 
  3409 ;;  divisor         2   10[COMRAM] int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  sign            1   13[COMRAM] unsigned char 
  3412 ;;  counter         1   12[COMRAM] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  2    8[COMRAM] int 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3422 ;;      Params:         4       0       0       0       0       0       0       0       0
  3423 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3425 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3426 ;;Total ram usage:        6 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_dec2bcd
  3432 ;;		_lcdInt
  3433 ;;		_rtcPutSeconds
  3434 ;;		_rtcPutMinutes
  3435 ;;		_rtcPutHours
  3436 ;;		_rtcPutDate
  3437 ;;		_rtcPutMonth
  3438 ;;		_rtcPutYear
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text28
  3443   001226                     __ptext28:
  3444                           	callstack 0
  3445   001226                     ___awmod:
  3446                           	callstack 27
  3447   001226  0E00               	movlw	0
  3448   001228  6E3B               	movwf	___awmod@sign^0,c
  3449   00122A  BE37               	btfsc	(___awmod@dividend+1)^0,7,c
  3450   00122C  EF1C  F009         	goto	u2700
  3451   001230  EF1A  F009         	goto	u2701
  3452   001234                     u2701:
  3453   001234  EF22  F009         	goto	l3244
  3454   001238                     u2700:
  3455   001238  6C36               	negf	___awmod@dividend^0,c
  3456   00123A  1E37               	comf	(___awmod@dividend+1)^0,f,c
  3457   00123C  B0D8               	btfsc	status,0,c
  3458   00123E  2A37               	incf	(___awmod@dividend+1)^0,f,c
  3459   001240  0E01               	movlw	1
  3460   001242  6E3B               	movwf	___awmod@sign^0,c
  3461   001244                     l3244:
  3462   001244  BE39               	btfsc	(___awmod@divisor+1)^0,7,c
  3463   001246  EF29  F009         	goto	u2710
  3464   00124A  EF27  F009         	goto	u2711
  3465   00124E                     u2711:
  3466   00124E  EF2D  F009         	goto	l3248
  3467   001252                     u2710:
  3468   001252  6C38               	negf	___awmod@divisor^0,c
  3469   001254  1E39               	comf	(___awmod@divisor+1)^0,f,c
  3470   001256  B0D8               	btfsc	status,0,c
  3471   001258  2A39               	incf	(___awmod@divisor+1)^0,f,c
  3472   00125A                     l3248:
  3473   00125A  5038               	movf	___awmod@divisor^0,w,c
  3474   00125C  1039               	iorwf	(___awmod@divisor+1)^0,w,c
  3475   00125E  B4D8               	btfsc	status,2,c
  3476   001260  EF34  F009         	goto	u2721
  3477   001264  EF36  F009         	goto	u2720
  3478   001268                     u2721:
  3479   001268  EF5A  F009         	goto	l3264
  3480   00126C                     u2720:
  3481   00126C  0E01               	movlw	1
  3482   00126E  6E3A               	movwf	___awmod@counter^0,c
  3483   001270  EF3E  F009         	goto	l3254
  3484   001274                     l3252:
  3485   001274  90D8               	bcf	status,0,c
  3486   001276  3638               	rlcf	___awmod@divisor^0,f,c
  3487   001278  3639               	rlcf	(___awmod@divisor+1)^0,f,c
  3488   00127A  2A3A               	incf	___awmod@counter^0,f,c
  3489   00127C                     l3254:
  3490   00127C  AE39               	btfss	(___awmod@divisor+1)^0,7,c
  3491   00127E  EF43  F009         	goto	u2731
  3492   001282  EF45  F009         	goto	u2730
  3493   001286                     u2731:
  3494   001286  EF3A  F009         	goto	l3252
  3495   00128A                     u2730:
  3496   00128A                     l3256:
  3497   00128A  5038               	movf	___awmod@divisor^0,w,c
  3498   00128C  5C36               	subwf	___awmod@dividend^0,w,c
  3499   00128E  5039               	movf	(___awmod@divisor+1)^0,w,c
  3500   001290  5837               	subwfb	(___awmod@dividend+1)^0,w,c
  3501   001292  A0D8               	btfss	status,0,c
  3502   001294  EF4E  F009         	goto	u2741
  3503   001298  EF50  F009         	goto	u2740
  3504   00129C                     u2741:
  3505   00129C  EF54  F009         	goto	l3260
  3506   0012A0                     u2740:
  3507   0012A0  5038               	movf	___awmod@divisor^0,w,c
  3508   0012A2  5E36               	subwf	___awmod@dividend^0,f,c
  3509   0012A4  5039               	movf	(___awmod@divisor+1)^0,w,c
  3510   0012A6  5A37               	subwfb	(___awmod@dividend+1)^0,f,c
  3511   0012A8                     l3260:
  3512   0012A8  90D8               	bcf	status,0,c
  3513   0012AA  3239               	rrcf	(___awmod@divisor+1)^0,f,c
  3514   0012AC  3238               	rrcf	___awmod@divisor^0,f,c
  3515   0012AE  2E3A               	decfsz	___awmod@counter^0,f,c
  3516   0012B0  EF45  F009         	goto	l3256
  3517   0012B4                     l3264:
  3518   0012B4  503B               	movf	___awmod@sign^0,w,c
  3519   0012B6  B4D8               	btfsc	status,2,c
  3520   0012B8  EF60  F009         	goto	u2751
  3521   0012BC  EF62  F009         	goto	u2750
  3522   0012C0                     u2751:
  3523   0012C0  EF66  F009         	goto	l3268
  3524   0012C4                     u2750:
  3525   0012C4  6C36               	negf	___awmod@dividend^0,c
  3526   0012C6  1E37               	comf	(___awmod@dividend+1)^0,f,c
  3527   0012C8  B0D8               	btfsc	status,0,c
  3528   0012CA  2A37               	incf	(___awmod@dividend+1)^0,f,c
  3529   0012CC                     l3268:
  3530   0012CC  C036  F036         	movff	___awmod@dividend,?___awmod
  3531   0012D0  C037  F037         	movff	___awmod@dividend+1,?___awmod+1
  3532   0012D4  0012               	return		;funcret
  3533   0012D6                     __end_of___awmod:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function ___awdiv *****************
  3537 ;; Defined at:
  3538 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  dividend        2    0[COMRAM] int 
  3541 ;;  divisor         2    2[COMRAM] int 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  quotient        2    6[COMRAM] int 
  3544 ;;  sign            1    5[COMRAM] unsigned char 
  3545 ;;  counter         1    4[COMRAM] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  2    0[COMRAM] int 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3555 ;;      Params:         4       0       0       0       0       0       0       0       0
  3556 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3558 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3559 ;;Total ram usage:        8 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_dec2bcd
  3565 ;;		_bcd2dec
  3566 ;;		_lcdInt
  3567 ;;		_rtcPutSeconds
  3568 ;;		_rtcPutMinutes
  3569 ;;		_rtcPutHours
  3570 ;;		_rtcPutDate
  3571 ;;		_rtcPutMonth
  3572 ;;		_rtcPutYear
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text29
  3577   001162                     __ptext29:
  3578                           	callstack 0
  3579   001162                     ___awdiv:
  3580                           	callstack 27
  3581   001162  0E00               	movlw	0
  3582   001164  6E33               	movwf	___awdiv@sign^0,c
  3583   001166  BE31               	btfsc	(___awdiv@divisor+1)^0,7,c
  3584   001168  EFBA  F008         	goto	u2640
  3585   00116C  EFB8  F008         	goto	u2641
  3586   001170                     u2641:
  3587   001170  EFC0  F008         	goto	l3200
  3588   001174                     u2640:
  3589   001174  6C30               	negf	___awdiv@divisor^0,c
  3590   001176  1E31               	comf	(___awdiv@divisor+1)^0,f,c
  3591   001178  B0D8               	btfsc	status,0,c
  3592   00117A  2A31               	incf	(___awdiv@divisor+1)^0,f,c
  3593   00117C  0E01               	movlw	1
  3594   00117E  6E33               	movwf	___awdiv@sign^0,c
  3595   001180                     l3200:
  3596   001180  BE2F               	btfsc	(___awdiv@dividend+1)^0,7,c
  3597   001182  EFC7  F008         	goto	u2650
  3598   001186  EFC5  F008         	goto	u2651
  3599   00118A                     u2651:
  3600   00118A  EFCD  F008         	goto	l3206
  3601   00118E                     u2650:
  3602   00118E  6C2E               	negf	___awdiv@dividend^0,c
  3603   001190  1E2F               	comf	(___awdiv@dividend+1)^0,f,c
  3604   001192  B0D8               	btfsc	status,0,c
  3605   001194  2A2F               	incf	(___awdiv@dividend+1)^0,f,c
  3606   001196  0E01               	movlw	1
  3607   001198  1A33               	xorwf	___awdiv@sign^0,f,c
  3608   00119A                     l3206:
  3609   00119A  0E00               	movlw	0
  3610   00119C  6E35               	movwf	(___awdiv@quotient+1)^0,c
  3611   00119E  0E00               	movlw	0
  3612   0011A0  6E34               	movwf	___awdiv@quotient^0,c
  3613   0011A2  5030               	movf	___awdiv@divisor^0,w,c
  3614   0011A4  1031               	iorwf	(___awdiv@divisor+1)^0,w,c
  3615   0011A6  B4D8               	btfsc	status,2,c
  3616   0011A8  EFD8  F008         	goto	u2661
  3617   0011AC  EFDA  F008         	goto	u2660
  3618   0011B0                     u2661:
  3619   0011B0  EF02  F009         	goto	l3228
  3620   0011B4                     u2660:
  3621   0011B4  0E01               	movlw	1
  3622   0011B6  6E32               	movwf	___awdiv@counter^0,c
  3623   0011B8  EFE2  F008         	goto	l3214
  3624   0011BC                     l3212:
  3625   0011BC  90D8               	bcf	status,0,c
  3626   0011BE  3630               	rlcf	___awdiv@divisor^0,f,c
  3627   0011C0  3631               	rlcf	(___awdiv@divisor+1)^0,f,c
  3628   0011C2  2A32               	incf	___awdiv@counter^0,f,c
  3629   0011C4                     l3214:
  3630   0011C4  AE31               	btfss	(___awdiv@divisor+1)^0,7,c
  3631   0011C6  EFE7  F008         	goto	u2671
  3632   0011CA  EFE9  F008         	goto	u2670
  3633   0011CE                     u2671:
  3634   0011CE  EFDE  F008         	goto	l3212
  3635   0011D2                     u2670:
  3636   0011D2                     l3216:
  3637   0011D2  90D8               	bcf	status,0,c
  3638   0011D4  3634               	rlcf	___awdiv@quotient^0,f,c
  3639   0011D6  3635               	rlcf	(___awdiv@quotient+1)^0,f,c
  3640   0011D8  5030               	movf	___awdiv@divisor^0,w,c
  3641   0011DA  5C2E               	subwf	___awdiv@dividend^0,w,c
  3642   0011DC  5031               	movf	(___awdiv@divisor+1)^0,w,c
  3643   0011DE  582F               	subwfb	(___awdiv@dividend+1)^0,w,c
  3644   0011E0  A0D8               	btfss	status,0,c
  3645   0011E2  EFF5  F008         	goto	u2681
  3646   0011E6  EFF7  F008         	goto	u2680
  3647   0011EA                     u2681:
  3648   0011EA  EFFC  F008         	goto	l3224
  3649   0011EE                     u2680:
  3650   0011EE  5030               	movf	___awdiv@divisor^0,w,c
  3651   0011F0  5E2E               	subwf	___awdiv@dividend^0,f,c
  3652   0011F2  5031               	movf	(___awdiv@divisor+1)^0,w,c
  3653   0011F4  5A2F               	subwfb	(___awdiv@dividend+1)^0,f,c
  3654   0011F6  8034               	bsf	___awdiv@quotient^0,0,c
  3655   0011F8                     l3224:
  3656   0011F8  90D8               	bcf	status,0,c
  3657   0011FA  3231               	rrcf	(___awdiv@divisor+1)^0,f,c
  3658   0011FC  3230               	rrcf	___awdiv@divisor^0,f,c
  3659   0011FE  2E32               	decfsz	___awdiv@counter^0,f,c
  3660   001200  EFE9  F008         	goto	l3216
  3661   001204                     l3228:
  3662   001204  5033               	movf	___awdiv@sign^0,w,c
  3663   001206  B4D8               	btfsc	status,2,c
  3664   001208  EF08  F009         	goto	u2691
  3665   00120C  EF0A  F009         	goto	u2690
  3666   001210                     u2691:
  3667   001210  EF0E  F009         	goto	l3232
  3668   001214                     u2690:
  3669   001214  6C34               	negf	___awdiv@quotient^0,c
  3670   001216  1E35               	comf	(___awdiv@quotient+1)^0,f,c
  3671   001218  B0D8               	btfsc	status,0,c
  3672   00121A  2A35               	incf	(___awdiv@quotient+1)^0,f,c
  3673   00121C                     l3232:
  3674   00121C  C034  F02E         	movff	___awdiv@quotient,?___awdiv
  3675   001220  C035  F02F         	movff	___awdiv@quotient+1,?___awdiv+1
  3676   001224  0012               	return		;funcret
  3677   001226                     __end_of___awdiv:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _lcdInit *****************
  3681 ;; Defined at:
  3682 ;;		line 117 in file "lcd.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  i               1    3[COMRAM] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0
  3697 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3699 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3700 ;;Total ram usage:        1 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 3
  3703 ;; This function calls:
  3704 ;;		_Delay2ms
  3705 ;;		_lcdCommand
  3706 ;;		_lcdCommand4bits
  3707 ;; This function is called by:
  3708 ;;		_main
  3709 ;;		_outputInit
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text30
  3714   0012D6                     __ptext30:
  3715                           	callstack 0
  3716   0012D6                     _lcdInit:
  3717                           	callstack 27
  3718   0012D6                     
  3719                           ;lcd.c: 118:     unsigned char i;;lcd.c: 120:     ((TRISD) &= ~(1<<(0)));
  3720   0012D6  9095               	bcf	149,0,c	;volatile
  3721                           
  3722                           ;lcd.c: 121:     ((TRISD) &= ~(1<<(7)));
  3723   0012D8  9E95               	bcf	149,7,c	;volatile
  3724                           
  3725                           ;lcd.c: 122:     ((TRISD) &= ~(1<<(6)));
  3726   0012DA  9C95               	bcf	149,6,c	;volatile
  3727                           
  3728                           ;lcd.c: 123:     ((TRISD) &= ~(1<<(5)));
  3729   0012DC  9A95               	bcf	149,5,c	;volatile
  3730                           
  3731                           ;lcd.c: 124:     ((TRISD) &= ~(1<<(4)));
  3732   0012DE  9895               	bcf	149,4,c	;volatile
  3733                           
  3734                           ;lcd.c: 125:     ((TRISD) &= ~(1<<(2)));
  3735   0012E0  9495               	bcf	149,2,c	;volatile
  3736   0012E2                     
  3737                           ;lcd.c: 132:     for (i = 0; i < 7; i++)
  3738   0012E2  0E00               	movlw	0
  3739   0012E4  6E31               	movwf	lcdInit@i^0,c
  3740   0012E6                     l3382:
  3741                           
  3742                           ;lcd.c: 133:         Delay2ms();
  3743   0012E6  EC36  F00C         	call	_Delay2ms	;wreg free
  3744   0012EA  2A31               	incf	lcdInit@i^0,f,c
  3745   0012EC  0E06               	movlw	6
  3746   0012EE  6431               	cpfsgt	lcdInit@i^0,c
  3747   0012F0  EF7C  F009         	goto	u2871
  3748   0012F4  EF7E  F009         	goto	u2870
  3749   0012F8                     u2871:
  3750   0012F8  EF73  F009         	goto	l3382
  3751   0012FC                     u2870:
  3752   0012FC                     
  3753                           ;lcd.c: 137:     lcdCommand4bits(0x30, 0);
  3754   0012FC  0E00               	movlw	0
  3755   0012FE  6E2E               	movwf	lcdCommand4bits@data^0,c
  3756   001300  0E30               	movlw	48
  3757   001302  ECA7  F009         	call	_lcdCommand4bits
  3758                           
  3759                           ;lcd.c: 138:     Delay2ms();
  3760   001306  EC36  F00C         	call	_Delay2ms	;wreg free
  3761                           
  3762                           ;lcd.c: 141:     lcdCommand4bits(0x30, 0);
  3763   00130A  0E00               	movlw	0
  3764   00130C  6E2E               	movwf	lcdCommand4bits@data^0,c
  3765   00130E  0E30               	movlw	48
  3766   001310  ECA7  F009         	call	_lcdCommand4bits
  3767                           
  3768                           ;lcd.c: 142:     Delay2ms();
  3769   001314  EC36  F00C         	call	_Delay2ms	;wreg free
  3770                           
  3771                           ;lcd.c: 145:     lcdCommand4bits(0x30, 0);
  3772   001318  0E00               	movlw	0
  3773   00131A  6E2E               	movwf	lcdCommand4bits@data^0,c
  3774   00131C  0E30               	movlw	48
  3775   00131E  ECA7  F009         	call	_lcdCommand4bits
  3776                           
  3777                           ;lcd.c: 146:     Delay2ms();
  3778   001322  EC36  F00C         	call	_Delay2ms	;wreg free
  3779                           
  3780                           ;lcd.c: 149:     lcdCommand4bits(0x20, 0);
  3781   001326  0E00               	movlw	0
  3782   001328  6E2E               	movwf	lcdCommand4bits@data^0,c
  3783   00132A  0E20               	movlw	32
  3784   00132C  ECA7  F009         	call	_lcdCommand4bits
  3785                           
  3786                           ;lcd.c: 150:     Delay2ms();
  3787   001330  EC36  F00C         	call	_Delay2ms	;wreg free
  3788                           
  3789                           ;lcd.c: 153:     lcdCommand(0x28);
  3790   001334  0E28               	movlw	40
  3791   001336  EC11  F00B         	call	_lcdCommand
  3792                           
  3793                           ;lcd.c: 154:     lcdCommand(0x06);
  3794   00133A  0E06               	movlw	6
  3795   00133C  EC11  F00B         	call	_lcdCommand
  3796                           
  3797                           ;lcd.c: 156:     lcdCommand(0x0C);
  3798   001340  0E0C               	movlw	12
  3799   001342  EC11  F00B         	call	_lcdCommand
  3800                           
  3801                           ;lcd.c: 157:     lcdCommand(0x01);
  3802   001346  0E01               	movlw	1
  3803   001348  EC11  F00B         	call	_lcdCommand
  3804   00134C  0012               	return		;funcret
  3805   00134E                     __end_of_lcdInit:
  3806                           	callstack 0
  3807                           
  3808 ;; *************** function _lcdCommand *****************
  3809 ;; Defined at:
  3810 ;;		line 93 in file "lcd.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  cmd             1    wreg     unsigned char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  cmd             1    2[COMRAM] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0
  3825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:        1 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; Hardware stack levels required when called: 2
  3831 ;; This function calls:
  3832 ;;		_Delay2ms
  3833 ;;		_Delay40us
  3834 ;;		_lcdCommand4bits
  3835 ;; This function is called by:
  3836 ;;		_lcdInit
  3837 ;;		_main
  3838 ;;		_setState
  3839 ;;		_outputPrint
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text31
  3844   001622                     __ptext31:
  3845                           	callstack 0
  3846   001622                     _lcdCommand:
  3847                           	callstack 26
  3848                           
  3849                           ;incstack = 0
  3850                           ;lcdCommand@cmd stored from wreg
  3851   001622  6E30               	movwf	lcdCommand@cmd^0,c
  3852   001624                     
  3853                           ;lcd.c: 95:     lcdCommand4bits(cmd, 0);
  3854   001624  0E00               	movlw	0
  3855   001626  6E2E               	movwf	lcdCommand4bits@data^0,c
  3856   001628  5030               	movf	lcdCommand@cmd^0,w,c
  3857   00162A  ECA7  F009         	call	_lcdCommand4bits
  3858                           
  3859                           ;lcd.c: 96:     lcdCommand4bits(cmd << 4, 0);
  3860   00162E  0E00               	movlw	0
  3861   001630  6E2E               	movwf	lcdCommand4bits@data^0,c
  3862   001632  3830               	swapf	lcdCommand@cmd^0,w,c
  3863   001634  0BF0               	andlw	240
  3864   001636  ECA7  F009         	call	_lcdCommand4bits
  3865   00163A                     
  3866                           ;lcd.c: 99:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3867   00163A  0E02               	movlw	2
  3868   00163C  1830               	xorwf	lcdCommand@cmd^0,w,c
  3869   00163E  B4D8               	btfsc	status,2,c
  3870   001640  EF24  F00B         	goto	u2761
  3871   001644  EF26  F00B         	goto	u2760
  3872   001648                     u2761:
  3873   001648  EF2E  F00B         	goto	l3294
  3874   00164C                     u2760:
  3875   00164C  0430               	decf	lcdCommand@cmd^0,w,c
  3876   00164E  A4D8               	btfss	status,2,c
  3877   001650  EF2C  F00B         	goto	u2771
  3878   001654  EF2E  F00B         	goto	u2770
  3879   001658                     u2771:
  3880   001658  EF32  F00B         	goto	l3296
  3881   00165C                     u2770:
  3882   00165C                     l3294:
  3883                           
  3884                           ;lcd.c: 100:         Delay2ms();
  3885   00165C  EC36  F00C         	call	_Delay2ms	;wreg free
  3886                           
  3887                           ;lcd.c: 102:     } else {
  3888   001660  EF34  F00B         	goto	l180
  3889   001664                     l3296:
  3890                           
  3891                           ;lcd.c: 103:         Delay40us();
  3892   001664  ECCB  F00C         	call	_Delay40us	;wreg free
  3893   001668                     l180:
  3894   001668  0012               	return		;funcret
  3895   00166A                     __end_of_lcdCommand:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _lcdCommand4bits *****************
  3899 ;; Defined at:
  3900 ;;		line 52 in file "lcd.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  cmd             1    wreg     unsigned char 
  3903 ;;  data            1    0[COMRAM] unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  cmd             1    1[COMRAM] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3915 ;;      Params:         1       0       0       0       0       0       0       0       0
  3916 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3918 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3919 ;;Total ram usage:        2 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 1
  3922 ;; This function calls:
  3923 ;;		_pulseEnable
  3924 ;; This function is called by:
  3925 ;;		_lcdCommand
  3926 ;;		_lcdData
  3927 ;;		_lcdInit
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text32
  3932   00134E                     __ptext32:
  3933                           	callstack 0
  3934   00134E                     _lcdCommand4bits:
  3935                           	callstack 26
  3936                           
  3937                           ;incstack = 0
  3938                           ;lcdCommand4bits@cmd stored from wreg
  3939   00134E  6E2F               	movwf	lcdCommand4bits@cmd^0,c
  3940   001350                     
  3941                           ;lcd.c: 54:     if (data) {
  3942   001350  502E               	movf	lcdCommand4bits@data^0,w,c
  3943   001352  B4D8               	btfsc	status,2,c
  3944   001354  EFAE  F009         	goto	u2591
  3945   001358  EFB0  F009         	goto	u2590
  3946   00135C                     u2591:
  3947   00135C  EFB3  F009         	goto	l3158
  3948   001360                     u2590:
  3949   001360                     
  3950                           ;lcd.c: 55:         ((PORTD) |= (1<<(0)));
  3951   001360  8083               	bsf	131,0,c	;volatile
  3952                           
  3953                           ;lcd.c: 56:     } else {
  3954   001362  EFB4  F009         	goto	l3160
  3955   001366                     l3158:
  3956                           
  3957                           ;lcd.c: 57:         ((PORTD) &= ~(1<<(0)));
  3958   001366  9083               	bcf	131,0,c	;volatile
  3959   001368                     l3160:
  3960                           
  3961                           ;lcd.c: 63:     if (((cmd) & (1<<(7)))) {
  3962   001368  AE2F               	btfss	lcdCommand4bits@cmd^0,7,c
  3963   00136A  EFB9  F009         	goto	u2601
  3964   00136E  EFBB  F009         	goto	u2600
  3965   001372                     u2601:
  3966   001372  EFBE  F009         	goto	l3164
  3967   001376                     u2600:
  3968   001376                     
  3969                           ;lcd.c: 64:         ((PORTD) |= (1<<(2)));
  3970   001376  8483               	bsf	131,2,c	;volatile
  3971                           
  3972                           ;lcd.c: 65:     } else {
  3973   001378  EFBF  F009         	goto	l3166
  3974   00137C                     l3164:
  3975                           
  3976                           ;lcd.c: 66:         ((PORTD) &= ~(1<<(2)));
  3977   00137C  9483               	bcf	131,2,c	;volatile
  3978   00137E                     l3166:
  3979                           
  3980                           ;lcd.c: 70:     if (((cmd) & (1<<(6)))) {
  3981   00137E  AC2F               	btfss	lcdCommand4bits@cmd^0,6,c
  3982   001380  EFC4  F009         	goto	u2611
  3983   001384  EFC6  F009         	goto	u2610
  3984   001388                     u2611:
  3985   001388  EFC9  F009         	goto	l3170
  3986   00138C                     u2610:
  3987   00138C                     
  3988                           ;lcd.c: 71:         ((PORTD) |= (1<<(4)));
  3989   00138C  8883               	bsf	131,4,c	;volatile
  3990                           
  3991                           ;lcd.c: 72:     } else {
  3992   00138E  EFCA  F009         	goto	l3172
  3993   001392                     l3170:
  3994                           
  3995                           ;lcd.c: 73:         ((PORTD) &= ~(1<<(4)));
  3996   001392  9883               	bcf	131,4,c	;volatile
  3997   001394                     l3172:
  3998                           
  3999                           ;lcd.c: 77:     if (((cmd) & (1<<(5)))) {
  4000   001394  AA2F               	btfss	lcdCommand4bits@cmd^0,5,c
  4001   001396  EFCF  F009         	goto	u2621
  4002   00139A  EFD1  F009         	goto	u2620
  4003   00139E                     u2621:
  4004   00139E  EFD4  F009         	goto	l3176
  4005   0013A2                     u2620:
  4006   0013A2                     
  4007                           ;lcd.c: 78:         ((PORTD) |= (1<<(5)));
  4008   0013A2  8A83               	bsf	131,5,c	;volatile
  4009                           
  4010                           ;lcd.c: 79:     } else {
  4011   0013A4  EFD5  F009         	goto	l3178
  4012   0013A8                     l3176:
  4013                           
  4014                           ;lcd.c: 80:         ((PORTD) &= ~(1<<(5)));
  4015   0013A8  9A83               	bcf	131,5,c	;volatile
  4016   0013AA                     l3178:
  4017                           
  4018                           ;lcd.c: 84:     if (((cmd) & (1<<(4)))) {
  4019   0013AA  A82F               	btfss	lcdCommand4bits@cmd^0,4,c
  4020   0013AC  EFDA  F009         	goto	u2631
  4021   0013B0  EFDC  F009         	goto	u2630
  4022   0013B4                     u2631:
  4023   0013B4  EFDF  F009         	goto	l3182
  4024   0013B8                     u2630:
  4025   0013B8                     
  4026                           ;lcd.c: 85:         ((PORTD) |= (1<<(6)));
  4027   0013B8  8C83               	bsf	131,6,c	;volatile
  4028                           
  4029                           ;lcd.c: 86:     } else {
  4030   0013BA  EFE0  F009         	goto	l3184
  4031   0013BE                     l3182:
  4032                           
  4033                           ;lcd.c: 87:         ((PORTD) &= ~(1<<(6)));
  4034   0013BE  9C83               	bcf	131,6,c	;volatile
  4035   0013C0                     l3184:
  4036                           
  4037                           ;lcd.c: 90:     pulseEnable();
  4038   0013C0  EC02  F00D         	call	_pulseEnable	;wreg free
  4039   0013C4  0012               	return		;funcret
  4040   0013C6                     __end_of_lcdCommand4bits:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _pulseEnable *****************
  4044 ;; Defined at:
  4045 ;;		line 47 in file "lcd.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		status,2, status,0
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4059 ;;      Params:         0       0       0       0       0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4063 ;;Total ram usage:        0 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_lcdCommand4bits
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text33
  4073   001A04                     __ptext33:
  4074                           	callstack 0
  4075   001A04                     _pulseEnable:
  4076                           	callstack 26
  4077   001A04                     
  4078                           ;lcd.c: 48:     ((PORTD) |= (1<<(7)));
  4079   001A04  8E83               	bsf	131,7,c	;volatile
  4080                           
  4081                           ;lcd.c: 49:     ((PORTD) &= ~(1<<(7)));
  4082   001A06  9E83               	bcf	131,7,c	;volatile
  4083   001A08  0012               	return		;funcret
  4084   001A0A                     __end_of_pulseEnable:
  4085                           	callstack 0
  4086                           
  4087 ;; *************** function _Delay40us *****************
  4088 ;; Defined at:
  4089 ;;		line 36 in file "lcd.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  j               1    0[COMRAM] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4103 ;;      Params:         0       0       0       0       0       0       0       0       0
  4104 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4106 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4107 ;;Total ram usage:        1 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_lcdCommand
  4113 ;;		_lcdData
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text34
  4118   001996                     __ptext34:
  4119                           	callstack 0
  4120   001996                     _Delay40us:
  4121                           	callstack 27
  4122   001996                     
  4123                           ;lcd.c: 37:     unsigned char j;;lcd.c: 38:     for (j = 0; j < 68; j++);
  4124   001996  0E00               	movlw	0
  4125   001998  6E2E               	movwf	Delay40us@j^0,c
  4126   00199A                     l3130:
  4127   00199A  2A2E               	incf	Delay40us@j^0,f,c
  4128   00199C  0E43               	movlw	67
  4129   00199E  642E               	cpfsgt	Delay40us@j^0,c
  4130   0019A0  EFD4  F00C         	goto	u2561
  4131   0019A4  EFD6  F00C         	goto	u2560
  4132   0019A8                     u2561:
  4133   0019A8  EFCD  F00C         	goto	l3130
  4134   0019AC                     u2560:
  4135   0019AC  0012               	return		;funcret
  4136   0019AE                     __end_of_Delay40us:
  4137                           	callstack 0
  4138                           
  4139 ;; *************** function _Delay2ms *****************
  4140 ;; Defined at:
  4141 ;;		line 41 in file "lcd.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  k               1    1[COMRAM] unsigned char 
  4146 ;;  j               1    0[COMRAM] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4156 ;;      Params:         0       0       0       0       0       0       0       0       0
  4157 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4159 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4160 ;;Total ram usage:        2 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_lcdCommand
  4166 ;;		_lcdInit
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text35
  4171   00186C                     __ptext35:
  4172                           	callstack 0
  4173   00186C                     _Delay2ms:
  4174                           	callstack 27
  4175   00186C                     
  4176                           ;lcd.c: 42:     unsigned char j, k;;lcd.c: 43:     for (j = 0; j < 20; j++)
  4177   00186C  0E00               	movlw	0
  4178   00186E  6E2E               	movwf	Delay2ms@j^0,c
  4179   001870                     l3140:
  4180                           
  4181                           ;lcd.c: 44:         for (k = 0; k < 178; k++);
  4182   001870  0E00               	movlw	0
  4183   001872  6E2F               	movwf	Delay2ms@k^0,c
  4184   001874                     l3146:
  4185   001874  2A2F               	incf	Delay2ms@k^0,f,c
  4186   001876  0EB1               	movlw	177
  4187   001878  642F               	cpfsgt	Delay2ms@k^0,c
  4188   00187A  EF41  F00C         	goto	u2571
  4189   00187E  EF43  F00C         	goto	u2570
  4190   001882                     u2571:
  4191   001882  EF3A  F00C         	goto	l3146
  4192   001886                     u2570:
  4193   001886  2A2E               	incf	Delay2ms@j^0,f,c
  4194   001888  0E13               	movlw	19
  4195   00188A  642E               	cpfsgt	Delay2ms@j^0,c
  4196   00188C  EF4A  F00C         	goto	u2581
  4197   001890  EF4C  F00C         	goto	u2580
  4198   001894                     u2581:
  4199   001894  EF38  F00C         	goto	l3140
  4200   001898                     u2580:
  4201   001898  0012               	return		;funcret
  4202   00189A                     __end_of_Delay2ms:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _dsInit *****************
  4206 ;; Defined at:
  4207 ;;		line 17 in file "ds1307.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4224 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4225 ;;Total ram usage:        0 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; Hardware stack levels required when called: 2
  4228 ;; This function calls:
  4229 ;;		_i2cInit
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text36
  4236   001A0A                     __ptext36:
  4237                           	callstack 0
  4238   001A0A                     _dsInit:
  4239                           	callstack 28
  4240   001A0A                     
  4241                           ;ds1307.c: 18:  i2cInit();
  4242   001A0A  EC77  F00C         	call	_i2cInit	;wreg free
  4243   001A0E  0012               	return		;funcret
  4244   001A10                     __end_of_dsInit:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _i2cInit *****************
  4248 ;; Defined at:
  4249 ;;		line 14 in file "soft_i2c.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4266 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4267 ;;Total ram usage:        0 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; Hardware stack levels required when called: 1
  4270 ;; This function calls:
  4271 ;;		_pinMode
  4272 ;; This function is called by:
  4273 ;;		_dsInit
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text37
  4278   0018EE                     __ptext37:
  4279                           	callstack 0
  4280   0018EE                     _i2cInit:
  4281                           	callstack 28
  4282   0018EE                     
  4283                           ;soft_i2c.c: 16:  pinMode(PIN_B0,1);
  4284   0018EE  0E00               	movlw	0
  4285   0018F0  6E2F               	movwf	(pinMode@pin+1)^0,c
  4286   0018F2  0E08               	movlw	8
  4287   0018F4  6E2E               	movwf	pinMode@pin^0,c
  4288   0018F6  0E00               	movlw	0
  4289   0018F8  6E31               	movwf	(pinMode@type+1)^0,c
  4290   0018FA  0E01               	movlw	1
  4291   0018FC  6E30               	movwf	pinMode@type^0,c
  4292   0018FE  EC77  F005         	call	_pinMode	;wreg free
  4293                           
  4294                           ;soft_i2c.c: 17:  pinMode(PIN_B1,1);
  4295   001902  0E00               	movlw	0
  4296   001904  6E2F               	movwf	(pinMode@pin+1)^0,c
  4297   001906  0E09               	movlw	9
  4298   001908  6E2E               	movwf	pinMode@pin^0,c
  4299   00190A  0E00               	movlw	0
  4300   00190C  6E31               	movwf	(pinMode@type+1)^0,c
  4301   00190E  0E01               	movlw	1
  4302   001910  6E30               	movwf	pinMode@type^0,c
  4303   001912  EC77  F005         	call	_pinMode	;wreg free
  4304   001916  0012               	return		;funcret
  4305   001918                     __end_of_i2cInit:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _pinMode *****************
  4309 ;; Defined at:
  4310 ;;		line 54 in file "io.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  pin             2    0[COMRAM] int 
  4313 ;;  type            2    2[COMRAM] int 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4325 ;;      Params:         4       0       0       0       0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4327 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4328 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4329 ;;Total ram usage:        6 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_i2cInit
  4335 ;;		_read_SCL
  4336 ;;		_read_SDA
  4337 ;;		_clear_SCL
  4338 ;;		_clear_SDA
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text38
  4343   000AEE                     __ptext38:
  4344                           	callstack 0
  4345   000AEE                     _pinMode:
  4346                           	callstack 23
  4347   000AEE                     
  4348                           ;io.c: 56:     if(pin <8){
  4349   000AEE  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  4350   000AF0  EF85  F005         	goto	u2180
  4351   000AF4  502F               	movf	(pinMode@pin+1)^0,w,c
  4352   000AF6  E107               	bnz	u2181
  4353   000AF8  0E08               	movlw	8
  4354   000AFA  5C2E               	subwf	pinMode@pin^0,w,c
  4355   000AFC  B0D8               	btfsc	status,0,c
  4356   000AFE  EF83  F005         	goto	u2181
  4357   000B02  EF85  F005         	goto	u2180
  4358   000B06                     u2181:
  4359   000B06  EFAF  F005         	goto	l2958
  4360   000B0A                     u2180:
  4361   000B0A                     
  4362                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4363   000B0A  5030               	movf	pinMode@type^0,w,c
  4364   000B0C  1031               	iorwf	(pinMode@type+1)^0,w,c
  4365   000B0E  B4D8               	btfsc	status,2,c
  4366   000B10  EF8C  F005         	goto	u2191
  4367   000B14  EF8E  F005         	goto	u2190
  4368   000B18                     u2191:
  4369   000B18  EF9E  F005         	goto	l2956
  4370   000B1C                     u2190:
  4371   000B1C  C02E  F032         	movff	pinMode@pin,??_pinMode
  4372   000B20  0E01               	movlw	1
  4373   000B22  6E33               	movwf	(??_pinMode+1)^0,c
  4374   000B24  2A32               	incf	??_pinMode^0,f,c
  4375   000B26  EF97  F005         	goto	u2204
  4376   000B2A                     u2205:
  4377   000B2A  90D8               	bcf	status,0,c
  4378   000B2C  3633               	rlcf	(??_pinMode+1)^0,f,c
  4379   000B2E                     u2204:
  4380   000B2E  2E32               	decfsz	??_pinMode^0,f,c
  4381   000B30  EF95  F005         	goto	u2205
  4382   000B34  5033               	movf	(??_pinMode+1)^0,w,c
  4383   000B36  1292               	iorwf	146,f,c	;volatile
  4384   000B38  EF9D  F006         	goto	l113
  4385   000B3C                     l2956:
  4386   000B3C  C02E  F032         	movff	pinMode@pin,??_pinMode
  4387   000B40  0E01               	movlw	1
  4388   000B42  6E33               	movwf	(??_pinMode+1)^0,c
  4389   000B44  2A32               	incf	??_pinMode^0,f,c
  4390   000B46  EFA7  F005         	goto	u2214
  4391   000B4A                     u2215:
  4392   000B4A  90D8               	bcf	status,0,c
  4393   000B4C  3633               	rlcf	(??_pinMode+1)^0,f,c
  4394   000B4E                     u2214:
  4395   000B4E  2E32               	decfsz	??_pinMode^0,f,c
  4396   000B50  EFA5  F005         	goto	u2215
  4397   000B54  5033               	movf	(??_pinMode+1)^0,w,c
  4398   000B56  0AFF               	xorlw	255
  4399   000B58  1692               	andwf	146,f,c	;volatile
  4400   000B5A  EF9D  F006         	goto	l113
  4401   000B5E                     l2958:
  4402   000B5E  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  4403   000B60  EFBD  F005         	goto	u2220
  4404   000B64  502F               	movf	(pinMode@pin+1)^0,w,c
  4405   000B66  E107               	bnz	u2221
  4406   000B68  0E10               	movlw	16
  4407   000B6A  5C2E               	subwf	pinMode@pin^0,w,c
  4408   000B6C  B0D8               	btfsc	status,0,c
  4409   000B6E  EFBB  F005         	goto	u2221
  4410   000B72  EFBD  F005         	goto	u2220
  4411   000B76                     u2221:
  4412   000B76  EFEB  F005         	goto	l2966
  4413   000B7A                     u2220:
  4414   000B7A                     
  4415                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4416   000B7A  5030               	movf	pinMode@type^0,w,c
  4417   000B7C  1031               	iorwf	(pinMode@type+1)^0,w,c
  4418   000B7E  B4D8               	btfsc	status,2,c
  4419   000B80  EFC4  F005         	goto	u2231
  4420   000B84  EFC6  F005         	goto	u2230
  4421   000B88                     u2231:
  4422   000B88  EFD8  F005         	goto	l2964
  4423   000B8C                     u2230:
  4424   000B8C  C02E  F032         	movff	pinMode@pin,??_pinMode
  4425   000B90  0EF8               	movlw	-8
  4426   000B92  2632               	addwf	??_pinMode^0,f,c
  4427   000B94  0E01               	movlw	1
  4428   000B96  6E33               	movwf	(??_pinMode+1)^0,c
  4429   000B98  2A32               	incf	??_pinMode^0,f,c
  4430   000B9A  EFD1  F005         	goto	u2244
  4431   000B9E                     u2245:
  4432   000B9E  90D8               	bcf	status,0,c
  4433   000BA0  3633               	rlcf	(??_pinMode+1)^0,f,c
  4434   000BA2                     u2244:
  4435   000BA2  2E32               	decfsz	??_pinMode^0,f,c
  4436   000BA4  EFCF  F005         	goto	u2245
  4437   000BA8  5033               	movf	(??_pinMode+1)^0,w,c
  4438   000BAA  1293               	iorwf	147,f,c	;volatile
  4439   000BAC  EF9D  F006         	goto	l113
  4440   000BB0                     l2964:
  4441   000BB0  C02E  F032         	movff	pinMode@pin,??_pinMode
  4442   000BB4  0EF8               	movlw	-8
  4443   000BB6  2632               	addwf	??_pinMode^0,f,c
  4444   000BB8  0E01               	movlw	1
  4445   000BBA  6E33               	movwf	(??_pinMode+1)^0,c
  4446   000BBC  2A32               	incf	??_pinMode^0,f,c
  4447   000BBE  EFE3  F005         	goto	u2254
  4448   000BC2                     u2255:
  4449   000BC2  90D8               	bcf	status,0,c
  4450   000BC4  3633               	rlcf	(??_pinMode+1)^0,f,c
  4451   000BC6                     u2254:
  4452   000BC6  2E32               	decfsz	??_pinMode^0,f,c
  4453   000BC8  EFE1  F005         	goto	u2255
  4454   000BCC  5033               	movf	(??_pinMode+1)^0,w,c
  4455   000BCE  0AFF               	xorlw	255
  4456   000BD0  1693               	andwf	147,f,c	;volatile
  4457   000BD2  EF9D  F006         	goto	l113
  4458   000BD6                     l2966:
  4459   000BD6  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  4460   000BD8  EFF9  F005         	goto	u2260
  4461   000BDC  502F               	movf	(pinMode@pin+1)^0,w,c
  4462   000BDE  E107               	bnz	u2261
  4463   000BE0  0E18               	movlw	24
  4464   000BE2  5C2E               	subwf	pinMode@pin^0,w,c
  4465   000BE4  B0D8               	btfsc	status,0,c
  4466   000BE6  EFF7  F005         	goto	u2261
  4467   000BEA  EFF9  F005         	goto	u2260
  4468   000BEE                     u2261:
  4469   000BEE  EF27  F006         	goto	l2974
  4470   000BF2                     u2260:
  4471   000BF2                     
  4472                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4473   000BF2  5030               	movf	pinMode@type^0,w,c
  4474   000BF4  1031               	iorwf	(pinMode@type+1)^0,w,c
  4475   000BF6  B4D8               	btfsc	status,2,c
  4476   000BF8  EF00  F006         	goto	u2271
  4477   000BFC  EF02  F006         	goto	u2270
  4478   000C00                     u2271:
  4479   000C00  EF14  F006         	goto	l2972
  4480   000C04                     u2270:
  4481   000C04  C02E  F032         	movff	pinMode@pin,??_pinMode
  4482   000C08  0EF0               	movlw	-16
  4483   000C0A  2632               	addwf	??_pinMode^0,f,c
  4484   000C0C  0E01               	movlw	1
  4485   000C0E  6E33               	movwf	(??_pinMode+1)^0,c
  4486   000C10  2A32               	incf	??_pinMode^0,f,c
  4487   000C12  EF0D  F006         	goto	u2284
  4488   000C16                     u2285:
  4489   000C16  90D8               	bcf	status,0,c
  4490   000C18  3633               	rlcf	(??_pinMode+1)^0,f,c
  4491   000C1A                     u2284:
  4492   000C1A  2E32               	decfsz	??_pinMode^0,f,c
  4493   000C1C  EF0B  F006         	goto	u2285
  4494   000C20  5033               	movf	(??_pinMode+1)^0,w,c
  4495   000C22  1294               	iorwf	148,f,c	;volatile
  4496   000C24  EF9D  F006         	goto	l113
  4497   000C28                     l2972:
  4498   000C28  C02E  F032         	movff	pinMode@pin,??_pinMode
  4499   000C2C  0EF0               	movlw	-16
  4500   000C2E  2632               	addwf	??_pinMode^0,f,c
  4501   000C30  0E01               	movlw	1
  4502   000C32  6E33               	movwf	(??_pinMode+1)^0,c
  4503   000C34  2A32               	incf	??_pinMode^0,f,c
  4504   000C36  EF1F  F006         	goto	u2294
  4505   000C3A                     u2295:
  4506   000C3A  90D8               	bcf	status,0,c
  4507   000C3C  3633               	rlcf	(??_pinMode+1)^0,f,c
  4508   000C3E                     u2294:
  4509   000C3E  2E32               	decfsz	??_pinMode^0,f,c
  4510   000C40  EF1D  F006         	goto	u2295
  4511   000C44  5033               	movf	(??_pinMode+1)^0,w,c
  4512   000C46  0AFF               	xorlw	255
  4513   000C48  1694               	andwf	148,f,c	;volatile
  4514   000C4A  EF9D  F006         	goto	l113
  4515   000C4E                     l2974:
  4516   000C4E  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  4517   000C50  EF35  F006         	goto	u2300
  4518   000C54  502F               	movf	(pinMode@pin+1)^0,w,c
  4519   000C56  E107               	bnz	u2301
  4520   000C58  0E20               	movlw	32
  4521   000C5A  5C2E               	subwf	pinMode@pin^0,w,c
  4522   000C5C  B0D8               	btfsc	status,0,c
  4523   000C5E  EF33  F006         	goto	u2301
  4524   000C62  EF35  F006         	goto	u2300
  4525   000C66                     u2301:
  4526   000C66  EF63  F006         	goto	l2982
  4527   000C6A                     u2300:
  4528   000C6A                     
  4529                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4530   000C6A  5030               	movf	pinMode@type^0,w,c
  4531   000C6C  1031               	iorwf	(pinMode@type+1)^0,w,c
  4532   000C6E  B4D8               	btfsc	status,2,c
  4533   000C70  EF3C  F006         	goto	u2311
  4534   000C74  EF3E  F006         	goto	u2310
  4535   000C78                     u2311:
  4536   000C78  EF50  F006         	goto	l2980
  4537   000C7C                     u2310:
  4538   000C7C  C02E  F032         	movff	pinMode@pin,??_pinMode
  4539   000C80  0EE8               	movlw	-24
  4540   000C82  2632               	addwf	??_pinMode^0,f,c
  4541   000C84  0E01               	movlw	1
  4542   000C86  6E33               	movwf	(??_pinMode+1)^0,c
  4543   000C88  2A32               	incf	??_pinMode^0,f,c
  4544   000C8A  EF49  F006         	goto	u2324
  4545   000C8E                     u2325:
  4546   000C8E  90D8               	bcf	status,0,c
  4547   000C90  3633               	rlcf	(??_pinMode+1)^0,f,c
  4548   000C92                     u2324:
  4549   000C92  2E32               	decfsz	??_pinMode^0,f,c
  4550   000C94  EF47  F006         	goto	u2325
  4551   000C98  5033               	movf	(??_pinMode+1)^0,w,c
  4552   000C9A  1295               	iorwf	149,f,c	;volatile
  4553   000C9C  EF9D  F006         	goto	l113
  4554   000CA0                     l2980:
  4555   000CA0  C02E  F032         	movff	pinMode@pin,??_pinMode
  4556   000CA4  0EE8               	movlw	-24
  4557   000CA6  2632               	addwf	??_pinMode^0,f,c
  4558   000CA8  0E01               	movlw	1
  4559   000CAA  6E33               	movwf	(??_pinMode+1)^0,c
  4560   000CAC  2A32               	incf	??_pinMode^0,f,c
  4561   000CAE  EF5B  F006         	goto	u2334
  4562   000CB2                     u2335:
  4563   000CB2  90D8               	bcf	status,0,c
  4564   000CB4  3633               	rlcf	(??_pinMode+1)^0,f,c
  4565   000CB6                     u2334:
  4566   000CB6  2E32               	decfsz	??_pinMode^0,f,c
  4567   000CB8  EF59  F006         	goto	u2335
  4568   000CBC  5033               	movf	(??_pinMode+1)^0,w,c
  4569   000CBE  0AFF               	xorlw	255
  4570   000CC0  1695               	andwf	149,f,c	;volatile
  4571   000CC2  EF9D  F006         	goto	l113
  4572   000CC6                     l2982:
  4573   000CC6  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  4574   000CC8  EF71  F006         	goto	u2340
  4575   000CCC  502F               	movf	(pinMode@pin+1)^0,w,c
  4576   000CCE  E107               	bnz	u2341
  4577   000CD0  0E28               	movlw	40
  4578   000CD2  5C2E               	subwf	pinMode@pin^0,w,c
  4579   000CD4  B0D8               	btfsc	status,0,c
  4580   000CD6  EF6F  F006         	goto	u2341
  4581   000CDA  EF71  F006         	goto	u2340
  4582   000CDE                     u2341:
  4583   000CDE  EF9D  F006         	goto	l113
  4584   000CE2                     u2340:
  4585   000CE2                     
  4586                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4587   000CE2  5030               	movf	pinMode@type^0,w,c
  4588   000CE4  1031               	iorwf	(pinMode@type+1)^0,w,c
  4589   000CE6  B4D8               	btfsc	status,2,c
  4590   000CE8  EF78  F006         	goto	u2351
  4591   000CEC  EF7A  F006         	goto	u2350
  4592   000CF0                     u2351:
  4593   000CF0  EF8C  F006         	goto	l2988
  4594   000CF4                     u2350:
  4595   000CF4  C02E  F032         	movff	pinMode@pin,??_pinMode
  4596   000CF8  0EE0               	movlw	-32
  4597   000CFA  2632               	addwf	??_pinMode^0,f,c
  4598   000CFC  0E01               	movlw	1
  4599   000CFE  6E33               	movwf	(??_pinMode+1)^0,c
  4600   000D00  2A32               	incf	??_pinMode^0,f,c
  4601   000D02  EF85  F006         	goto	u2364
  4602   000D06                     u2365:
  4603   000D06  90D8               	bcf	status,0,c
  4604   000D08  3633               	rlcf	(??_pinMode+1)^0,f,c
  4605   000D0A                     u2364:
  4606   000D0A  2E32               	decfsz	??_pinMode^0,f,c
  4607   000D0C  EF83  F006         	goto	u2365
  4608   000D10  5033               	movf	(??_pinMode+1)^0,w,c
  4609   000D12  1296               	iorwf	150,f,c	;volatile
  4610   000D14  EF9D  F006         	goto	l113
  4611   000D18                     l2988:
  4612   000D18  C02E  F032         	movff	pinMode@pin,??_pinMode
  4613   000D1C  0EE0               	movlw	-32
  4614   000D1E  2632               	addwf	??_pinMode^0,f,c
  4615   000D20  0E01               	movlw	1
  4616   000D22  6E33               	movwf	(??_pinMode+1)^0,c
  4617   000D24  2A32               	incf	??_pinMode^0,f,c
  4618   000D26  EF97  F006         	goto	u2374
  4619   000D2A                     u2375:
  4620   000D2A  90D8               	bcf	status,0,c
  4621   000D2C  3633               	rlcf	(??_pinMode+1)^0,f,c
  4622   000D2E                     u2374:
  4623   000D2E  2E32               	decfsz	??_pinMode^0,f,c
  4624   000D30  EF95  F006         	goto	u2375
  4625   000D34  5033               	movf	(??_pinMode+1)^0,w,c
  4626   000D36  0AFF               	xorlw	255
  4627   000D38  1696               	andwf	150,f,c	;volatile
  4628   000D3A                     l113:
  4629   000D3A  0012               	return		;funcret
  4630   000D3C                     __end_of_pinMode:
  4631                           	callstack 0
  4632                           
  4633 ;; *************** function _adcRead *****************
  4634 ;; Defined at:
  4635 ;;		line 36 in file "adc.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  ADvalor         2    2[COMRAM] unsigned int 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  2    0[COMRAM] int 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4649 ;;      Params:         2       0       0       0       0       0       0       0       0
  4650 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4652 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4653 ;;Total ram usage:        4 bytes
  4654 ;; Hardware stack levels used: 1
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text39
  4663   0017A8                     __ptext39:
  4664                           	callstack 0
  4665   0017A8                     _adcRead:
  4666                           	callstack 30
  4667   0017A8                     
  4668                           ;adc.c: 38:  unsigned int ADvalor;;adc.c: 39:     (*(volatile __near unsigned char*)0xFC
      +                          1) = 0b00001001;
  4669   0017A8  0E09               	movlw	9
  4670   0017AA  6EC1               	movwf	193,c	;volatile
  4671   0017AC                     
  4672                           ;adc.c: 40:  (*(volatile __near unsigned char*)0xFC2) |= 0b00000010;
  4673   0017AC  82C2               	bsf	194,1,c	;volatile
  4674   0017AE                     l6:
  4675   0017AE  B2C2               	btfsc	194,1,c	;volatile
  4676   0017B0  EFDC  F00B         	goto	u2861
  4677   0017B4  EFDE  F00B         	goto	u2860
  4678   0017B8                     u2861:
  4679   0017B8  EFD7  F00B         	goto	l6
  4680   0017BC                     u2860:
  4681   0017BC                     
  4682                           ;adc.c: 44:  ADvalor = (*(volatile __near unsigned char*)0xFC4) ;
  4683   0017BC  CFC4 F030          	movff	4036,adcRead@ADvalor	;volatile
  4684   0017C0  6A31               	clrf	(adcRead@ADvalor+1)^0,c
  4685   0017C2                     
  4686                           ;adc.c: 45:  ADvalor <<= 8;
  4687   0017C2  5030               	movf	adcRead@ADvalor^0,w,c
  4688   0017C4  6E31               	movwf	(adcRead@ADvalor+1)^0,c
  4689   0017C6  6A30               	clrf	adcRead@ADvalor^0,c
  4690   0017C8                     
  4691                           ;adc.c: 46:  ADvalor += (*(volatile __near unsigned char*)0xFC3);
  4692   0017C8  50C3               	movf	195,w,c	;volatile
  4693   0017CA  2630               	addwf	adcRead@ADvalor^0,f,c
  4694   0017CC  0E00               	movlw	0
  4695   0017CE  2231               	addwfc	(adcRead@ADvalor+1)^0,f,c
  4696   0017D0                     
  4697                           ;adc.c: 47:     (*(volatile __near unsigned char*)0xFC1) = 0b00001111;
  4698   0017D0  0E0F               	movlw	15
  4699   0017D2  6EC1               	movwf	193,c	;volatile
  4700   0017D4                     
  4701                           ;adc.c: 48:  return ADvalor;
  4702   0017D4  C030  F02E         	movff	adcRead@ADvalor,?_adcRead
  4703   0017D8  C031  F02F         	movff	adcRead@ADvalor+1,?_adcRead+1
  4704   0017DC  0012               	return		;funcret
  4705   0017DE                     __end_of_adcRead:
  4706                           	callstack 0
  4707                           
  4708 ;; *************** function _adcInit *****************
  4709 ;; Defined at:
  4710 ;;		line 27 in file "adc.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;		None
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4724 ;;      Params:         0       0       0       0       0       0       0       0       0
  4725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4727 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4728 ;;Total ram usage:        0 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_main
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text40
  4738   0019C4                     __ptext40:
  4739                           	callstack 0
  4740   0019C4                     _adcInit:
  4741                           	callstack 30
  4742   0019C4                     
  4743                           ;adc.c: 29:  (((*(volatile __near unsigned char*)0xF96)) |= (1<<0));
  4744   0019C4  8096               	bsf	150,0,c	;volatile
  4745   0019C6                     
  4746                           ;adc.c: 31:  (*(volatile __near unsigned char*)0xFC2) = 0b00010101;
  4747   0019C6  0E15               	movlw	21
  4748   0019C8  6EC2               	movwf	194,c	;volatile
  4749   0019CA                     
  4750                           ;adc.c: 32:  (*(volatile __near unsigned char*)0xFC1) = 0b00001111;
  4751   0019CA  0E0F               	movlw	15
  4752   0019CC  6EC1               	movwf	193,c	;volatile
  4753   0019CE                     
  4754                           ;adc.c: 33:  (*(volatile __near unsigned char*)0xFC0) = 0b10101010;
  4755   0019CE  0EAA               	movlw	170
  4756   0019D0  6EC0               	movwf	192,c	;volatile
  4757   0019D2  0012               	return		;funcret
  4758   0019D4                     __end_of_adcInit:
  4759                           	callstack 0
  4760                           
  4761                           	psect	rparam
  4762   000000                     
  4763                           	psect	config
  4764                           
  4765                           ;Config register CONFIG1L @ 0x300000
  4766                           ;	unspecified, using default values
  4767                           ;	PLL Prescaler Selection bits
  4768                           ;	PLLDIV = 0x0, unprogrammed default
  4769                           ;	System Clock Postscaler Selection bits
  4770                           ;	CPUDIV = 0x0, unprogrammed default
  4771                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4772                           ;	USBDIV = 0x0, unprogrammed default
  4773   300000                     	org	3145728
  4774   300000  00                 	db	0
  4775                           
  4776                           ;Config register CONFIG1H @ 0x300001
  4777                           ;	Oscillator Selection bits
  4778                           ;	FOSC = HS, HS oscillator (HS)
  4779                           ;	Fail-Safe Clock Monitor Enable bit
  4780                           ;	FCMEN = 0x0, unprogrammed default
  4781                           ;	Internal/External Oscillator Switchover bit
  4782                           ;	IESO = 0x0, unprogrammed default
  4783   300001                     	org	3145729
  4784   300001  0C                 	db	12
  4785                           
  4786                           ;Config register CONFIG2L @ 0x300002
  4787                           ;	unspecified, using default values
  4788                           ;	Power-up Timer Enable bit
  4789                           ;	PWRT = 0x1, unprogrammed default
  4790                           ;	Brown-out Reset Enable bits
  4791                           ;	BOR = 0x3, unprogrammed default
  4792                           ;	Brown-out Reset Voltage bits
  4793                           ;	BORV = 0x3, unprogrammed default
  4794                           ;	USB Voltage Regulator Enable bit
  4795                           ;	VREGEN = 0x0, unprogrammed default
  4796   300002                     	org	3145730
  4797   300002  1F                 	db	31
  4798                           
  4799                           ;Config register CONFIG2H @ 0x300003
  4800                           ;	Watchdog Timer Enable bit
  4801                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4802                           ;	Watchdog Timer Postscale Select bits
  4803                           ;	WDTPS = 0xF, unprogrammed default
  4804   300003                     	org	3145731
  4805   300003  1E                 	db	30
  4806                           
  4807                           ; Padding undefined space
  4808   300004                     	org	3145732
  4809   300004  FF                 	db	255
  4810                           
  4811                           ;Config register CONFIG3H @ 0x300005
  4812                           ;	CCP2 MUX bit
  4813                           ;	CCP2MX = 0x1, unprogrammed default
  4814                           ;	PORTB A/D Enable bit
  4815                           ;	PBADEN = 0x1, unprogrammed default
  4816                           ;	Low-Power Timer 1 Oscillator Enable bit
  4817                           ;	LPT1OSC = 0x0, unprogrammed default
  4818                           ;	MCLR Pin Enable bit
  4819                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4820   300005                     	org	3145733
  4821   300005  83                 	db	131
  4822                           
  4823                           ;Config register CONFIG4L @ 0x300006
  4824                           ;	Stack Full/Underflow Reset Enable bit
  4825                           ;	STVREN = 0x1, unprogrammed default
  4826                           ;	Single-Supply ICSP Enable bit
  4827                           ;	LVP = OFF, Single-Supply ICSP disabled
  4828                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4829                           ;	ICPRT = 0x0, unprogrammed default
  4830                           ;	Extended Instruction Set Enable bit
  4831                           ;	XINST = 0x0, unprogrammed default
  4832                           ;	Background Debugger Enable bit
  4833                           ;	DEBUG = 0x1, unprogrammed default
  4834   300006                     	org	3145734
  4835   300006  81                 	db	129
  4836                           
  4837                           ; Padding undefined space
  4838   300007                     	org	3145735
  4839   300007  FF                 	db	255
  4840                           tosu	equ	0xFFF
  4841                           tosh	equ	0xFFE
  4842                           tosl	equ	0xFFD
  4843                           stkptr	equ	0xFFC
  4844                           pclatu	equ	0xFFB
  4845                           pclath	equ	0xFFA
  4846                           pcl	equ	0xFF9
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           prodh	equ	0xFF4
  4852                           prodl	equ	0xFF3
  4853                           indf0	equ	0xFEF
  4854                           postinc0	equ	0xFEE
  4855                           postdec0	equ	0xFED
  4856                           preinc0	equ	0xFEC
  4857                           plusw0	equ	0xFEB
  4858                           fsr0h	equ	0xFEA
  4859                           fsr0l	equ	0xFE9
  4860                           wreg	equ	0xFE8
  4861                           indf1	equ	0xFE7
  4862                           postinc1	equ	0xFE6
  4863                           postdec1	equ	0xFE5
  4864                           preinc1	equ	0xFE4
  4865                           plusw1	equ	0xFE3
  4866                           fsr1h	equ	0xFE2
  4867                           fsr1l	equ	0xFE1
  4868                           bsr	equ	0xFE0
  4869                           indf2	equ	0xFDF
  4870                           postinc2	equ	0xFDE
  4871                           postdec2	equ	0xFDD
  4872                           preinc2	equ	0xFDC
  4873                           plusw2	equ	0xFDB
  4874                           fsr2h	equ	0xFDA
  4875                           fsr2l	equ	0xFD9
  4876                           status	equ	0xFD8

Data Sizes:
    Strings     142
    Constant    16
    Data        19
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      88
    BANK0           160      0      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    msgs	PTR unsigned char [2][6] size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_10(CODE[16]), STR_2(CODE[16]), STR_3(CODE[16]), 
		 -> STR_4(CODE[16]), STR_5(CODE[16]), STR_6(CODE[16]), STR_7(CODE[16]), 
		 -> STR_8(CODE[16]), STR_9(CODE[16]), 

    sp__getProt	PTR unsigned char  size(1) Largest target is 6
		 -> prot(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _smInit->_varInit
    _varInit->_setAlarmLevel
    _setAlarmLevel->_dsWriteData
    _dsWriteData->_dec2bcd
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _dec2bcd->___awmod
    _bcd2dec->_dsReadData
    _setState->_lcdCommand
    _lcdInt->___awmod
    _lcdInt->___wmul
    _lcdData->_lcdCommand4bits
    ___wmul->___awdiv
    ___awmod->___awdiv
    _lcdInit->_lcdCommand
    _lcdCommand->_Delay2ms
    _lcdCommand->_lcdCommand4bits
    _i2cInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  132213
                                             34 COMRAM     2     2      0
                            _adcInit
                            _adcRead
                             _dsInit
                             _kpInit
                         _lcdCommand
                            _lcdInit
                             _lcdInt
                         _serialInit
                             _smInit
 ---------------------------------------------------------------------------------
 (1) _smInit                                               0     0      0  118547
                          _eventInit
                           _setState
                            _varInit
 ---------------------------------------------------------------------------------
 (2) _varInit                                              8     8      0  117581
                                             26 COMRAM     8     8      0
                            _bcd2dec
                            _dec2bcd
                         _dsReadData
                        _dsWriteData
                      _setAlarmLevel
 ---------------------------------------------------------------------------------
 (3) _setAlarmLevel                                        3     0      3   29957
                                             23 COMRAM     3     0      3
                        _dsWriteData
 ---------------------------------------------------------------------------------
 (4) _dsWriteData                                          3     1      2   28675
                                             20 COMRAM     3     1      2
                            _dec2bcd (ARG)
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (3) _dsReadData                                           5     3      2   48459
                                             13 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (5) _i2cWriteByte                                         5     3      2   27491
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (6) _i2c_start                                            0     0      0    7648
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _i2cReadByte                                          6     5      1   19023
                                              7 COMRAM     6     5      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (6) _i2c_write_bit                                        1     1      0    7692
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (6) _i2c_stop                                             0     0      0    5548
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (7) _clear_SDA                                            0     0      0    2100
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (6) _i2c_read_bit                                         1     1      0    5571
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (7) _read_SDA                                             0     0      0    1724
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (7) _read_SCL                                             0     0      0    1724
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (8) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) _clear_SCL                                            0     0      0    2100
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (8) _digitalWrite                                         6     2      4     748
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (3) _dec2bcd                                              6     4      2    4007
                                             14 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _bcd2dec                                              4     2      2    6411
                                             18 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (2) _setState                                             1     1      0     966
                                              3 COMRAM     1     1      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _eventInit                                            0     0      0       0
                             _kpInit
 ---------------------------------------------------------------------------------
 (3) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdInt                                              10     7      3    9522
                                             14 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                             ___wmul
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              1     1      0     808
                                              2 COMRAM     1     1      0
                          _Delay40us
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3179
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1512
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1668
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              1     1      0    1800
                                              3 COMRAM     1     1      0
                           _Delay2ms
                         _lcdCommand
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0     944
                                              2 COMRAM     1     1      0
                           _Delay2ms
                          _Delay40us
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (4) _lcdCommand4bits                                      2     1      1     718
                                              0 COMRAM     2     1      1
                        _pulseEnable
 ---------------------------------------------------------------------------------
 (5) _pulseEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dsInit                                               0     0      0    1352
                            _i2cInit
 ---------------------------------------------------------------------------------
 (2) _i2cInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (8) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      25
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
   _adcRead
   _dsInit
     _i2cInit
       _pinMode
   _kpInit
   _lcdCommand
     _Delay2ms
     _Delay40us
     _lcdCommand4bits
       _pulseEnable
   _lcdInit
     _Delay2ms
     _lcdCommand
     _lcdCommand4bits
   _lcdInt
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___wmul
       ___awdiv (ARG)
     _lcdData
       _Delay40us
       _lcdCommand4bits
   _serialInit
   _smInit
     _eventInit
       _kpInit
     _setState
       _lcdCommand
     _varInit
       _bcd2dec
         ___awdiv
         ___wmul
         _dsReadData (ARG)
           _i2cReadByte
             _i2c_read_bit
               _I2C_delay
               _clear_SCL
                 _digitalWrite
                 _pinMode
               _read_SCL
                 _digitalRead
                 _pinMode
               _read_SDA
                 _digitalRead
                 _pinMode
             _i2c_stop
               _I2C_delay
               _clear_SDA
                 _digitalWrite
                 _pinMode
               _read_SCL
               _read_SDA
             _i2c_write_bit
               _I2C_delay
               _clear_SCL
               _clear_SDA
               _read_SCL
               _read_SDA
           _i2cWriteByte
             _i2c_read_bit
             _i2c_start
               _I2C_delay
               _clear_SCL
               _clear_SDA
               _read_SCL
               _read_SDA
             _i2c_stop
             _i2c_write_bit
       _dec2bcd
         ___awdiv
         ___awmod
       _dsReadData
       _dsWriteData
         _dec2bcd (ARG)
         _i2cWriteByte (ARG)
       _setAlarmLevel
         _dsWriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       C       5        7.5%
BITBIGSFRhh         69      0       0      20        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      58       1       92.6%
BITBIGSFRl          20      0       0      23        0.0%
BITBIGSFRhlh         8      0       0      21        0.0%
BITBIGSFRhll         4      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      24        0.0%
DATA                 0      0      64       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 02 17:09:17 2024

     __end_of_setAlarmLevel 1622                           l3 19D2                           l6 17AE  
                         l8 17BC                           l9 17DC                           _t 0006  
                        l22 1426                          l25 1736                          l34 183C  
                        l28 1A0E                          l37 16AE                          l83 1098  
                        l84 1094                          l79 0AEC                          l88 1094  
              ___awdiv@sign 0033                          _v0 0020                          _v1 001F  
                        _v2 001E                          _v3 001D                          _de 0023  
                        _ev 0057         ___wmul@multiplicand 0038               ??_i2cReadByte 0036  
     i2cWriteByte@send_stop 0035              i2cReadByte@bit 0038                         l113 0D3A  
                       l203 1160                         l141 19EE                         l150 19AC  
                       l160 1A08                         l411 180E                         l180 1668  
                       l157 1898                         l173 13C4                         l405 14DE  
                       l183 197A                         l504 19C2                         l424 1588  
                       l370 17A6                         l418 1486                         l355 1994  
                       l364 1916                         l188 134C                         l373 176E  
                       l367 1A10                         l615 195C                         l376 18EC  
                       l379 18C2                         l723 0F2E                         l396 186A  
                       l389 16F4                         l743 15FE                         l744 1610  
                       l729 19E0                         l745 1620                         l767 193C  
                       l998 1224                         _key 0010                ___awmod@sign 003B  
                       wreg 0FE8            i2c_write_bit@bit 0034               ?_i2cWriteByte 0035  
    i2cWriteByte@send_start 0037             i2cReadByte@nack 0037             i2cReadByte@byte 003A  
                      l1011 12D4                        l2000 19B2                        l2002 19BA  
                      l2120 1990                        l3000 189A                        l2050 19CE  
                      l2122 1992                        l3010 16DC                        l3002 16B0  
                      l2044 19C4                        l3020 16F0                        l3004 16C0  
                      l3012 16E0                        l3100 1812                        l2046 19C6  
                      l2118 197C                        l3030 185E                        l3022 183E  
                      l3110 1552                        l3102 1538                        l3014 16E4  
                      l3006 16C4                        l2048 19CA                        l3200 1180  
                      l3032 1862                        l3024 1842                        l3040 14A2  
                      l3120 1586                        l3112 1556                        l3016 16E8  
                      l3008 16C8                        l3130 199A                        l3210 11B4  
                      l3202 118E                        l3034 1866                        l3026 1846  
                      l3050 14D2                        l3042 14A6                        l3114 156C  
                      l3018 16EC                        l3140 1870                        l3132 199C  
                      l3124 1996                        l3220 11EE                        l3212 11BC  
                      l3204 1196                        l3060 17E6                        l3028 185A  
                      l3052 14D6                        l3044 14AA                        l3036 148A  
                      l3116 1572                        l3108 1544                        l3300 15E8  
                      l3150 1886                        l3134 186C                        l3230 1214  
                      l3222 11F6                        l3214 11C4                        l3206 119A  
                      l3062 17FA                        l3054 14DA                        l3046 14BE  
                      l3038 149A                        l3118 1582                        l3302 15EC  
                      l3152 1888                        l3160 1368                        l3232 121C  
                      l3224 11F8                        l3216 11D2                        l3208 11A2  
                      l3240 1238                        l3064 1800                        l3056 17DE  
                      l3048 14CE                        l3072 142A                        l3304 1602  
                      l3320 0D48                        l3306 18EE                        l3146 1874  
                      l3170 1392                        l3162 1376                        l3154 1350  
                      l3226 11FE                        l3218 11D8                        l3250 126C  
                      l3242 1240                        l3410 1126                        l3402 10D4  
                      l3066 1804                        l3058 17E2                        l3090 146E  
                      l3082 1442                        l3074 143A                        l3330 0DDE  
                      l3322 0D58                        l3148 1876                        l3180 13B8  
                      l3172 1394                        l3164 137C                        l3156 1360  
                      l3228 1204                        l3260 12A8                        l3252 1274  
                      l3244 1244                        l3236 1226                        l3308 1960  
                      l3412 1156                        l3404 10E8                        l3068 180C  
                      l3092 1472                        l3084 1458                        l3076 143E  
                      l3340 0E78                        l3332 0E08                        l3324 0D68  
                      l3420 1948                        l3182 13BE                        l3174 13A2  
                      l3166 137E                        l3158 1366                        l3262 12AE  
                      l3254 127C                        l3246 1252                        l3238 122A  
                      l3406 1104                        l3094 1482                        l3086 145C  
                      l3350 0F0C                        l3342 0E9C                        l3334 0E2C  
                      l3326 0D8C                        l3318 0D3C                        l3422 194C  
                      l3360 17AC                        l3184 13C0                        l3176 13A8  
                      l3168 138C                        l3192 1162                        l3256 128A  
                      l3264 12B4                        l3248 125A                        l3408 1108  
                      l3272 13C6                        l3088 145E                        l3352 0F14  
                      l3344 0EA4                        l3336 0E34                        l3328 0DBE  
                      l3416 193E                        l3362 17C2                        l3098 1A04  
                      l3178 13AA                        l3290 163A                        l3194 1166  
                      l3266 12C4                        l3258 12A0                        l3186 1918  
                      l3354 19D6                        l3274 141E                        l3282 166A  
                      l3346 0EBE                        l3338 0E4E                        l3418 1942  
                      l3364 17C8                        l3372 1A0A                        l3292 164C  
                      l3196 1174                        l3268 12CC                        l3188 1934  
                      l1860 19E6                        l3356 19DA                        l2900 0A36  
                      l3284 16A6                        l3348 0EE8                        l3620 158A  
                      l3366 17D0                        l3358 17A8                        l3294 165C  
                      l3382 12E6                        l3374 12D6                        l3198 117C  
                      l3390 109A                        l1862 19EA                        l3278 16F6  
                      l2910 0ACE                        l2902 0A56                        l3630 15A2  
                      l3622 1592                        l3368 17D4                        l3296 1664  
                      l3288 1624                        l3384 12EA                        l3376 12E2  
                      l3392 10A8                        l1856 19E2                        l2904 0A78  
                      l2920 0F74                        l2912 0F30                        l3640 15C0  
                      l3632 15A6                        l3624 1596                        l3386 12EC  
                      l3394 10B0                        l1858 19E4                        l2906 0A94  
                      l2930 0FD8                        l2922 0F90                        l2914 0F4C  
                      l3298 15D8                        l3634 15AA                        l3626 159A  
                      l3388 12FC                        l3396 10B6                        l2908 0AAE  
                      l3636 15AE                        l3628 159E                        l2950 0AEE  
                      l3398 10C2                        l3638 15BA                        l2960 0B7A  
                      l2952 0B0A                        l2880 0910                        l2872 08A0  
                      l2944 104C                        l2936 1004                        l2928 0FBC  
                      l2970 0C04                        l2962 0B8C                        l2954 0B1C  
                      l2890 09A4                        l2882 092C                        l2874 08BC  
                      l2946 1068                        l2938 1020                        l2980 0CA0  
                      l2972 0C28                        l2964 0BB0                        l2956 0B3C  
                      l2892 09BE                        l2884 0946                        l2876 08CE  
                      l2982 0CC6                        l2974 0C4E                        l2966 0BD6  
                      l2958 0B5E                        l1998 19AE                        l2894 09DE  
                      l2886 0966                        l2878 08EE                        l2990 1770  
                      l2984 0CE2                        l2976 0C6A                        l2968 0BF2  
                      l2896 0A00                        l2888 0988                        l2986 0CF4  
                      l2978 0C7C                        l2898 0A1C                        l2994 1738  
                      l2988 0D18                        l2998 18C4                        STR_1 0873  
                      STR_2 0843                        STR_3 0873                        STR_4 0843  
                      STR_5 0853                        STR_6 0833                        STR_7 0853  
                      STR_8 0833                        STR_9 0863                        u2000 0A1C  
                      u2001 0A18                        u2010 0A36                        u2011 0A32  
                      u2100 0F90                        u2101 0F8C                        u2040 0A94  
                      u2024 0A48                        u2120 0FD8                        u2041 0A90  
                      u2025 0A44                        u2121 0FD4                        u2050 0AAE  
                      u2034 0A68                        u2114 0FA6                        u2051 0AAA  
                      u2035 0A64                        u2115 0FA2                        u2300 0C6A  
                      u2220 0B7A                        u2204 0B2E                        u2140 1020  
                      u2301 0C66                        u2221 0B76                        u2205 0B2A  
                      u2141 101C                        _LATA 0F89                        u2310 0C7C  
                      u2230 0B8C                        u2214 0B4E                        u2134 0FEE  
                      u2311 0C78                        u2231 0B88                        u2215 0B4A  
                      u2135 0FEA                        u2064 0AC0                        u2160 1068  
                      u2080 0F4C                        u2400 176C                        u2065 0ABC  
                      u2161 1064                        u2081 0F48                        u2401 1766  
                      u2074 0AE0                        u2154 1036                        u2410 176E  
                      u2075 0ADC                        u2155 1032                        u2340 0CE2  
                      u2324 0C92                        u2260 0BF2                        u2244 0BA2  
                      u2180 0B0A                        u2420 16C0                        u2500 1452  
                      u2341 0CDE                        u2325 0C8E                        u2261 0BEE  
                      u2245 0B9E                        u2181 0B06                        u2421 16BC  
                      u2501 144C                        u2350 0CF4                        u2334 0CB6  
                      u2270 0C04                        u2254 0BC6                        u2190 0B1C  
                      u2174 107E                        u2094 0F5E                        u2430 16DC  
                      u2510 1454                        u2351 0CF0                        u2335 0CB2  
                      u2271 0C00                        u2255 0BC2                        u2191 0B18  
                      u2175 107A                        u2095 0F5A                        u2431 16D8  
                      u2600 1376                        u2440 185A                        u2520 146E  
                      u2601 1372                        u2441 1856                        u2521 146A  
                      u2610 138C                        u2450 149A                        u2530 1482  
                      u2611 1388                        u2451 1496                        u2531 147E  
                      u2364 0D0A                        u2284 0C1A                        u2620 13A2  
                      u2700 1238                        u2380 17A4                        u2460 14BE  
                      u2540 156C                        u2365 0D06                        u2285 0C16  
                      u2621 139E                        u2701 1234                        u2381 179E  
                      u2461 14BA                        u2541 1568                        u2374 0D2E  
                      u2294 0C3E                        u2630 13B8                        u2710 1252  
                      u2390 17A6                        u2470 14CE                        u2550 1582  
                      u2375 0D2A                        u2295 0C3A                        u2631 13B4  
                      u2711 124E                        u2471 14CA                        u2551 157E  
                      u2560 19AC                        u2640 1174                        u2720 126C  
                      u1920 092C                        u1904 08E0                        u2480 17FA  
                      u2800 0D88                        u2561 19A8                        u2641 1170  
                      u2721 1268                        u1921 0928                        u1905 08DC  
                      u2481 17F6                        u2801 0D82                        u2570 1886  
                      u2650 118E                        u2730 128A                        u1930 0946  
                      u1914 0900                        u2490 143A                        u2810 0D8A  
                      u2571 1882                        u2651 118A                        u2731 1286  
                      u1931 0942                        u1915 08FC                        u2491 1436  
                      u2580 1898                        u2660 11B4                        u2740 12A0  
                      u2900 1126                        u2820 0DBE                        u2581 1894  
                      u2661 11B0                        u2741 129C                        u2901 1122  
                      u2821 0DBA                        u2590 1360                        u2670 11D2  
                      u2750 12C4                        u2830 0E08                        u2591 135C  
                      u2671 11CE                        u2751 12C0                        u2831 0E04  
                      u2760 164C                        u2680 11EE                        u1960 09A4  
                      u1944 0958                        u1880 08BC                        u2840 0E78  
                      u2761 1648                        u2681 11EA                        u1961 09A0  
                      u1945 0954                        u1881 08B8                        u2841 0E74  
                      u2770 165C                        u2690 1214                        u1970 09BE  
                      u1954 0978                        u1890 08CE                        u2850 0EE8  
                      u2771 1658                        u2691 1210                        u1971 09BA  
                      u1955 0974                        u1891 08CA                        u2851 0EE4  
                      u2860 17BC                        u2780 15E8                        u2861 17B8  
                      u2781 15E4                        u2870 12FC                        u2871 12F8  
                      u2880 10A8                        u1984 09D0                        u2881 10A4  
                      u1985 09CC                        u2890 10D0                        u1994 09F0  
                      u2891 10CC                        u1995 09EC                        _main 158A  
                      _msgs 0060                        _time 000A                        _prot 0028  
                      fsr1l 0FE1               ?_i2c_read_bit 002E                        prodh 0FF4  
                      prodl 0FF3                        start 0000                ___param_bank 0000  
           __end_of_i2cInit 1918              _alarmLevelHigh 0018             __end_of_bcd2dec 1738  
                     ?_main 002E             __end_of_dec2bcd 1428             __end_of_adcInit 19D4  
           __end_of_adcRead 17DE             __end_of___awdiv 1226            ?_lcdCommand4bits 002E  
                     STR_10 0883                       STR_11 0893                       STR_17 0822  
                     STR_18 0811             __end_of___awmod 12D6             ___awdiv@divisor 0030  
           ___awdiv@counter 0032                       _PORTA 0F80                       _PORTB 0F81  
                     _PORTC 0F82                       _PORTD 0F83                       _PORTE 0F84  
                     _TRISA 0F92                       _TRISB 0F93                       _TRISC 0F94  
                     _TRISD 0F95                       _TRISE 0F96             __end_of_lcdData 197C  
           __end_of_lcdInit 134E              ??_i2cWriteByte 0037         __end_of_i2cReadByte 158A  
                     _index 0016             __end_of_pinMode 0D3C                       _valor 0027  
                     _state 001A                       main@v 0050             __end_of_varInit 0F30  
              dec2bcd@value 003C                       tablat 0FF5           __end_of_I2C_delay 1A12  
             _i2c_write_bit 1488                       status 0FD8              ??_i2c_read_bit 0034  
          __end_of_Delay2ms 189A        __end_of_digitalWrite 0AEE             __initialization 14E0  
              __end_of_main 15D8             i2cWriteByte@bit 0038            __end_of_i2c_stop 186C  
                    ??_main 0050               __activetblptr 0002            ___awdiv@dividend 002E  
            ?_i2c_write_bit 002E                   ??_i2cInit 0034          dsWriteData@address 0042  
                 ??_bcd2dec 0042                      _dTimer 000E                   ??_dec2bcd 003E  
                    ___wmul 1918                   ??_adcInit 002E                   ??_adcRead 0030  
                 ??___awdiv 0032                   ??___awmod 003A                      _dsInit 1A0A  
                    _lcdInt 109A                      _kpInit 19E2            __end_of_read_SDA 1770  
          __end_of_read_SCL 17A8                      _ev_ant 0014                      _smInit 193E  
                    clear_0 1526            ___awdiv@quotient 0034             ___awmod@divisor 0038  
                 ??_lcdData 0030                      isa$std 0001                 _i2cReadByte 1536  
                 ??_lcdInit 0031             ___awmod@counter 003A            __end_of_setState 19E2  
              __pdataCOMRAM 0052                   ??_pinMode 0032                __mediumconst 0000  
                 ??_varInit 0048                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8           __end_of_Delay40us 19AE                  __accesstop 0060  
   __end_of__initialization 152C               ___rparam_used 0001                ?_pulseEnable 002E  
               pinMode@type 0030        __end_of_i2cWriteByte 1488              __pcstackCOMRAM 002E  
              __pidataBANK0 19F0            i2cWriteByte@byte 0036           __end_of_i2c_start 16F6  
      __end_of_i2c_read_bit 1810                   ?_Delay2ms 002E             ??_i2c_write_bit 0034  
                 ?_i2c_stop 002E                  _dsReadData 166A            dsReadData@result 003E  
                _lcdCommand 1622                     ?___wmul 0036                     ?_dsInit 002E  
                   ?_lcdInt 003C                     ?_kpInit 002E                     ?_smInit 002E  
                ??_Delay2ms 002E        i2cReadByte@send_stop 0035                _digitalWrite 08A0  
         __end_of_clear_SDA 18C4           __end_of_clear_SCL 18EE                   ?_read_SDA 002E  
                 ?_read_SCL 002E                  ??_i2c_stop 0034                     _i2cInit 18EE  
                 _I2C_delay 1A10                     __Hparam 0000                   ?_setState 002E  
                   __Lparam 0000             kpDebounce@tempo 0026                     _bcd2dec 16F6  
                   _dec2bcd 13C6                  _estado_ant 001B                     _adcInit 19C4  
                   _adcRead 17A8                     ___awdiv 1162                     ___awmod 1226  
              __psmallconst 0800                     __pcinit 14E0                     _lcdData 195E  
                   __ramtop 0800                     _lcdInit 12D6                     __ptext0 158A  
                   __ptext1 193E                     __ptext2 0D3C                     __ptext3 15D8  
                   __ptext4 1810                     __ptext5 166A                     __ptext6 1428  
                   __ptext7 16B0                     __ptext8 1536                     __ptext9 1488  
         __end_of_eventInit 19C4                     _display 0021                     _key_ant 0012  
                   _pinMode 0AEE            ___awmod@dividend 0036                     _varInit 0D3C  
                   lcdInt@i 0044                     lcdInt@j 0040                   Delay2ms@j 002E  
                 Delay2ms@k 002F                     _started 0022         kpDebounce@valorNovo 0025  
      end_of_initialization 152C                  ??_read_SDA 0034                  ??_read_SCL 0034  
             __Lmediumconst 0000                 ?_dsReadData 003B              digitalRead@pin 002E  
                ?_I2C_delay 002E                  ??_setState 0031                  _serialInit 197C  
                   postdec1 0FE5                 ?_lcdCommand 002E                     postinc0 0FEE  
             _setAlarmLevel 15D8               ??_digitalRead 0030                ?_i2cReadByte 0035  
           i2c_read_bit@bit 0034              _valor@ssd$F319 0801                  _prot_ready 001C  
              _i2cWriteByte 1428               ??_dsWriteData 0044                   _Delay40us 1996  
              _i2c_read_bit 17DE              ?_setAlarmLevel 0045               _alarmLevelLow 0017  
            adcRead@ADvalor 0030              __end_of___wmul 193E              __end_of_dsInit 1A10  
             __pidataCOMRAM 19FC              __end_of_lcdInt 1162              __end_of_kpInit 19F0  
    __end_of_valor@ssd$F319 0811              __end_of_smInit 195E         start_initialization 14E0  
       __end_of_digitalRead 109A                   _i2c_start 16B0                  ?_Delay40us 002E  
         ??_lcdCommand4bits 002F                 ??_I2C_delay 002E         __end_of_dsWriteData 183E  
               ?_serialInit 002E                    ??___wmul 003A                    ??_dsInit 0034  
                  ??_lcdInt 003F                    ??_kpInit 002E                 __pdataBANK0 0060  
                  ??_smInit 0050           dsReadData@address 003B                   _dTimerMax 000C  
               __pbssCOMRAM 0001                  pinMode@pin 002E                  ?_i2c_start 002E  
          setState@newState 0031       __end_of_i2c_write_bit 14E0                    ?_i2cInit 002E  
           ??_setAlarmLevel 0048                   _clear_SDA 189A                   _clear_SCL 18C4  
                  ?_bcd2dec 0040                    ?_dec2bcd 003C                    ?_adcInit 002E  
                  ?_adcRead 002E                    ?___awdiv 002E                    ?___awmod 0036  
               _digitalRead 0F30                    ?_lcdData 002E                    ?_lcdInit 002E  
             lcdCommand@cmd 0030                 __smallconst 0800                    ?_pinMode 002E  
                  ?_varInit 002E                   _eventInit 19AE                 _dsWriteData 1810  
setAlarmLevel@newAlarmLevel 0045                 ??_Delay40us 002E              ___wmul@product 003A  
              ??_dsReadData 003D               lcdInt@divisor 0042                  ?_clear_SDA 002E  
                ?_clear_SCL 002E                   lcdInt@val 003C                ??_lcdCommand 0030  
         ___wmul@multiplier 0036       kpDebounce@valorAntigo 0024                    _Delay2ms 186C  
        __end_of_dsReadData 16B0                  ?_eventInit 002E                 ??_i2c_start 0034  
                 copy_data0 14F4                   copy_data1 1514          __end_of_lcdCommand 166A  
              lcdData@valor 0030                    _i2c_stop 183E                    __Hrparam 0000  
             ??_pulseEnable 002E                    __Lrparam 0000            dsWriteData@value 0044  
           _lcdCommand4bits 134E                    __ptext10 183E                    __ptext11 189A  
                  __ptext20 16F6                    __ptext12 17DE                    __ptext21 19D4  
                  __ptext13 1738                    __ptext30 12D6                    __ptext22 19AE  
                  __ptext14 1770                    __ptext31 1622                    __ptext23 19E2  
                  __ptext15 0F30                    __ptext40 19C4                    __ptext32 134E  
                  __ptext24 197C                    __ptext16 18C4                    __ptext33 1A04  
                  __ptext25 109A                    __ptext17 08A0                    __ptext34 1996  
                  __ptext26 195E                    __ptext18 1A10                    __ptext35 186C  
                  __ptext27 1918                    __ptext19 13C6                    __ptext36 1A0A  
                  __ptext28 1226                    __ptext37 18EE                    __ptext29 1162  
                  __ptext38 0AEE                    __ptext39 17A8               kpDebounce@F13 0001  
             kpDebounce@F15 0052                    _language 0019                    _read_SDA 1738  
                  _read_SCL 1770                lcdInt@digNum 003E                 ??_clear_SDA 0034  
               ??_clear_SCL 0034                ??_serialInit 002E                    _setState 19D4  
                Delay40us@j 002E             setAlarmLevel@lh 0047                    lcdInit@i 0031  
                  isa$xinst 0000         __end_of_pulseEnable 1A0A                 _varInit$520 004A  
               _varInit$521 004C                 _varInit$522 004E                 ??_eventInit 002E  
             ?_digitalWrite 002E          __end_of_serialInit 1996           digitalWrite@value 0030  
              bcd2dec@value 0040                ?_digitalRead 002E     __end_of_lcdCommand4bits 13C6  
            ??_digitalWrite 0032             digitalWrite@pin 002E                ?_dsWriteData 0042  
       lcdCommand4bits@data 002E          lcdCommand4bits@cmd 002F                 _pulseEnable 1A04  
